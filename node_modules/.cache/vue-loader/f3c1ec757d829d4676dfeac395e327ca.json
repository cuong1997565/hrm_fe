{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/plansHrm/Form_sub.vue?vue&type=style&index=0&id=8dabb89e&scoped=true&lang=css&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/plansHrm/Form_sub.vue","mtime":1543479403870},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.v-input.v-text-field {\n  margin-top: 0px;\n}\n.v-form > .container > .layout > .flex {\n  padding: 3px;\n}\n.v-text-field {\n  margin-top: 0px;\n}\n",{"version":3,"sources":["Form_sub.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Form_sub.vue","sourceRoot":"src/views/plansHrm","sourcesContent":["<template>\n  <v-form @submit.prevent=\"validateBeforeSubmit\">\n    <v-container>\n      <v-layout row wrap class=\"mt-3\">\n        <!-- <v-flex xs8> -->\n        <v-flex md3>\n          <h3>Chi nhánh</h3>\n        </v-flex>\n        <v-flex md3 class=\"pr-2\">\n          <h3>Phòng ban</h3>\n        </v-flex>\n        <v-flex md3 class=\"pr-2\">\n          <h3>Chức danh</h3>\n        </v-flex>\n        <v-flex xs2 class=\"pr-2\">\n          <h3>Số lượng</h3>\n        </v-flex>\n      </v-layout>\n\n      <v-layout row wrap align-center class=\"mb-1 mt-1\" :key=\"index\" v-for=\"(department, index) in plan.details\">\n        <v-flex xs3>\n          <v-autocomplete\n          tabindex=\"6\"\n          class=\"pr-2\"\n          v-validate=\"'required'\"\n          :loading=\"isLoadingBranch && branchIndex === index\"\n          v-model=\"plan.details[index].branch_id\"\n          :items=\"plan.details[index].branchs\"\n          item-text=\"name\"\n          @keyup=\"searchBranch(index,$event)\"\n          item-value=\"id\"\n          :error-messages=\"errors.has(`branch_${index}`) ? errors.collect(`branch_${index}`) : []\"\n          :data-vv-as=\"$t('label.name_branch')\"\n          :name=\"`branch_${index}`\"\n          placeholder=\"Chi nhánh\"\n          @change=\"changeBranch(index)\"\n          clearable\n          >\n            <!-- @click:clear=\"resetBranch(index)\"\n            clearable -->\n            <template slot=\"no-data\">\n              <v-list-tile>\n                <v-list-tile-title style=\"color:blue\">\n                  Không tìm thấy chi nhánh\n                </v-list-tile-title>\n              </v-list-tile>\n            </template>\n          </v-autocomplete>\n        </v-flex>\n\n        <v-flex xs3 id=\"department_text_long\">\n          <v-select\n          tabindex=\"7\"\n          v-validate=\"'required'\"\n          v-model=\"plan.details[index].department_id\"\n          label=\"Phòng ban\"\n          :error-messages=\"errors.has(`department_${index}`) ? errors.collect(`department_${index}`) : []\"\n          :data-vv-as=\"$t('label.name_department')\"\n          :name=\"`department_${index}`\"\n          :disabled=\"!plan.details[index].branch_id\"\n          :items=\"getDepartmentByBranch(plan.details[index].branch_id)\"\n          item-text=\"name\"\n          item-value=\"id\"\n          class=\"pr-2\"\n          placeholder=\"Phòng ban\"\n          single-line\n          @change=\"changeDepartment\">\n          <template slot=\"no-data\">\n            <v-list-tile>\n              <v-list-tile-title style=\"color:blue\">\n                Không tìm thấy phòng ban\n              </v-list-tile-title>\n            </v-list-tile>\n          </template>\n        </v-select>\n      </v-flex>\n\n      <v-flex xs3>\n        <v-tooltip bottom>\n          <v-autocomplete\n          tabindex=\"8\"\n          slot=\"activator\"\n          v-validate=\"'required'\"\n          :loading=\"isLoadingPosition && positionIndex === index\"\n          v-model=\"plan.details[index].position_id\"\n          :items=\"plan.details[index].positions\"\n          item-text=\"name\"\n          item-value=\"id\"\n          :error-messages=\"errors.has(`position_${index}`) ? errors.collect(`position_${index}`) : []\"\n          :name=\"`position_${index}`\"\n          @keyup=\"searchPosition(index,$event)\"\n          placeholder=\"Chức danh\"\n          single-line\n          :data-vv-as=\"$t('label.name_position')\"\n          class='pr-2'\n          clearable\n          @click:clear=\"clearPositon(index)\"\n          @change=\"changePosition\">\n          <template slot=\"no-data\">\n            <v-list-tile>\n              <v-list-tile-title style=\"color:blue\">\n                Không tìm thấy chức danh\n              </v-list-tile-title>\n            </v-list-tile>\n          </template>\n        </v-autocomplete>\n        <span>Chọn chức danh</span>\n      </v-tooltip>\n    </v-flex>\n    <v-flex xs2>\n      <v-text-field\n      tabindex=\"9\"\n      :error-messages=\"errors.has(`quantity_${index}`) ? errors.collect(`quantity_${index}`) : []\"\n      v-validate=\"'required|numeric|min_value:1'\"\n      :data-vv-as=\"$t('label.quantity')\"\n      :name=\"`quantity_${index}`\"\n      v-model=\"plan.details[index].quantity\"\n      type=\"number\"\n      placeholder=\"Số lượng\"\n      @change=\"changeQuantity\"\n      >\n    </v-text-field>\n\n  </v-flex>\n  <v-tooltip bottom xs1 style=\"flex-basis: 50px;\">\n    <v-btn slot=\"activator\" class=\"mb-3 ml-4\"\n    icon color=\"error\"\n    @click=\"deleteDepartment(index)\"\n    >\n    <v-icon>delete</v-icon>\n  </v-btn>\n  <span>Xóa</span>\n</v-tooltip>\n</v-layout>\n<v-tooltip bottom style=\"float: right; margin-top: -3px; margin-right: 0px;\">\n  <v-btn slot=\"activator\" class=\"mr-3 mt-0\"\n  icon color=\"primary\"\n  id=\"addDepartment\"\n  @click=\"addDepartment()\"\n  >\n  <v-icon>add</v-icon>\n</v-btn>\n<span>Thêm chức danh</span>\n</v-tooltip>\n</v-container>\n<dialog-confirm v-model=\"dialogDeleteDetail\" @input=\"removeDetail\"/>\n\n</v-form>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { filter, debounce, cloneDeep } from 'lodash'\nimport DialogConfirm from '@/components/DialogConfirm'\nexport default {\n  name: 'PlanFormSub',\n  components: {\n    DialogConfirm\n  },\n  data () {\n    return {\n      isLoadingBranch: false,\n      branchIndex: 0,\n      isLoadingPosition: false,\n      positionIndex: 0,\n      dialogDeleteDetail: false,\n      idDeleteDetail: null,\n      departments: [],\n      plan: {\n        details: []\n      }\n    }\n  },\n  props: {\n    index: {\n      type: Number,\n      default: 0\n    },\n    dataPlan: {\n      type: Object,\n      default: () => {\n        return {\n          details: []\n        }\n      }\n    }\n  },\n  computed: {\n    ...mapGetters('Department', ['departmentDetail']),\n    ...mapGetters('Branch', ['branchAll']),\n    ...mapGetters('Position', ['positionAll'])\n  },\n  watch: {\n    dataPlan (val) {\n      this.setInitData()\n    }\n  },\n  methods: {\n    ...mapActions(['fetchApi']),\n    ...mapActions('Department', ['fetchDepartment']),\n    ...mapActions('Position', ['fetchPosition']),\n    ...mapActions('PlanDetails', ['deletePlanDetail']),\n    ...mapActions('Branch', ['getBranchs']),\n    addDepartment () {\n      this.plan.details.push({})\n      this.plan.details[this.plan.details.length - 1].branchs = this.branchAll\n      this.plan.details[this.plan.details.length - 1].positions = this.positionAll\n      this.plan.details[this.plan.details.length - 1].loadingBranch = false\n      this.emitDepartment()\n    },\n    changeBranch (index) {\n      this.emitDepartment()\n    },\n    getDepartmentByBranch (branchId) {\n      let array = []\n      if (this.departments.length) {\n        array = filter(this.departments, function (object) {\n          return parseInt(object.branch_id) === parseInt(branchId)\n        })\n      }\n      return array\n    },\n    changePosition () {\n      this.emitDepartment()\n    },\n    changeDepartment () {\n      this.emitDepartment()\n    },\n    changeQuantity () {\n      this.emitDepartment()\n    },\n    emitDepartment () {\n      this.$emit('positionAndDepartment', this.plan.details)\n    },\n    setInitData () {\n      let dataPlan = { ...this.dataPlan }\n      this.plan = { ...this.plan, ...dataPlan }\n      if (this.dataPlan.details.data) {\n        this.plan.details = this.dataPlan.details.data.length ? cloneDeep(this.plan.details.data) : [{}]\n        if (this.plan.details.length) {\n          this.plan.details.map((item) => {\n            if (item.department) {\n              item.branch_id = item.department.data.branch_id\n            }\n            item.loadingBranch = false\n            return item\n          })\n        }\n      } else {\n        if (!this.branchAll.length) {\n          this.getBranchs({\n            params: { limit: 10 },\n            cb: (response) => {\n              this.plan.details[0].branchs = response\n            }\n          })\n        }\n        if (!this.positionAll.length) {\n          this.fetchPosition({\n            params: { limit: 10 },\n            cb: (response) => {\n              this.plan.details[0].positions = response\n            }\n          })\n        }\n      }\n    },\n    searchBranch: debounce(function (index, value) {\n      if (value.target.value === '') {\n        this.plan.details[index].branch_id = ''\n      }\n      this.branchIndex = index\n      this.isLoadingBranch = true\n      this.plan.details[index].department_id = ''\n      this.plan.details[index].branchs = []\n      this.getBranchs({\n        params: { q: value.target.value, limit: 10 },\n        cb: (response) => {\n          this.plan.details[index].branchs = response\n          this.isLoadingBranch = false\n        }\n      })\n      // setTimeout(() => { this.plan.details[index].loadingBranch = false }, 500)\n    }, 500),\n    searchPosition: debounce(function (index, value) {\n      this.isLoadingPosition = true\n      this.positionIndex = index\n      this.plan.details[index].positions = []\n      this.fetchPosition({\n        params: { q: value.target.value, limit: 10 },\n        cb: (response) => {\n          this.plan.details[index].positions = response\n          this.isLoadingPosition = false\n        }\n      })\n    }, 500),\n    resetBranch (index) {\n      console.log(1)\n      this.plan.details[index].department_id = ''\n      this.getBranchs({\n        params: { limit: 10 },\n        cb: (response) => {\n          this.plan.details[index].branchs = response\n          console.log('this.branchAll', this.branchAll)\n        }\n      })\n    },\n    clearPositon (index) {\n      this.plan.details[index].position_id = ''\n      this.fetchPosition({\n        params: { q: '', limit: 10 },\n        cb: (response) => {\n          this.plan.details[index].positions = response\n        }\n      })\n    },\n    removeDetail (confirm) {\n      if (confirm) {\n        this.dialogDeleteDetail = false\n        this.deletePlanDetail({\n          id: this.plan.details[this.idDeleteDetail].id\n        })\n        this.plan.details.splice(this.idDeleteDetail, 1)\n        this.emitDepartment()\n      }\n    },\n    deleteDepartment (index) {\n      this.plan.details.splice(index, 1)\n    },\n    // validator\n    validateBeforeSubmit () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n        } else {\n          this.$store.dispatch('showNotify', {\n            text: this.$t('alert.invalid'),\n            color: 'warning'\n          })\n        }\n      })\n    }\n  },\n  mounted () {\n    if (!this.dataPlan.details.data) {\n      this.plan.details.push({})\n      this.plan.details[0].branchs = this.branchAll\n      this.plan.details[0].positions = this.positionAll\n      this.plan.details[0].loadingBranch = false\n    }\n    if (!this.branchAll.length) {\n      this.getBranchs({ params: { limit: 10 } })\n    }\n    if (!this.positionAll.length) {\n      this.fetchPosition({ params: { limit: 10 } })\n    }\n  },\n  created () {\n    // get department\n    this.fetchApi({\n      url: 'departments',\n      method: 'GET',\n      params: {\n        limit: -1\n      },\n      success: (response) => {\n        this.departments = response.data\n      }\n    })\n    !!this.dataPlan && this.setInitData()\n  }\n}\n</script>\n\n<style scoped>\n  .v-input.v-text-field {\n    margin-top: 0px;\n  }\n  .v-form > .container > .layout > .flex {\n    padding: 3px;\n  }\n  .v-text-field {\n    margin-top: 0px;\n  }\n</style>\n\n<style>\n  #department_text_long .v-select__selection {\n    overflow: hidden !important;\n    white-space: nowrap !important;\n    text-overflow: ellipsis !important;\n    width: 180px;\n  }\n  #department_text_long .v-select__selection input::after {\n    width: 180px;\n    content: \"...\";\n  }\n</style>\n"]}]}