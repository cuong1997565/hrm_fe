{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/city.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/city.js","mtime":1538377839382},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1534394480737},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":1534394476611},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":1534394478618}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations;\n\nimport { SET_CITIES, SET_DISTRICTS, SET_INITIAL_STATE } from '../mutation-types';\n\nvar initState = function initState() {\n  return {\n    city: {},\n    districts: {},\n    branches: {}\n  };\n};\n\nvar state = {\n  city: initState().city,\n  districts: initState().districts,\n  branches: initState().branches\n};\nvar actions = {\n  setCity: function setCity(_ref, payload) {\n    var commit = _ref.commit;\n    var city = payload.city;\n    commit(SET_CITIES, city);\n  },\n  getCity: function getCity(_ref2, payload) {\n    var commit = _ref2.commit,\n        dispatch = _ref2.dispatch;\n    dispatch('fetchApi', {\n      url: \"cities\",\n      method: 'GET',\n      success: function success(response) {\n        commit(SET_CITIES, response.data);\n      }\n    }, {\n      root: true\n    });\n  },\n  getDistrictByCity: function getDistrictByCity(_ref3, payload) {\n    var commit = _ref3.commit,\n        dispatch = _ref3.dispatch;\n    var cityId = payload.cityId,\n        cb = payload.cb;\n    dispatch('fetchApi', {\n      url: \"cities/\".concat(cityId, \"?include=districts\"),\n      method: 'GET',\n      success: function success(response) {\n        commit(SET_DISTRICTS, response.data);\n        cb && cb(response.data);\n      }\n    }, {\n      root: true\n    });\n  }\n};\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_CITIES, function (state, city) {\n  state.city = city;\n}), _defineProperty(_mutations, SET_INITIAL_STATE, function (state) {\n  state.city = initState().city;\n}), _defineProperty(_mutations, SET_DISTRICTS, function (state, districts) {\n  state.districts = districts;\n}), _mutations);\nvar getters = {\n  cityAll: function cityAll(state) {\n    return state.city;\n  },\n  districtByCity: function districtByCity(state) {\n    return state.districts;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["src/store/modules/city.js"],"names":["SET_CITIES","SET_DISTRICTS","SET_INITIAL_STATE","initState","city","districts","branches","state","actions","setCity","payload","commit","getCity","dispatch","url","method","success","response","data","root","getDistrictByCity","cityId","cb","mutations","getters","cityAll","districtByCity","namespaced"],"mappings":";;;;AAAA,SACEA,UADF,EAEEC,aAFF,EAGEC,iBAHF,QAIO,mBAJP;;AAMA,IAAMC,YAAY,SAAZA,SAAY,GAAM;AACtB,SAAO;AACLC,UAAM,EADD;AAELC,eAAW,EAFN;AAGLC,cAAU;AAHL,GAAP;AAKD,CAND;;AAQA,IAAMC,QAAQ;AACZH,QAAMD,YAAYC,IADN;AAEZC,aAAWF,YAAYE,SAFX;AAGZC,YAAUH,YAAYG;AAHV,CAAd;AAMA,IAAME,UAAU;AACdC,SADc,yBACOC,OADP,EACgB;AAAA,QAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,QACtBP,IADsB,GACbM,OADa,CACtBN,IADsB;AAE5BO,WAAOX,UAAP,EAAmBI,IAAnB;AACD,GAJa;AAKdQ,SALc,0BAKiBF,OALjB,EAK0B;AAAA,QAA7BC,MAA6B,SAA7BA,MAA6B;AAAA,QAArBE,QAAqB,SAArBA,QAAqB;AACtCA,aACE,UADF,EAEE;AACEC,mBADF;AAEEC,cAAQ,KAFV;AAGEC,eAAS,iBAACC,QAAD,EAAc;AACrBN,eAAOX,UAAP,EAAmBiB,SAASC,IAA5B;AACD;AALH,KAFF,EASE;AAAEC,YAAM;AAAR,KATF;AAWD,GAjBa;AAkBdC,mBAlBc,oCAkB2BV,OAlB3B,EAkBoC;AAAA,QAA7BC,MAA6B,SAA7BA,MAA6B;AAAA,QAArBE,QAAqB,SAArBA,QAAqB;AAAA,QAC1CQ,MAD0C,GAC3BX,OAD2B,CAC1CW,MAD0C;AAAA,QAClCC,EADkC,GAC3BZ,OAD2B,CAClCY,EADkC;AAEhDT,aACE,UADF,EAEE;AACEC,4BAAeO,MAAf,uBADF;AAEEN,cAAQ,KAFV;AAGEC,eAAS,iBAACC,QAAD,EAAc;AACrBN,eAAOV,aAAP,EAAsBgB,SAASC,IAA/B;AACAI,cAAMA,GAAGL,SAASC,IAAZ,CAAN;AACD;AANH,KAFF,EAUE;AAAEC,YAAM;AAAR,KAVF;AAYD;AAhCa,CAAhB;AAkCA,IAAMI,0DACHvB,UADG,EACU,UAACO,KAAD,EAAQH,IAAR,EAAiB;AAC7BG,QAAMH,IAAN,GAAaA,IAAb;AACD,CAHG,+BAIHF,iBAJG,EAIiB,UAACK,KAAD,EAAW;AAC9BA,QAAMH,IAAN,GAAaD,YAAYC,IAAzB;AACD,CANG,+BAOHH,aAPG,EAOa,UAACM,KAAD,EAAQF,SAAR,EAAsB;AACrCE,QAAMF,SAAN,GAAkBA,SAAlB;AACD,CATG,cAAN;AAYA,IAAMmB,UAAU;AACdC,WAAS,iBAAClB,KAAD;AAAA,WAAWA,MAAMH,IAAjB;AAAA,GADK;AAEdsB,kBAAgB,wBAACnB,KAAD;AAAA,WAAWA,MAAMF,SAAjB;AAAA;AAFF,CAAhB;AAIA,eAAe;AACbsB,cAAY,IADC;AAEbpB,cAFa;AAGbC,kBAHa;AAIbe,sBAJa;AAKbC;AALa,CAAf","sourceRoot":"/home/nguyenxuancuong/Sites/hrm_fe","sourcesContent":["import {\n  SET_CITIES,\n  SET_DISTRICTS,\n  SET_INITIAL_STATE\n} from '../mutation-types'\n\nconst initState = () => {\n  return {\n    city: {},\n    districts: {},\n    branches: {}\n  }\n}\n\nconst state = {\n  city: initState().city,\n  districts: initState().districts,\n  branches: initState().branches\n}\n\nconst actions = {\n  setCity ({ commit }, payload) {\n    let { city } = payload\n    commit(SET_CITIES, city)\n  },\n  getCity ({ commit, dispatch }, payload) {\n    dispatch(\n      'fetchApi',\n      {\n        url: `cities`,\n        method: 'GET',\n        success: (response) => {\n          commit(SET_CITIES, response.data)\n        }\n      },\n      { root: true }\n    )\n  },\n  getDistrictByCity ({ commit, dispatch }, payload) {\n    let { cityId, cb } = payload\n    dispatch(\n      'fetchApi',\n      {\n        url: `cities/${cityId}?include=districts`,\n        method: 'GET',\n        success: (response) => {\n          commit(SET_DISTRICTS, response.data)\n          cb && cb(response.data)\n        }\n      },\n      { root: true }\n    )\n  }\n}\nconst mutations = {\n  [SET_CITIES]: (state, city) => {\n    state.city = city\n  },\n  [SET_INITIAL_STATE]: (state) => {\n    state.city = initState().city\n  },\n  [SET_DISTRICTS]: (state, districts) => {\n    state.districts = districts\n  }\n}\n\nconst getters = {\n  cityAll: (state) => state.city,\n  districtByCity: (state) => state.districts\n}\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}