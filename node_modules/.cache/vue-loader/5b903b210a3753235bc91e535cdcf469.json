{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/user/Listting.vue?vue&type=style&index=0&id=5940c2c6&scoped=true&lang=css&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/user/Listting.vue","mtime":1540616604405},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.v-toolbar__content{\n  height: 80px !important;\n}\n.copytext{\n  overflow: unset;\n}\n",{"version":3,"sources":["Listting.vue"],"names":[],"mappingsgBA;AACA;AACA;AACA;AACA;AACA","file":"Listting.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <v-layout ref=\"laylout\" column fill-height>\n    <div ref=\"header\">\n      <v-toolbar height=\"50px\" color=\"white\" flat>\n        <v-layout row wrap>\n          <v-flex xs1 :class=\"isMini && 'max-width-col-2'\">\n            <v-tooltip bottom>\n              <v-btn slot=\"activator\" v-if=\"canAccess('user.create')\" class=\"mr-3 mt-3\" icon color=\"primary\" @click=\"addUser\">\n                <v-icon>add</v-icon>\n              </v-btn>\n              <span>Thêm mới</span>\n            </v-tooltip>\n          </v-flex>\n          <v-flex xs8 class=\"mt-1\" :class=\"isMini && 'full-flex-basic full-width-col-10'\">\n            <v-text-field\n            hide-details\n            single-line\n            placeholder=\"Nhập tên, sđt, email ...\"\n            v-model=\"filterQ\"\n            @keyup=\"changeSearch\"\n            clearable\n            @click:clear=\"clearSearch\"\n            ></v-text-field>\n          </v-flex>\n          <v-flex xs3 class='mt-1' :class=\"isMini && 'd-none'\">\n            <!-- filter by status -->\n            <v-tooltip bottom>\n              <v-select\n              slot=\"activator\"\n              class='ml-2'\n              @change=\"filter\"\n              placeholder=\"Trạng thái\"\n              item-text=\"status_txt\"\n              item-value=\"status\"\n              :items=\"statusUser\"\n              v-model=\"filterByStatus\"\n              menu-props=\"auto\"\n              hide-details\n              single-line\n              clearable\n              ></v-select>\n              <span>Lọc theo trạng thái</span>\n            </v-tooltip>\n          </v-flex>\n<!--           <v-flex xs1>\n            <v-tooltip bottom>\n              <v-btn class=\"mt-3 ml-4\" slot=\"activator\" icon color=\"primary\" @click=\"resetForm()\">\n                <v-icon>close</v-icon>\n              </v-btn>\n              <span>Reset bộ lọc</span>\n            </v-tooltip>\n          </v-flex> -->\n        </v-layout>\n      </v-toolbar>\n      <v-toolbar height=\"45px\" color=\"white\" flat v-if=\"!isMini\">\n        <v-layout>\n          <v-flex style=\"flex-basis:55px;\" sm1 class=\"text-bold\">\n            #\n          </v-flex>\n          <v-flex sm4 class=\"text-bold\">\n            Tên người dùng\n          </v-flex>\n          <v-flex sm3 class=\"text-bold\">\n            Quyền truy cập\n          </v-flex>\n          <v-flex sm2 class=\"text-bold\">\n            Trạng thái\n          </v-flex>\n          <v-flex sm2 class=\"text-bold\">\n            Hành động\n          </v-flex>\n        </v-layout>\n      </v-toolbar>\n    </div>\n    <!-- dialog create and edit -->\n    <v-dialog v-model=\"dialogUser\" max-width=\"700px\">\n      <v-form @submit.prevent=\"submitForm\">\n        <v-card class=\"pa-0\">\n          <v-card-title class=\"pa-0 pt-3\">\n            <span class=\"headline\" width=\"100%\" style=\"margin:0 auto\">{{ formTitle }}</span>\n          </v-card-title>\n          <!-- form edit -->\n          <v-card-text id=\"formSub\" class=\"pt-0\">\n            <v-container grid-list-md class=\"white scroll-y\">\n              <v-layout row wrap>\n                <v-flex md6>\n                  <!-- name -->\n                  <v-text-field\n                  tabindex=\"1\"\n                  ref=\"firstInput\"\n                  :autofocus=\"true\"\n                  placeholder=\"Nhập vào tên\"\n                  :error-messages=\"errors.has('name') ? errors.collect('name') : []\"\n                  v-validate=\"'required'\"\n                  :data-vv-as=\"$t('label.name')\"\n                  name=\"name\"\n                  :label=\"$t('label.name')\"\n                  class=\"input-required\"\n                  v-model=\"user.name\"></v-text-field>\n                  <!-- password -->\n                  <v-text-field\n                  tabindex=\"3\"\n                  placeholder=\"Nhập mật khẩu\"\n                  v-if=\"isCreate\"\n                  :error-messages=\"errors.has('password') ? errors.collect('password') : []\" v-validate=\"'required|min:6'\"\n                  :data-vv-as=\"$t('label.password')\"\n                  name=\"password\"\n                  :label=\"$t('label.password')\"\n                  class=\"input-required\"\n                  type=\"password\"\n                  v-model=\"user.password\"> </v-text-field>\n                  <!-- quyền truy cập -->\n<!--                   <v-autocomplete\n                  multiple\n                  tabindex=\"5\"\n                  label=\"Quyền truy cập\"\n                  v-model=\"user.roles\"\n                  :items=\"roles\"\n                  chips\n                  item-text=\"name\"\n                  item-value=\"id\"\n                  color=\"white\"\n                  hide-no-data\n                  hide-selected\n                  placeholder=\"Tìm kiếm\"\n                  style=\"margin-left:-30px;\"\n                  prepend-icon=\"mdi-database-search\">\n                  <template slot=\"selection\" slot-scope=\"data\">\n                    <v-chip\n                    :selected=\"data.selected\"\n                    close class=\"chip--select-multi\"\n                    @input=\"data.parent.selectItem(data.item)\">\n                    {{ data.item.name }}\n                  </v-chip></template></v-autocomplete> -->\n                  <!-- status -->\n                  <!-- phone -->\n                  <v-text-field\n                  tabindex=\"6\"\n                  :autofocus=\"true\"\n                  placeholder=\"Nhập số điện thoại \"\n                  :error-messages=\"errors.has('phone') ? errors.collect('phone') : []\"\n                  v-validate=\"'required|numeric|min:10|max:12'\"\n                  :data-vv-as=\"$t('label.phone')\"\n                  name=\"phone\"\n                  :counter=\"12\"\n                  type=\"number\"\n                  :label=\"$t('label.phone')\"\n                  class=\"input-required\"\n                  v-model=\"user.phone\"></v-text-field>\n                </v-flex>\n                <v-flex md6>\n                  <!-- email -->\n                  <v-text-field\n                  tabindex=\"2\"\n                  placeholder=\"Example@gmail.com\"\n                  :error-messages=\"errors.has('email') ? errors.collect('email') : []\"\n                  v-validate=\"'required|email'\"\n                  :data-vv-as=\"$t('label.email')\"\n                  name=\"email\"\n                  :label=\"$t('label.email')\"\n                  class=\"input-required\"\n                  type=\"email\"\n                  :disabled=\"!isCreate\"\n                  v-model=\"user.email\"> </v-text-field>\n                  <!-- password confirm -->\n                  <v-text-field\n                  placeholder=\"Nhập lại mật khẩu\"\n                  v-if=\"isCreate\"\n                  tabindex=\"4\"\n                  ref=\"password\"\n                  :error-messages=\"errors.has('password_confirmation') ? errors.collect('password_confirmation') : []\"\n                  v-validate=\"'required|min:6'\"\n                  :data-vv-as=\"$t('label.password_confirmation')\"\n                  name=\"password_confirmation\"\n                  :label=\"$t('label.password_confirmation')\"\n                  class=\"input-required\"\n                  type=\"password\"\n                  v-model=\"user.password_confirmation\"> </v-text-field>\n                  <v-flex style=\"margin-top:20px;\">\n\n                  </v-flex>\n                   <label style=\"color:#616161\">Trạng thái</label>\n                  <v-tooltip bottom>\n                    <v-switch\n                    class=\"mt-0\"\n                    tabindex=\"7\"\n                    style=\"outline-style: none;\"\n                    @change=\"user.status !== user.status\"\n                    name=\"status\"\n                    slot=\"activator\"\n                    v-model=\"user.status\"\n                    ></v-switch>\n                    <span v-if=\"user.status\">Kích hoạt</span>\n                    <span v-else>Không kích hoạt</span>\n                  </v-tooltip>\n                </v-flex>\n              </v-layout>\n            </v-container>\n          </v-card-text>\n          <!-- end form edit -->\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn tabindex=\"9\" color=\"error\" flat @click.native=\"closeUser\">Hủy bỏ</v-btn>\n            <v-btn tabindex=\"8\" class=\"green--text text-uppercase\" flat type=\"submit\"><span v-if=\"editedIndex!==-1\">Lưu lại</span><span v-else>Thêm mới</span></v-btn>\n            <div :tabindex=\"9\"  @focus=\"backTabIndex\"></div>\n          </v-card-actions>\n        </v-card>\n      </v-form>\n    </v-dialog>\n    <!-- end created and edit -->\n    <v-flex xs12 class=\"border-e0-top\">\n      <data-view\n      :name=\"dataViewName\"\n      api-url=\"users?sort=status:-1,id:-1\"\n      v-if=\"dataViewHeight\"\n      :viewHeight=\"dataViewHeight\"\n      :params=\"filterParams\"\n      :ref=\"dataViewName\"\n      >\n      <template slot-scope=\"{items}\">\n        <v-list three-line>\n          <template  v-for=\"(item, index) in items.data\">\n            <v-list-tile\n            :key=\"index\"\n            :inactive=\"item.id === $route.params.id\"\n            :class=\"item.id === $route.params.id && 'grey lighten-2'\"\n            >\n            <v-layout class=\"pa-2\">\n              <v-flex style=\"flex-basis:55px;\" sm1 :class=\"isMini && 'd-none'\">\n                {{index + 1}}\n              </v-flex>\n              <!-- name -->\n              <v-flex sm4 :class=\"isMini && 'full-flex-basic full-max-width'\">\n                {{ item.name}}\n                <v-list-tile-sub-title class=\"text--primary copytext\" v-if=\"item.email\" :class=\"isMini && 'd-none'\">\n                  <v-icon size=\"16px\">email</v-icon>\n                  <span @click.stop=\"clickToCopy\" class=\"click-copy\">{{ item.email }}</span>\n                </v-list-tile-sub-title>\n                <v-list-tile-sub-title class=\"text--primary copytext\" v-if=\"item.phone\" :class=\"isMini && 'd-none'\">\n                  <v-icon size=\"16px\">phone</v-icon>\n                  <span @click.stop=\"clickToCopy\" class=\"click-copy\">{{ item.phone }}</span>\n                </v-list-tile-sub-title>\n              </v-flex>\n              <v-flex sm3 :class=\"isMini && 'full-flex-basic full-max-width'\">\n                <v-flex v-if=\"item.roles\">\n                  <v-flex :key=\"index\" v-for=\"(role, index) in item.roles.data\">\n                    {{ role.name }}\n                  </v-flex>\n                </v-flex>\n              </v-flex>\n              <!-- trạng thái -->\n              <v-flex sm2 :class=\"isMini && 'full-flex-basic full-max-width'\">\n               <v-tooltip bottom sm12>\n                <v-switch\n                class=\"ml-3\"\n                @click.native.stop\n                @change=\"changeStatus(item.id)\"\n                name=\"status\"\n                slot=\"activator\"\n                v-model=\"item.status\"\n                ></v-switch>\n                <span v-if=\"item.status\">Kích hoạt</span>\n                <span v-else>Không kích hoạt</span>\n              </v-tooltip>\n            </v-flex>\n            <v-flex sm2 class=\"ml-2\" :class=\"isMini && 'd-none'\">\n             <v-tooltip bottom sm6>\n              <v-btn slot=\"activator\" class=\"ma-0\" v-if=\"canAccess('user.update')\" icon @click=\"editUser(item.id, item)\">\n                <v-icon class='theme--light teal--text'>edit</v-icon>\n              </v-btn>\n              <span>Sửa</span>\n            </v-tooltip>\n            <v-tooltip bottom sm6>\n              <v-btn slot=\"activator\" class=\"ma-0\" v-if=\"canAccess('user.delete')\" icon @click.stop=\"removeConfirm(item)\">\n                <v-icon class=\"theme--light pink--text\">delete</v-icon>\n              </v-btn>\n              <span>Xóa</span>\n            </v-tooltip>\n          </v-flex>\n        </v-layout>\n      </v-list-tile>\n      <v-divider\n      :key=\"'div' + index + item.id\"\n      v-if=\"index + 1 < items.data.length\"\n      ></v-divider>\n    </template>\n  </v-list>\n</template>\n</data-view>\n</v-flex>\n<dialog-confirm v-model=\"dialogDelete\" @input=\"remove\" />\n</v-layout>\n</template>\n<script>\nimport DialogConfirm from '@/components/DialogConfirm'\nimport { debounce } from 'lodash'\nimport DataView from '@/components/DataView/DataView'\nimport { mapActions, mapGetters } from 'vuex'\nimport { mapFields } from 'vuex-map-fields'\nexport default{\n  name: 'UserListting',\n  props: {\n    isMini: {\n      type: Boolean,\n      default: false\n    }\n  },\n  components: {\n    DataView,\n    DialogConfirm\n  },\n  data: () => ({\n    // filter by date\n    dialogUser: false,\n    dialogDelete: false,\n    dataUser: {},\n    dataViewHeight: 0,\n    dataViewName: 'user',\n    editedIndex: -1,\n    idUser: null,\n    defaultUser: {\n      status: 1\n    },\n    user: {\n      status: true\n    },\n    roles: [],\n    statusUser: [\n      { status_txt: 'Kích hoạt', status: 1 },\n      { status_txt: 'Không kích hoạt', status: 0 }\n    ]\n  }),\n  watch: {\n    dialogUser (val) {\n      if (!val) return\n      requestAnimationFrame(() => {\n        this.$refs.firstInput.focus()\n      })\n    }\n  },\n  computed: {\n    ...mapGetters('User', ['filterParams']),\n    ...mapFields(`User`, {\n      filterQ: 'params.q',\n      filterByStatus: 'params.status'\n    }),\n    // title of form User modal\n    formTitle () {\n      return this.editedIndex === -1 ? 'Thêm người dùng' : 'Sửa người dùng'\n    },\n    isCreate () {\n      return this.editedIndex === -1\n    }\n  },\n  methods: {\n    ...mapActions('Dataview', ['updateDataviewEntry', 'removeDataviewEntry', 'setDataview']),\n    ...mapActions('User', ['getUser', 'createUser', 'deleteUser', 'updateUser', 'updateStatusUser', 'clearFilter']),\n    ...mapActions(['fetchApi']),\n    ...mapActions(['showNotify']),\n    clearSearch () {\n      this.changeSearch()\n      this.filter()\n    },\n    changeSearch: debounce(function () {\n      this.filter()\n    }, 500),\n    filter () {\n      this.$refs[this.dataViewName].$emit('reload')\n    },\n    changeStatus (idUser) {\n      this.updateStatusUser({\n        id: idUser,\n        user: this.user,\n        cb: (response) => {\n          this.$store.dispatch('showNotify', {\n            text: this.$t('alert.statusSuccess'),\n            color: 'success'\n          })\n        },\n        error: (error) => {\n          if (error.status === 404) {\n            this.$store.dispatch('showNotify', {\n              text: this.$t('alert.not-found'),\n              color: 'warning'\n            })\n          }\n        }\n      })\n    },\n    closeUser () {\n      this.dialogUser = false\n      setTimeout(() => {\n        this.user = Object.assign({}, this.defaultUser)\n        this.editedIndex = -1\n      }, 300)\n    },\n    addUser () {\n      this.$validator.reset()\n      this.user = Object.assign({}, this.defaultUser)\n      this.editedIndex = -1\n      this.dialogUser = true\n    },\n    editUser (userId, item) {\n      this.idUser = userId\n      this.$validator.reset()\n      this.getUser({ userId: userId, params: { include: 'roles' } })\n      this.editedIndex = 1\n      this.user = Object.assign({}, item)\n      this.dialogUser = true\n    },\n    // reset all filter\n    resetForm () {\n      this.clearFilter()\n    },\n    backTabIndex () {\n      this.$refs.firstInput.focus()\n    },\n    // Thêm sửa user\n    submitForm () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n          if (this.editedIndex === -1) {\n            this.createUser({\n              user: this.user,\n              cb: (response) => {\n                this.$refs[this.dataViewName].$emit('reload')\n                this.dialogUser = false\n                setTimeout(() => {\n                  this.user = Object.assign({}, this.defaultUser)\n                  this.editedIndex = -1\n                }, 300)\n                this.showNotify({\n                  color: 'success',\n                  text: this.$t('alert.addUserSuccess')\n                })\n              }\n            })\n          } else {\n            // console.log(\"user\", this.user)\n            this.updateUser({\n              id: this.idUser,\n              user: this.user,\n              cb: (response) => {\n                this.showNotify({\n                  color: 'success',\n                  text: this.$t('alert.updateUserSuccess')\n                })\n                this.updateDataviewEntry({\n                  name: 'user',\n                  data: this.user,\n                  key: 'id'\n                })\n                this.dialogUser = false\n                setTimeout(() => {\n                  this.user = Object.assign({}, this.defaultUser)\n                  this.editedIndex = -1\n                }, 300)\n              }\n            })\n          }\n        }\n      })\n    },\n    // xóa user\n    removeConfirm (item) {\n      this.dataUser = item\n      this.idUser = item.id\n      this.dialogDelete = true\n    },\n    remove (confirm) {\n      if (confirm) {\n        this.deleteUser({\n          id: this.idUser,\n          cb: (response) => {\n            this.dialogDelete = false\n            this.removeDataviewEntry({\n              name: 'user',\n              data: this.dataUser,\n              key: 'id'\n            })\n            this.setDataview({\n              name: 'employee',\n              data: [],\n              uniqueKey: 'id'\n            })\n            this.$store.dispatch('showNotify', {\n              text: this.$t('alert.deleteUserSucces'),\n              color: 'success'\n            })\n          },\n          error: (error) => {\n            if (error.status === 404) {\n              this.$store.dispatch('showNotify', {\n                text: this.$t('alert.not-found'),\n                color: 'warning'\n              })\n            }\n          }\n        })\n      }\n    }\n  },\n  mounted () {\n    if (this.$route.params.id) {\n      this.dataViewHeight = this.$refs.laylout.clientHeight - 55\n    } else {\n      this.dataViewHeight = this.$refs.laylout.clientHeight - 100\n    }\n    let query = { ...this.$route.query }\n    if (query.hasOwnProperty('reload')) {\n      this.$nextTick(() => {\n        this.$refs[this.dataViewName].$emit('reload')\n      })\n      delete query.reload\n      this.$router.replace({\n        query: query\n      })\n    }\n  }\n}\n</script>\n<style scoped>\n.v-toolbar__content{\n  height: 80px !important;\n}\n.copytext{\n  overflow: unset;\n}\n</style>\n"]}]}