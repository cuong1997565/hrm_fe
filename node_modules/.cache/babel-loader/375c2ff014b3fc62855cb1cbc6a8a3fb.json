{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/plans/Form_sub.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/plans/Form_sub.vue","mtime":1543379526627},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nimport { filter, debounce, cloneDeep } from 'lodash';\nimport DialogConfirm from '@/components/DialogConfirm';\nexport default {\n  name: 'PlanFormSub',\n  components: {\n    DialogConfirm: DialogConfirm\n  },\n  data: function data() {\n    return {\n      colorAddDepartment: 'primary',\n      isLoadingBranch: false,\n      branchIndex: 0,\n      isLoadingPosition: false,\n      positionIndex: 0,\n      dialogDeleteDetail: false,\n      idDeleteDetail: null,\n      departments: [],\n      plan: {\n        details: []\n      }\n    };\n  },\n  props: {\n    index: {\n      type: Number,\n      default: 0\n    },\n    dataPlan: {\n      type: Object,\n      default: function _default() {\n        return {\n          details: []\n        };\n      }\n    }\n  },\n  computed: _objectSpread({}, mapGetters('Department', ['departmentDetail']), mapGetters('Branch', ['branchAll']), mapGetters('Position', ['positionAll'])),\n  watch: {\n    dataPlan: function dataPlan(val) {\n      this.setInitData();\n    }\n  },\n  methods: _objectSpread({}, mapActions(['fetchApi']), mapActions('Department', ['fetchDepartment']), mapActions('Position', ['fetchPosition']), mapActions('PlanDetails', ['deletePlanDetail']), mapActions('Branch', ['getBranchs']), {\n    addDepartment: function addDepartment() {\n      this.plan.details.push({});\n      this.plan.details[this.plan.details.length - 1].branchs = this.branchAll;\n      this.plan.details[this.plan.details.length - 1].positions = this.positionAll;\n      this.plan.details[this.plan.details.length - 1].loadingBranch = false;\n      this.emitDepartment();\n    },\n    changeBranch: function changeBranch(index) {\n      this.emitDepartment();\n    },\n    getDepartmentByBranch: function getDepartmentByBranch(branchId) {\n      var array = [];\n\n      if (this.departments.length) {\n        array = filter(this.departments, function (object) {\n          return parseInt(object.branch_id) === parseInt(branchId);\n        });\n      }\n\n      return array;\n    },\n    changePosition: function changePosition() {\n      this.emitDepartment();\n    },\n    changeDepartment: function changeDepartment() {\n      this.emitDepartment();\n    },\n    changeQuantity: function changeQuantity() {\n      this.emitDepartment();\n    },\n    emitDepartment: function emitDepartment() {\n      this.$emit('positionAndDepartment', this.plan.details);\n    },\n    setInitData: function setInitData() {\n      var _this = this;\n\n      var dataPlan = _objectSpread({}, this.dataPlan);\n\n      this.plan = _objectSpread({}, this.plan, dataPlan);\n\n      if (this.dataPlan.details.data) {\n        this.plan.details = this.dataPlan.details.data.length ? cloneDeep(this.plan.details.data) : [{}];\n\n        if (this.plan.details.length) {\n          this.plan.details.map(function (item) {\n            if (item.department) {\n              item.branch_id = item.department.data.branch_id;\n            }\n\n            item.loadingBranch = false;\n            return item;\n          });\n        }\n      } else {\n        if (!this.branchAll.length) {\n          this.getBranchs({\n            params: {\n              limit: 10\n            },\n            cb: function cb(response) {\n              _this.plan.details[0].branchs = response;\n            }\n          });\n        }\n\n        if (!this.positionAll.length) {\n          this.fetchPosition({\n            params: {\n              limit: 10\n            },\n            cb: function cb(response) {\n              _this.plan.details[0].positions = response;\n            }\n          });\n        }\n      }\n    },\n    removeDetail: function removeDetail(confirm) {\n      if (confirm) {\n        this.dialogDeleteDetail = false;\n        this.deletePlanDetail({\n          id: this.plan.details[this.idDeleteDetail].id\n        });\n        this.plan.details.splice(this.idDeleteDetail, 1);\n        this.emitDepartment();\n      }\n    },\n    deleteDepartment: function deleteDepartment(index) {\n      this.plan.details.splice(index, 1);\n    },\n    validateBeforeSubmit: function validateBeforeSubmit() {\n      var _this2 = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) {} else {\n          _this2.$store.dispatch('showNotify', {\n            text: _this2.$t('alert.invalid'),\n            color: 'warning'\n          });\n        }\n      });\n    },\n    searchBranch: debounce(function (index, value) {\n      var _this3 = this;\n\n      if (value.target.value === '') {\n        this.plan.details[index].branch_id = '';\n      }\n\n      this.branchIndex = index;\n      this.isLoadingBranch = true;\n      this.plan.details[index].department_id = '';\n      this.plan.details[index].branchs = [];\n      this.getBranchs({\n        params: {\n          q: value.target.value,\n          limit: 10\n        },\n        cb: function cb(response) {\n          _this3.plan.details[index].branchs = response;\n          _this3.isLoadingBranch = false;\n        }\n      }); // setTimeout(() => { this.plan.details[index].loadingBranch = false }, 500)\n    }, 500),\n    searchPosition: debounce(function (index, value) {\n      var _this4 = this;\n\n      this.isLoadingPosition = true;\n      this.positionIndex = index;\n      this.plan.details[index].positions = [];\n      this.fetchPosition({\n        params: {\n          q: value.target.value,\n          limit: 10\n        },\n        cb: function cb(response) {\n          _this4.plan.details[index].positions = response;\n          _this4.isLoadingPosition = false;\n        }\n      });\n    }, 500),\n    resetBranch: function resetBranch(index) {\n      var _this5 = this;\n\n      console.log(1);\n      this.plan.details[index].department_id = '';\n      this.getBranchs({\n        params: {\n          limit: 10\n        },\n        cb: function cb(response) {\n          _this5.plan.details[index].branchs = response;\n          console.log('this.branchAll', _this5.branchAll);\n        }\n      });\n    },\n    clearPositon: function clearPositon(index) {\n      var _this6 = this;\n\n      this.plan.details[index].position_id = '';\n      this.fetchPosition({\n        params: {\n          q: '',\n          limit: 10\n        },\n        cb: function cb(response) {\n          _this6.plan.details[index].positions = response;\n        }\n      });\n    }\n  }),\n  mounted: function mounted() {\n    if (!this.dataPlan.details.data) {\n      this.plan.details.push({});\n      this.plan.details[0].branchs = this.branchAll;\n      this.plan.details[0].positions = this.positionAll;\n      this.plan.details[0].loadingBranch = false;\n    }\n\n    if (!this.branchAll.length) {\n      this.getBranchs({\n        params: {\n          limit: 10\n        }\n      });\n    }\n\n    if (!this.positionAll.length) {\n      this.fetchPosition({\n        params: {\n          limit: 10\n        }\n      });\n    }\n  },\n  created: function created() {\n    var _this7 = this;\n\n    // get department\n    this.fetchApi({\n      url: 'departments',\n      method: 'GET',\n      params: {\n        limit: -1\n      },\n      success: function success(response) {\n        _this7.departments = response.data;\n      }\n    });\n    !!this.dataPlan && this.setInitData();\n  }\n};",{"version":3,"sources":["Form_sub.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-form @submit.prevent=\"validateBeforeSubmit\">\n    <v-container>\n      <v-layout row wrap class=\"mt-3\">\n        <!-- <v-flex xs8> -->\n        <v-flex md3>\n          <h3>Chi nhánh</h3>\n        </v-flex>\n        <v-flex md3 class=\"pr-2\">\n          <h3>Phòng ban</h3>\n        </v-flex>\n        <v-flex md3 class=\"pr-2\">\n          <h3>Chức danh</h3>\n        </v-flex>\n        <v-flex xs2 class=\"pr-2\">\n          <h3>Số lượng</h3>\n        </v-flex>\n      </v-layout>\n\n      <v-layout row wrap align-center class=\"mb-1 mt-1\" :key=\"index\" v-for=\"(department, index) in plan.details\">\n        <v-flex xs3>\n          <v-autocomplete\n            tabindex=\"6\"\n            class=\"pr-2\"\n            v-validate=\"'required'\"\n            :loading=\"isLoadingBranch && branchIndex === index\"\n            v-model=\"plan.details[index].branch_id\"\n            :items=\"plan.details[index].branchs\"\n            item-text=\"name\"\n            @keyup=\"searchBranch(index,$event)\"\n            item-value=\"id\"\n            :error-messages=\"errors.has(`branch_${index}`) ? errors.collect(`branch_${index}`) : []\"\n            :data-vv-as=\"$t('label.name_branch')\"\n            :name=\"`branch_${index}`\"\n            placeholder=\"Chi nhánh\"\n            @change=\"changeBranch(index)\"\n            clearable\n          >\n            <!-- @click:clear=\"resetBranch(index)\"\n              clearable -->\n            <template slot=\"no-data\">\n              <v-list-tile>\n                <v-list-tile-title style=\"color:blue\">\n                  Không tìm thấy chi nhánh\n                </v-list-tile-title>\n              </v-list-tile>\n            </template>\n          </v-autocomplete>\n        </v-flex>\n\n        <v-flex xs3 id=\"department_text_long\">\n          <v-select\n            tabindex=\"7\"\n            v-validate=\"'required'\"\n            v-model=\"plan.details[index].department_id\"\n            label=\"Phòng ban\"\n            :error-messages=\"errors.has(`department_${index}`) ? errors.collect(`department_${index}`) : []\"\n            :data-vv-as=\"$t('label.name_department')\"\n            :name=\"`department_${index}`\"\n            :disabled=\"!plan.details[index].branch_id\"\n            :items=\"getDepartmentByBranch(plan.details[index].branch_id)\"\n            item-text=\"name\"\n            item-value=\"id\"\n            class=\"pr-2\"\n            placeholder=\"Phòng ban\"\n            single-line\n            @change=\"changeDepartment\">\n            <template slot=\"no-data\">\n              <v-list-tile>\n                <v-list-tile-title style=\"color:blue\">\n                  Không tìm thấy phòng ban\n                </v-list-tile-title>\n              </v-list-tile>\n            </template>\n          </v-select>\n        </v-flex>\n\n        <v-flex xs3>\n          <v-tooltip bottom>\n            <v-autocomplete\n              tabindex=\"8\"\n              slot=\"activator\"\n              v-validate=\"'required'\"\n              :loading=\"isLoadingPosition && positionIndex === index\"\n              v-model=\"plan.details[index].position_id\"\n              :items=\"plan.details[index].positions\"\n              item-text=\"name\"\n              item-value=\"id\"\n              :error-messages=\"errors.has(`position_${index}`) ? errors.collect(`position_${index}`) : []\"\n              :name=\"`position_${index}`\"\n              @keyup=\"searchPosition(index,$event)\"\n              placeholder=\"Chức danh\"\n              single-line\n              :data-vv-as=\"$t('label.name_position')\"\n              class='pr-2'\n              clearable\n              @click:clear=\"clearPositon(index)\"\n              @change=\"changePosition\">\n              <template slot=\"no-data\">\n                <v-list-tile>\n                  <v-list-tile-title style=\"color:blue\">\n                    Không tìm thấy chức danh\n                  </v-list-tile-title>\n                </v-list-tile>\n              </template>\n            </v-autocomplete>\n            <span>Chọn chức danh</span>\n          </v-tooltip>\n        </v-flex>\n        <v-flex xs2>\n          <v-text-field\n            tabindex=\"9\"\n            :error-messages=\"errors.has(`quantity_${index}`) ? errors.collect(`quantity_${index}`) : []\"\n            v-validate=\"'required|numeric|min_value:1'\"\n            :data-vv-as=\"$t('label.quantity')\"\n            :name=\"`quantity_${index}`\"\n            v-model=\"plan.details[index].quantity\"\n            type=\"number\"\n            placeholder=\"Số lượng\"\n            @change=\"changeQuantity\"\n          >\n          </v-text-field>\n\n        </v-flex>\n        <v-tooltip bottom xs1 style=\"flex-basis: 50px;\">\n          <v-btn slot=\"activator\" class=\"mb-3 ml-4\"\n                 icon color=\"error\"\n                 @click=\"deleteDepartment(index)\">\n            <v-icon>delete</v-icon>\n          </v-btn>\n          <span>Xóa</span>\n        </v-tooltip>\n      </v-layout>\n      <v-tooltip bottom style=\"float: right; margin-top: -3px; margin-right: 0px;\">\n        <v-btn slot=\"activator\" class=\"mr-3 mt-0\"\n               icon color=\"primary\"\n               id=\"addDepartment\"\n               @click=\"addDepartment()\">\n          <v-icon>add</v-icon>\n        </v-btn>\n        <span>Thêm chức danh</span>\n      </v-tooltip>\n    </v-container>\n    <dialog-confirm v-model=\"dialogDeleteDetail\" @input=\"removeDetail\"/>\n  </v-form>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { filter, debounce, cloneDeep } from 'lodash'\nimport DialogConfirm from '@/components/DialogConfirm'\nexport default {\n  name: 'PlanFormSub',\n  components: {\n    DialogConfirm\n  },\n  data () {\n    return {\n      colorAddDepartment: 'primary',\n      isLoadingBranch: false,\n      branchIndex: 0,\n      isLoadingPosition: false,\n      positionIndex: 0,\n      dialogDeleteDetail: false,\n      idDeleteDetail: null,\n      departments: [],\n      plan: {\n        details: []\n      }\n    }\n  },\n  props: {\n    index: {\n      type: Number,\n      default: 0\n    },\n    dataPlan: {\n      type: Object,\n      default: () => {\n        return {\n          details: []\n        }\n      }\n    }\n  },\n  computed: {\n    ...mapGetters('Department', ['departmentDetail']),\n    ...mapGetters('Branch', ['branchAll']),\n    ...mapGetters('Position', ['positionAll'])\n  },\n  watch: {\n    dataPlan (val) {\n      this.setInitData()\n    }\n  },\n  methods: {\n    ...mapActions(['fetchApi']),\n    ...mapActions('Department', ['fetchDepartment']),\n    ...mapActions('Position', ['fetchPosition']),\n    ...mapActions('PlanDetails', ['deletePlanDetail']),\n    ...mapActions('Branch', ['getBranchs']),\n    addDepartment () {\n      this.plan.details.push({})\n      this.plan.details[this.plan.details.length - 1].branchs = this.branchAll\n      this.plan.details[this.plan.details.length - 1].positions = this.positionAll\n      this.plan.details[this.plan.details.length - 1].loadingBranch = false\n      this.emitDepartment()\n    },\n    changeBranch (index) {\n      this.emitDepartment()\n    },\n    getDepartmentByBranch (branchId) {\n      let array = []\n      if (this.departments.length) {\n        array = filter(this.departments, function (object) {\n          return parseInt(object.branch_id) === parseInt(branchId)\n        })\n      }\n      return array\n    },\n    changePosition () {\n      this.emitDepartment()\n    },\n    changeDepartment () {\n      this.emitDepartment()\n    },\n    changeQuantity () {\n      this.emitDepartment()\n    },\n    emitDepartment () {\n      this.$emit('positionAndDepartment', this.plan.details)\n    },\n    setInitData () {\n      let dataPlan = { ...this.dataPlan }\n      this.plan = { ...this.plan, ...dataPlan }\n      if (this.dataPlan.details.data) {\n        this.plan.details = this.dataPlan.details.data.length ? cloneDeep(this.plan.details.data) : [{}]\n        if (this.plan.details.length) {\n          this.plan.details.map((item) => {\n            if (item.department) {\n              item.branch_id = item.department.data.branch_id\n            }\n            item.loadingBranch = false\n            return item\n          })\n        }\n      } else {\n        if (!this.branchAll.length) {\n          this.getBranchs({\n            params: { limit: 10 },\n            cb: (response) => {\n              this.plan.details[0].branchs = response\n            }\n          })\n        }\n        if (!this.positionAll.length) {\n          this.fetchPosition({\n            params: { limit: 10 },\n            cb: (response) => {\n              this.plan.details[0].positions = response\n            }\n          })\n        }\n      }\n    },\n    removeDetail (confirm) {\n      if (confirm) {\n        this.dialogDeleteDetail = false\n        this.deletePlanDetail({\n          id: this.plan.details[this.idDeleteDetail].id\n        })\n        this.plan.details.splice(this.idDeleteDetail, 1)\n        this.emitDepartment()\n      }\n    },\n    deleteDepartment (index) {\n      this.plan.details.splice(index, 1)\n    },\n    validateBeforeSubmit () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n        } else {\n          this.$store.dispatch('showNotify', {\n            text: this.$t('alert.invalid'),\n            color: 'warning'\n          })\n        }\n      })\n    },\n    searchBranch: debounce(function (index, value) {\n      if (value.target.value === '') {\n        this.plan.details[index].branch_id = ''\n      }\n      this.branchIndex = index\n      this.isLoadingBranch = true\n      this.plan.details[index].department_id = ''\n      this.plan.details[index].branchs = []\n      this.getBranchs({\n        params: { q: value.target.value, limit: 10 },\n        cb: (response) => {\n          this.plan.details[index].branchs = response\n          this.isLoadingBranch = false\n        }\n      })\n      // setTimeout(() => { this.plan.details[index].loadingBranch = false }, 500)\n    }, 500),\n    searchPosition: debounce(function (index, value) {\n      this.isLoadingPosition = true\n      this.positionIndex = index\n      this.plan.details[index].positions = []\n      this.fetchPosition({\n        params: { q: value.target.value, limit: 10 },\n        cb: (response) => {\n          this.plan.details[index].positions = response\n          this.isLoadingPosition = false\n        }\n      })\n    }, 500),\n    resetBranch (index) {\n      console.log(1)\n      this.plan.details[index].department_id = ''\n      this.getBranchs({\n        params: { limit: 10 },\n        cb: (response) => {\n          this.plan.details[index].branchs = response\n          console.log('this.branchAll', this.branchAll)\n        }\n      })\n    },\n    clearPositon (index) {\n      this.plan.details[index].position_id = ''\n      this.fetchPosition({\n        params: { q: '', limit: 10 },\n        cb: (response) => {\n          this.plan.details[index].positions = response\n        }\n      })\n    }\n  },\n  mounted () {\n    if (!this.dataPlan.details.data) {\n      this.plan.details.push({})\n      this.plan.details[0].branchs = this.branchAll\n      this.plan.details[0].positions = this.positionAll\n      this.plan.details[0].loadingBranch = false\n    }\n    if (!this.branchAll.length) {\n      this.getBranchs({ params: { limit: 10 } })\n    }\n    if (!this.positionAll.length) {\n      this.fetchPosition({ params: { limit: 10 } })\n    }\n  },\n  created () {\n    // get department\n    this.fetchApi({\n      url: 'departments',\n      method: 'GET',\n      params: {\n        limit: -1\n      },\n      success: (response) => {\n        this.departments = response.data\n      }\n    })\n    !!this.dataPlan && this.setInitData()\n  }\n}\n</script>\n\n<style scoped>\n  .v-input.v-text-field {\n    margin-top: 0px;\n  }\n  .v-form > .container > .layout > .flex {\n    padding: 3px;\n  }\n  .v-text-field {\n    margin-top: 0px;\n  }\n</style>\n\n<style>\n  #department_text_long .v-select__selection {\n    overflow: hidden !important;\n    white-space: nowrap !important;\n    text-overflow: ellipsis !important;\n    width: 180px;\n  }\n  #department_text_long .v-select__selection input::after {\n    width: 180px;\n    content: \"...\";\n  }\n</style>\n"],"sourceRoot":"src/views/plans"}]}