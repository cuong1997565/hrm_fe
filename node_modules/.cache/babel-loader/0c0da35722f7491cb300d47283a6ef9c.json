{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/setting.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/setting.js","mtime":1538377839382},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1534394480737},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":1534394476611},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":1534394478618}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport _regeneratorRuntime from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\n\nvar _mutations;\n\nimport { SET_SETTINGS, SET_INITIAL_STATE, REMOVE_SETTING } from '../mutation-types';\n\nvar initState = function initState() {\n  return {\n    settings: {}\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  settings: initState().settings\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  FetchSetting: function FetchSetting(_ref, payload) {\n    var commit = _ref.commit,\n        dispatch = _ref.dispatch;\n\n    var _ref2 = payload || {},\n        params = _ref2.params;\n\n    dispatch('fetchApi', {\n      url: 'settings',\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_SETTINGS, response.data);\n      }\n    }, {\n      root: true\n    });\n  },\n  getSetting: function getSetting(_ref3, payload) {\n    var commit = _ref3.commit,\n        dispatch = _ref3.dispatch;\n\n    var _ref4 = payload || {},\n        settingId = _ref4.settingId,\n        params = _ref4.params;\n\n    dispatch('fetchApi', {\n      url: \"settings/\".concat(settingId),\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_SETTINGS, response.data);\n      }\n    }, {\n      root: true\n    });\n  },\n  setSetting: function setSetting(_ref5, payload) {\n    var commit = _ref5.commit;\n\n    var _ref6 = payload || {},\n        settings = _ref6.settings;\n\n    if (settings) {\n      commit(SET_SETTINGS, settings);\n    }\n  },\n  createSetting: function createSetting(_ref7, payload) {\n    var commit = _ref7.commit,\n        dispatch = _ref7.dispatch;\n    var setting = payload.setting,\n        cb = payload.cb,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: 'settings',\n      method: 'POST',\n      data: setting,\n      params: params,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  updateSetting: function updateSetting(_ref8, payload) {\n    var commit = _ref8.commit,\n        dispatch = _ref8.dispatch;\n    var id = payload.id,\n        setting = payload.setting,\n        cb = payload.cb,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: \"settings/\".concat(id),\n      method: 'PUT',\n      data: setting,\n      params: params,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  deleteSetting: function () {\n    var _deleteSetting = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(_ref9, payload) {\n      var commit, dispatch, _ref10, id, cb;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref9.commit, dispatch = _ref9.dispatch;\n              _ref10 = payload || {}, id = _ref10.id, cb = _ref10.cb;\n              dispatch('fetchApi', {\n                url: \"settings/\".concat(id),\n                method: 'DELETE',\n                success: function success(response) {\n                  commit(REMOVE_SETTING, id);\n                  cb && cb(response.data);\n                }\n              }, {\n                root: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function deleteSetting(_x, _x2) {\n      return _deleteSetting.apply(this, arguments);\n    };\n  }()\n};\n/**\n * mutations\n */\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_SETTINGS, function (state, settings) {\n  state.settings = settings;\n}), _defineProperty(_mutations, SET_INITIAL_STATE, function (state) {\n  state.settings = initState().settings;\n}), _defineProperty(_mutations, REMOVE_SETTING, function (state, id) {\n  console.log(id);\n  delete state.settings[id];\n  console.log(state.settings[id]);\n}), _mutations);\n/**\n * getters\n */\n\nvar getters = {\n  settingDetail: function settingDetail(state) {\n    return state.settings;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["src/store/modules/setting.js"],"names":["SET_SETTINGS","SET_INITIAL_STATE","REMOVE_SETTING","initState","settings","state","actions","FetchSetting","payload","commit","dispatch","params","url","method","success","response","data","root","getSetting","settingId","setSetting","createSetting","setting","cb","updateSetting","id","deleteSetting","mutations","console","log","getters","settingDetail","namespaced"],"mappings":"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","sourceRoot":"/home/nguyenxuancuong/Sites/hrm_fe","sourcesContent":["import {\n  SET_SETTINGS,\n  SET_INITIAL_STATE,\n  REMOVE_SETTING\n} from '../mutation-types'\n\nconst initState = () => {\n  return {\n    settings: {}\n  }\n}\n\n/**\n * state\n */\nconst state = {\n  settings: initState().settings\n}\n\n/**\n * actions\n */\nconst actions = {\n  FetchSetting ({ commit, dispatch }, payload) {\n    let { params } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: 'settings',\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_SETTINGS, response.data)\n        }\n      },\n      { root: true }\n    )\n  },\n  getSetting ({ commit, dispatch }, payload) {\n    let { settingId, params } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `settings/${settingId}`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_SETTINGS, response.data)\n        }\n      },\n      { root: true }\n    )\n  },\n  setSetting ({ commit }, payload) {\n    let { settings } = payload || {}\n    if (settings) {\n      commit(SET_SETTINGS, settings)\n    }\n  },\n  createSetting ({ commit, dispatch }, payload) {\n    let { setting, cb, params } = payload\n    dispatch('fetchApi', {\n      url: 'settings',\n      method: 'POST',\n      data: setting,\n      params: params,\n      success: cb\n    }, { root: true })\n  },\n  updateSetting ({ commit, dispatch }, payload) {\n    let { id, setting, cb, params } = payload\n    dispatch('fetchApi', {\n      url: `settings/${id}`,\n      method: 'PUT',\n      data: setting,\n      params: params,\n      success: cb\n    }, { root: true })\n  },\n  async deleteSetting ({ commit, dispatch }, payload) {\n    const { id, cb } = payload || {}\n    dispatch('fetchApi', {\n      url: `settings/${id}`,\n      method: 'DELETE',\n      success: response => {\n        commit(REMOVE_SETTING, id)\n        cb && cb(response.data)\n      }\n    }, { root: true })\n  }\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_SETTINGS]: (state, settings) => {\n    state.settings = settings\n  },\n  [SET_INITIAL_STATE]: (state) => {\n    state.settings = initState().settings\n  },\n  [REMOVE_SETTING]: (state, id) => {\n    console.log(id)\n    delete state.settings[id]\n    console.log(state.settings[id])\n  }\n}\n\n/**\n * getters\n */\nconst getters = {\n  settingDetail: (state) => state.settings\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}