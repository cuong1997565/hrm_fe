{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/plan.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/plan.js","mtime":1541476598846},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations;\n\nimport { SET_PLAN, SET_INITIAL_STATE } from '../mutation-types';\nimport { getField, updateField } from 'vuex-map-fields';\n\nvar initState = function initState() {\n  return {\n    plan: {},\n    params: {\n      q: '',\n      branchId: '',\n      departmentId: '',\n      positionId: '',\n      status: '',\n      date: '',\n      dateStart: '',\n      dateEnd: '',\n      include: 'details.department.branch,candidates',\n      sort: 'status:1,id:-1'\n    }\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  plan: initState().plan,\n  params: initState().params\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  setPlan: function setPlan(_ref, payload) {\n    var commit = _ref.commit;\n\n    var _ref2 = payload || {},\n        plan = _ref2.plan;\n\n    commit(SET_PLAN, plan);\n  },\n  fetchPlan: function fetchPlan(_ref3, payload) {\n    var commit = _ref3.commit,\n        dispatch = _ref3.dispatch;\n\n    var _ref4 = payload || {},\n        params = _ref4.params,\n        error = _ref4.error;\n\n    dispatch('fetchApi', {\n      url: \"plans\",\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_PLAN, response.data);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  getPlan: function getPlan(_ref5, payload) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n\n    var _ref6 = payload || {},\n        planId = _ref6.planId,\n        params = _ref6.params,\n        error = _ref6.error,\n        cb = _ref6.cb;\n\n    dispatch('fetchApi', {\n      url: \"plans/\".concat(planId),\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_PLAN, response.data);\n        cb(response);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  createPlan: function createPlan(_ref7, payload) {\n    var commit = _ref7.commit,\n        dispatch = _ref7.dispatch;\n\n    var _ref8 = payload || {},\n        plan = _ref8.plan,\n        cb = _ref8.cb;\n\n    dispatch('fetchApi', {\n      url: 'plans',\n      method: 'POST',\n      data: plan,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  updatePlan: function updatePlan(_ref9, payload) {\n    var commit = _ref9.commit,\n        dispatch = _ref9.dispatch;\n\n    var _ref10 = payload || {},\n        id = _ref10.id,\n        plan = _ref10.plan,\n        cb = _ref10.cb,\n        error = _ref10.error;\n\n    dispatch('fetchApi', {\n      url: \"plans/\".concat(id),\n      method: 'PUT',\n      data: plan,\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  },\n  deletePlan: function deletePlan(_ref11, payload) {\n    var commit = _ref11.commit,\n        dispatch = _ref11.dispatch;\n\n    var _ref12 = payload || {},\n        id = _ref12.id,\n        cb = _ref12.cb,\n        error = _ref12.error;\n\n    dispatch('fetchApi', {\n      url: \"plans/\".concat(id),\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  },\n  changeStatusPlan: function changeStatusPlan(_ref13, payload) {\n    var commit = _ref13.commit,\n        dispatch = _ref13.dispatch;\n\n    var _ref14 = payload || {},\n        id = _ref14.id,\n        mail = _ref14.mail,\n        cb = _ref14.cb,\n        error = _ref14.error;\n\n    dispatch('fetchApi', {\n      url: \"plans/change-status-wait/\".concat(id),\n      method: 'PUT',\n      data: mail,\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  },\n  clearFilter: function clearFilter(_ref15) {\n    var commit = _ref15.commit;\n    commit('resetFilter');\n  },\n  clearFilterBranch: function clearFilterBranch(_ref16) {\n    var commit = _ref16.commit;\n    commit('clearBranch');\n  },\n  clearFilterDate: function clearFilterDate(_ref17) {\n    var commit = _ref17.commit;\n    commit('clearDate');\n  },\n  clearFilterPosition: function clearFilterPosition(_ref18) {\n    var commit = _ref18.commit;\n    commit('clearPosition');\n  }\n};\n/**\n * mutations\n */\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_PLAN, function (state, plan) {\n  state.plan = plan;\n}), _defineProperty(_mutations, SET_INITIAL_STATE, function (state) {\n  state.params = initState().params;\n}), _defineProperty(_mutations, \"updateField\", updateField), _defineProperty(_mutations, \"resetFilter\", function resetFilter(state) {\n  state.params.q = '';\n  state.params.branchId = '';\n  state.params.departmentId = '';\n  state.params.positionId = '';\n  state.params.status = '';\n  state.params.date = '';\n  state.params.dateStart = '';\n  state.params.dateEnd = '';\n}), _defineProperty(_mutations, \"clearBranch\", function clearBranch(state) {\n  state.params.departmentId = '';\n}), _defineProperty(_mutations, \"clearDate\", function clearDate(state) {\n  state.params.dateEnd = '';\n  state.params.dateStart = '';\n}), _mutations);\n/**\n * getters\n */\n\nvar getters = {\n  planDetail: function planDetail(state) {\n    return state.plan;\n  },\n  planAll: function planAll(state) {\n    return state.plan;\n  },\n  filterParams: function filterParams(state) {\n    return state.params;\n  },\n  getField: getField\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/plan.js"],"names":["SET_PLAN","SET_INITIAL_STATE","getField","updateField","initState","plan","params","q","branchId","departmentId","positionId","status","date","dateStart","dateEnd","include","sort","state","actions","setPlan","payload","commit","fetchPlan","dispatch","error","url","method","success","response","data","root","getPlan","planId","cb","createPlan","updatePlan","id","deletePlan","changeStatusPlan","mail","clearFilter","clearFilterBranch","clearFilterDate","clearFilterPosition","mutations","getters","planDetail","planAll","filterParams","namespaced"],"mappings":"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","sourcesContent":["import {\n  SET_PLAN,\n  SET_INITIAL_STATE\n} from '../mutation-types'\nimport { getField, updateField } from 'vuex-map-fields'\nconst initState = () => {\n  return {\n    plan: {},\n    params: {\n      q: '',\n      branchId: '',\n      departmentId: '',\n      positionId: '',\n      status: '',\n      date: '',\n      dateStart: '',\n      dateEnd: '',\n      include: 'details.department.branch,candidates',\n      sort: 'status:1,id:-1'\n    }\n  }\n}\n\n/**\n * state\n */\nconst state = {\n  plan: initState().plan,\n  params: initState().params\n}\n\n/**\n * actions\n */\nconst actions = {\n  setPlan ({ commit }, payload) {\n    let { plan } = payload || {}\n    commit(SET_PLAN, plan)\n  },\n  fetchPlan ({ commit, dispatch }, payload) {\n    let { params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `plans`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_PLAN, response.data)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  getPlan ({ commit, dispatch }, payload) {\n    let { planId, params, error, cb } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `plans/${planId}`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_PLAN, response.data)\n          cb(response)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  createPlan ({ commit, dispatch }, payload) {\n    let { plan, cb } = payload || {}\n    dispatch('fetchApi', {\n      url: 'plans',\n      method: 'POST',\n      data: plan,\n      success: cb\n    }, { root: true })\n  },\n  updatePlan ({ commit, dispatch }, payload) {\n    let { id, plan, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `plans/${id}`,\n      method: 'PUT',\n      data: plan,\n      success: cb,\n      error: error\n    }, { root: true })\n  },\n  deletePlan ({ commit, dispatch }, payload) {\n    let { id, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `plans/${id}`,\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, { root: true })\n  },\n  changeStatusPlan ({ commit, dispatch }, payload) {\n    let { id, mail, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `plans/change-status-wait/${id}`,\n      method: 'PUT',\n      data: mail,\n      success: cb,\n      error: error\n    }, { root: true })\n  },\n\n  clearFilter ({ commit }) {\n    commit('resetFilter')\n  },\n  clearFilterBranch ({ commit }) {\n    commit('clearBranch')\n  },\n  clearFilterDate ({ commit }) {\n    commit('clearDate')\n  },\n  clearFilterPosition ({ commit }) {\n    commit('clearPosition')\n  }\n\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_PLAN]: (state, plan) => {\n    state.plan = plan\n  },\n  [SET_INITIAL_STATE]: (state) => {\n    state.params = initState().params\n  },\n  updateField,\n  // clear toàn bộ tính năng lọc\n  resetFilter (state) {\n    state.params.q = ''\n    state.params.branchId = ''\n    state.params.departmentId = ''\n    state.params.positionId = ''\n    state.params.status = ''\n    state.params.date = ''\n    state.params.dateStart = ''\n    state.params.dateEnd = ''\n  },\n  clearBranch (state) {\n    state.params.departmentId = ''\n  },\n  clearDate (state) {\n    state.params.dateEnd = ''\n    state.params.dateStart = ''\n  }\n\n  // fiterStatus (state, value) {\n  //   state.params.status = value\n  // },\n  // filterStatus (state, value) {\n  //   state.params.status = value\n  // }\n}\n\n/**\n * getters\n */\nconst getters = {\n  planDetail: (state) => state.plan,\n  planAll: (state) => state.plan,\n  filterParams: (state) => state.params,\n  getField\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}