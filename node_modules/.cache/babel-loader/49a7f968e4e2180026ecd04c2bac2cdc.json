{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/role/Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/role/Form.vue","mtime":1538377839386},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1534394480737},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":1534394476611},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":1536410629618}],"contextDependencies":[],"result":["import _objectSpread from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nimport { map, chain } from 'lodash';\nexport default {\n  name: 'RoleForm',\n  computed: _objectSpread({}, mapGetters(['isFetchingApi', 'allPermission']), {\n    isCreate: function isCreate() {\n      return this.type === 'create';\n    }\n  }),\n  props: {\n    type: {\n      type: String,\n      default: 'create'\n    },\n    dataRole: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      role: {\n        name: '',\n        slug: '',\n        description: '',\n        admin_only: false,\n        permissions: []\n      }\n    };\n  },\n  methods: _objectSpread({}, mapActions(['getAllPermission']), {\n    setInitData: function setInitData() {\n      var initData = _objectSpread({}, this.dataRole);\n\n      initData.permissions = map(initData.permissions, function (value, key) {\n        return key;\n      });\n      this.role = _objectSpread({}, this.role, initData);\n    },\n    validateBeforeSubmit: function validateBeforeSubmit() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          var submitData = _objectSpread({}, _this.role);\n\n          submitData.permissions = chain(submitData.permissions).map(function (value) {\n            return [value, true];\n          }).fromPairs().value();\n\n          _this.$emit('submit', submitData);\n        } else {\n          _this.$store.dispatch('showNotify', {\n            text: _this.$t('alert.invalid'),\n            color: 'warning'\n          });\n        }\n      });\n    }\n  }),\n  created: function created() {\n    !!this.dataRole && this.setInitData();\n    !!this.allPermission && this.getAllPermission();\n  }\n};",{"version":3,"sources":["Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,SAAA,GAAA,EAAA,KAAA,QAAA,QAAA;AACA,eAAA;AACA,QAAA,UADA;AAEA,8BACA,WAAA,CAAA,eAAA,EAAA,eAAA,CAAA,CADA;AAEA,YAFA,sBAEA;AACA,aAAA,KAAA,IAAA,KAAA,QAAA;AACA;AAJA,IAFA;AAQA,SAAA;AACA,UAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KADA;AAKA,cAAA;AACA,YAAA,MADA;AAEA,eAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA;AALA,GARA;AAoBA,MApBA,kBAoBA;AACA,WAAA;AACA,YAAA;AACA,cAAA,EADA;AAEA,cAAA,EAFA;AAGA,qBAAA,EAHA;AAIA,oBAAA,KAJA;AAKA,qBAAA;AALA;AADA,KAAA;AASA,GA9BA;AA+BA,6BACA,WAAA,CAAA,kBAAA,CAAA,CADA;AAEA,eAFA,yBAEA;AACA,UAAA,6BAAA,KAAA,QAAA,CAAA;;AACA,eAAA,WAAA,GAAA,IAAA,SAAA,WAAA,EAAA,UAAA,KAAA,EAAA,GAAA;AAAA,eAAA,GAAA;AAAA,OAAA,CAAA;AACA,WAAA,IAAA,qBAAA,KAAA,IAAA,EAAA,QAAA;AACA,KANA;AAOA,wBAPA,kCAOA;AAAA;;AACA,WAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,kBAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,+BAAA,MAAA,IAAA,CAAA;;AACA,qBAAA,WAAA,GAAA,MAAA,WAAA,WAAA,EAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,mBAAA,CAAA,KAAA,EAAA,IAAA,CAAA;AACA,WAFA,EAEA,SAFA,GAGA,KAHA,EAAA;;AAIA,gBAAA,KAAA,CAAA,QAAA,EAAA,UAAA;AACA,SAPA,MAOA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AACA,kBAAA,MAAA,EAAA,CAAA,eAAA,CADA;AAEA,mBAAA;AAFA,WAAA;AAIA;AACA,OAdA;AAeA;AAvBA,IA/BA;AAwDA,SAxDA,qBAwDA;AACA,KAAA,CAAA,KAAA,QAAA,IAAA,KAAA,WAAA,EAAA;AACA,KAAA,CAAA,KAAA,aAAA,IAAA,KAAA,gBAAA,EAAA;AACA;AA3DA,CAAA","sourcesContent":["<template>\n  <v-form @submit.prevent=\"validateBeforeSubmit\">\n    <v-text-field\n      :error-messages=\"errors.has('name') ? errors.collect('name') : []\"\n      v-validate=\"'required|min:3'\"\n      :data-vv-as=\"$t('label.name')\"\n      name=\"name\"\n      :label=\"$t('label.name') + ' *'\"\n      v-model=\"role.name\">\n    </v-text-field>\n    <v-text-field\n      :error-messages=\"errors.has('slug') ? errors.collect('slug') : []\"\n      v-validate=\"'required'\"\n      :data-vv-as=\"$t('label.slug')\"\n      name=\"slug\"\n      :label=\"$t('label.slug') + ' *'\"\n      type=\"slug\"\n      v-model=\"role.slug\">\n    </v-text-field>\n    <v-textarea\n      solo\n      name=\"description\"\n      label=\"Mô tả\"\n      v-model=\"role.description\"\n    ></v-textarea>\n    <v-checkbox\n      label=\"Quyền danh riêng cho admin\"\n      v-model=\"role.admin_only\"\n    ></v-checkbox>\n    <h3>Danh sách quyền truy cập</h3>\n    <v-container v-for=\"(perG, key) in allPermission\" :key=\"key\">\n      <h4>{{ perG.title }}</h4>\n      <v-flex d-flex>\n        <v-checkbox v-model=\"role.permissions\" v-for=\"(per, k) in perG.list\" :key=\"`${key}.${k}`\" :label=\"per\" :value=\"`${key}.${k}`\" />\n      </v-flex>\n    </v-container>\n    <v-flex xs12 text-xs-center>\n      <v-btn\n        :loading=\"isFetchingApi\"\n        :disabled=\"isFetchingApi\"\n        color=\"primary\"\n        type=\"submit\"\n        >\n        <template v-if=\"isCreate\">\n          <v-icon left>add</v-icon> {{$t('control.create')}}\n        </template>\n        <template v-else>\n          <v-icon left>save</v-icon> {{$t('control.save')}}\n        </template>\n      </v-btn>\n    </v-flex>\n  </v-form>\n</template>\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { map, chain } from 'lodash'\nexport default{\n  name: 'RoleForm',\n  computed: {\n    ...mapGetters(['isFetchingApi', 'allPermission']),\n    isCreate () {\n      return this.type === 'create'\n    }\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'create'\n    },\n    dataRole: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  data () {\n    return {\n      role: {\n        name: '',\n        slug: '',\n        description: '',\n        admin_only: false,\n        permissions: []\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['getAllPermission']),\n    setInitData () {\n      let initData = { ...this.dataRole }\n      initData.permissions = map(initData.permissions, (value, key) => key)\n      this.role = { ...this.role, ...initData }\n    },\n    validateBeforeSubmit () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n          let submitData = { ...this.role }\n          submitData.permissions = chain(submitData.permissions).map((value) => {\n            return [value, true]\n          }).fromPairs()\n            .value()\n          this.$emit('submit', submitData)\n        } else {\n          this.$store.dispatch('showNotify', {\n            text: this.$t('alert.invalid'),\n            color: 'warning'\n          })\n        }\n      })\n    }\n  },\n  created () {\n    !!this.dataRole && this.setInitData()\n    !!this.allPermission && this.getAllPermission()\n  }\n}\n</script>\n"],"sourceRoot":"src/views/role"}]}