{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/account/Register.vue?vue&type=template&id=aa152402&scoped=true&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/account/Register.vue","mtime":1538377839386},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-form\",\n    {\n      on: {\n        submit: function($event) {\n          $event.preventDefault()\n          return _vm.validateBeforeSubmit($event)\n        }\n      }\n    },\n    [\n      _c(\"v-text-field\", {\n        directives: [\n          {\n            name: \"validate\",\n            rawName: \"v-validate\",\n            value: \"required|min:2|max:255\",\n            expression: \"'required|min:2|max:255'\"\n          }\n        ],\n        attrs: {\n          \"error-messages\": _vm.errors.has(\"name\")\n            ? _vm.errors.collect(\"name\")\n            : [],\n          \"data-vv-as\": \"Họ tên\",\n          name: \"name\",\n          placeholder: \"Nguyễn Văn A\",\n          autocomplete: \"off\",\n          label: \"Họ tên *\"\n        },\n        model: {\n          value: _vm.register.name,\n          callback: function($$v) {\n            _vm.$set(_vm.register, \"name\", $$v)\n          },\n          expression: \"register.name\"\n        }\n      }),\n      _c(\"v-text-field\", {\n        directives: [\n          {\n            name: \"validate\",\n            rawName: \"v-validate\",\n            value: \"min:2|max:255\",\n            expression: \"'min:2|max:255'\"\n          }\n        ],\n        attrs: {\n          \"error-messages\": _vm.errors.has(\"company_name\")\n            ? _vm.errors.collect(\"company_name\")\n            : [],\n          \"data-vv-as\": \"Tên công ty\",\n          placeholder: \"Gostore\",\n          autocomplete: \"off\",\n          name: \"company_name\",\n          label: \"Tên công ty\"\n        },\n        model: {\n          value: _vm.register.company_name,\n          callback: function($$v) {\n            _vm.$set(_vm.register, \"company_name\", $$v)\n          },\n          expression: \"register.company_name\"\n        }\n      }),\n      _c(\"v-text-field\", {\n        directives: [\n          {\n            name: \"validate\",\n            rawName: \"v-validate\",\n            value: \"min:8|max:12\",\n            expression: \"'min:8|max:12'\"\n          },\n          { name: \"number-only\", rawName: \"v-number-only\" }\n        ],\n        attrs: {\n          \"error-messages\": _vm.errors.has(\"phone\")\n            ? _vm.errors.collect(\"phone\")\n            : [],\n          \"data-vv-as\": \"Số điện thoại\",\n          placeholder: \"0123456789\",\n          type: \"tel\",\n          autocomplete: \"off\",\n          name: \"phone\",\n          label: \"Số điện thoại\"\n        },\n        model: {\n          value: _vm.register.phone,\n          callback: function($$v) {\n            _vm.$set(_vm.register, \"phone\", $$v)\n          },\n          expression: \"register.phone\"\n        }\n      }),\n      _c(\"v-text-field\", {\n        directives: [\n          {\n            name: \"validate\",\n            rawName: \"v-validate\",\n            value: \"required|email\",\n            expression: \"'required|email'\"\n          }\n        ],\n        attrs: {\n          \"error-messages\": _vm.errors.has(\"email\")\n            ? _vm.errors.collect(\"email\")\n            : [],\n          \"data-vv-as\": \"Tài khoản\",\n          placeholder: \"example@gmail.com\",\n          type: \"email\",\n          autocomplete: \"off\",\n          name: \"email\",\n          label: \"Tài khoản *\"\n        },\n        model: {\n          value: _vm.register.email,\n          callback: function($$v) {\n            _vm.$set(_vm.register, \"email\", $$v)\n          },\n          expression: \"register.email\"\n        }\n      }),\n      _c(\"v-text-field\", {\n        directives: [\n          {\n            name: \"validate\",\n            rawName: \"v-validate\",\n            value: \"required|min:5\",\n            expression: \"'required|min:5'\"\n          }\n        ],\n        attrs: {\n          \"error-messages\": _vm.errors.has(\"password\")\n            ? _vm.errors.collect(\"password\")\n            : [],\n          \"data-vv-as\": \"Mật khẩu\",\n          placeholder: \"......\",\n          autocomplete: \"off\",\n          \"append-icon\": _vm.showPassword ? \"visibility_off\" : \"visibility\",\n          type: _vm.showPassword ? \"text\" : \"password\",\n          name: \"password\",\n          label: \"Mật khẩu *\"\n        },\n        on: {\n          \"click:append\": function($event) {\n            _vm.showPassword = !_vm.showPassword\n          }\n        },\n        model: {\n          value: _vm.register.password,\n          callback: function($$v) {\n            _vm.$set(_vm.register, \"password\", $$v)\n          },\n          expression: \"register.password\"\n        }\n      }),\n      _c(\"v-text-field\", {\n        directives: [\n          {\n            name: \"validate\",\n            rawName: \"v-validate\",\n            value: \"required|min:5|confirmed:password\",\n            expression: \"'required|min:5|confirmed:password'\"\n          }\n        ],\n        attrs: {\n          \"error-messages\": _vm.errors.has(\"password_confirmation\")\n            ? _vm.errors.collect(\"password_confirmation\")\n            : [],\n          placeholder: \"......\",\n          autocomplete: \"off\",\n          \"append-icon\": _vm.showPasswordConfirmation\n            ? \"visibility_off\"\n            : \"visibility\",\n          type: _vm.showPasswordConfirmation ? \"text\" : \"password\",\n          \"data-vv-as\": \"Nhập lại mật khẩu\",\n          name: \"password_confirmation\",\n          label: \"Nhập lại mật khẩu\"\n        },\n        on: {\n          \"click:append\": function($event) {\n            _vm.showPasswordConfirmation = !_vm.showPasswordConfirmation\n          }\n        },\n        model: {\n          value: _vm.register.password_confirmation,\n          callback: function($$v) {\n            _vm.$set(_vm.register, \"password_confirmation\", $$v)\n          },\n          expression: \"register.password_confirmation\"\n        }\n      }),\n      _c(\n        \"v-card-actions\",\n        { staticClass: \"mt-3 mb-3\" },\n        [\n          _c(\n            \"v-btn\",\n            {\n              attrs: {\n                loading: _vm.isFetchingApi,\n                disabled: _vm.isFetchingApi,\n                color: \"primary\",\n                type: \"submit\",\n                block: \"\"\n              }\n            },\n            [_vm._v(\"\\n      Đăng ký\\n    \")]\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}