{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/settingHrm/Index.vue?vue&type=style&index=0&id=80b58e20&scoped=true&lang=css&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/settingHrm/Index.vue","mtime":1543149736536},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  span.status{\n    position: absolute;\n    bottom: 118px;\n    left:70px;\n  }\n  #d1 {\n    height:600px !important;\n  }\n  .title-department{\n   color: #67757c;\n   -webkit-transform: translateY(-25px) translateX(-12px);\n   transform: translateY(-25px) translateX(-12px);\n   top: 0;\n }\n .v-menu__content{\n  position: none !important;\n  left: 20% !important;\n  right: 20% !important;\n  top: 20% !important;\n}\n",{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2oBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views/settingHrm","sourcesContent":["<template>\n  <v-layout ref=\"laylout\" column fill-height>\n   <div ref=\"header\">\n    <v-toolbar height=\"50px\" color=\"white\" flat>\n      <v-layout row wrap>\n        <v-tooltip bottom class=\"mt-2\">\n          <v-btn slot=\"activator\" v-if=\"canAccess('setting.create')\"\n          class=\"mr-5\" icon color=\"primary\"\n          @click=\"addSetting\"\n          >\n          <v-icon>add</v-icon>\n        </v-btn>\n        <span>Thêm mới</span>\n      </v-tooltip>\n      <v-flex xs10 class=\"mt-1\" :class=\"isMini && 'full-flex-basic full-width-col-10'\">\n        <v-text-field\n        hide-details\n        single-line\n        placeholder=\"Tìm kiếm ...\"\n        v-model=\"filterQ\"\n        @click:clear=\"clearSearch\"\n        @keyup=\"changeSearch\"\n        clearable\n        ></v-text-field>\n      </v-flex>\n    </v-layout>\n    <v-layout slot=\"extension\" v-if=\"!isMini\">\n      <v-flex style=\"flex-basis:55px;\" sm1 class=\"text-bold\">\n        #\n      </v-flex>\n      <v-flex sm2 class=\"text-bold\">\n        Tên\n      </v-flex>\n      <v-flex sm2 class=\"text-bold\">\n        Key\n      </v-flex>\n      <v-flex sm6 class=\"text-bold\">\n        Giá trị\n      </v-flex>\n<!--       <v-flex sm2 class=\"text-bold ml-2\">\n        Trạng thái\n      </v-flex> -->\n      <v-flex sm2 class=\"text-bold ml-2\">\n        Hành động\n      </v-flex>\n    </v-layout>\n  </v-toolbar>\n</div>\n<v-flex>\n <v-dialog v-model=\"dialog\" :max-width=\"widthDiglogDefault\">\n  <v-form @submit.prevent=\"submitForm\"  class=\"pa-0\" style=\"position: relative;\">\n   <v-card>\n    <div :style=\"{width:widthDiglogDefault}\" style=\"position: fixed; z-index: 1000; background-color: #fff;\">\n      <v-card-title sm12 >\n        <span class=\"headline\" style=\"margin: 0 auto;\">{{ formTitle }}\n        </span>\n      </v-card-title>\n      <v-divider></v-divider>\n    </div>\n    <!-- form edit -->\n    <v-card-text id=\"formSub\">\n      <v-container fluid class=\"white scroll-y pt-5\">\n        <v-layout wrap>\n         <!-- name -->\n         <v-flex xs12 sm6 md12>\n          <v-text-field\n          autofocus\n          tabindex=\"1\"\n          ref=\"firstInput\"\n          placeholder=\"Nhập thông tin\"\n          :error-messages=\"errors.has('name') ? errors.collect('name') : []\"\n          v-validate=\"'required'\"\n          :data-vv-as=\"$t('label.name')\"\n          name=\"name\"\n          label=\"Thông tin\"\n          class=\"input-required\"\n          v-model=\"setting.name\"> </v-text-field>\n        </v-flex>\n\n        <!-- slug -->\n        <v-layout row xs12 sm6 md12>\n          <v-text-field\n          placeholder=\"Nhập key\"\n          v-validate=\"'required'\"\n          tabindex=\"2\"\n          :error-messages=\"errors.has('slug') ? errors.collect('slug') : []\"\n          :data-vv-as=\"$t('label.slug')\"\n          name=\"slug\"\n          id=\"input\"\n          :label=\"$t('label.key')\"\n          class=\"input-required\"\n          v-model=\"setting.slug\">\n          <v-fade-transition slot=\"append\">\n            <v-tooltip bottom>\n              <v-icon slot=\"activator\" color=\"primary\" @click=\"copy\">save</v-icon>\n              <span>Sao chép</span>\n            </v-tooltip>\n            </v-fade-transition\n            > </v-text-field>\n          </v-layout>\n          <v-flex xs12>\n            <v-select\n            :disabled=\"!(editedIndex===-1)\"\n            tabindex=\"3\"\n            label=\"Kiểu nhập\"\n            :items=\"typeValueSetting\"\n            placeholder=\"Chọn kiểu nhập\"\n            item-text=\"name\"\n            item-value=\"value\"\n            v-model=\"defaultValue\"\n            @change=\"changeTypeSetting\"\n            ></v-select>\n          </v-flex>\n          <v-flex xs12>\n            <label style=\"color:#859197;font-size: 17px;\" v-if=\"isEditor\">Giá trị <span style=\"color:red;\">*</span>\n            </label>\n            <tinymce\n            id=\"d1\"\n            tabindex=\"4\"\n            toolbar1=\"formatselect | bold italic strikethrough forecolor backcolor | link | alignleft aligncenter alignright alignjustify | numlist bullist outdent indent | removeformat | codesample\"\n            toolbar2=\"\"\n            :other_options=\"{ height: '300px', images_upload_handler: handleImageAdded }\"\n            v-if=\"isEditor\"\n            v-validate =\"'required'\"\n            :error-messages=\"errors.has('value') ? errors.collect('value') : []\"\n            :data-vv-as=\"$t('label.value')\"\n            placeholder=\"Nhập giá trị\"\n            name=\"value\"\n            :label=\"$t('label.value')\"\n            v-model=\"setting.value\"\n            @editorInit=\"setEditorContent($event, setting.value)\"\n            ></tinymce>\n            <span v-if=\"isEditor\" v-show=\"errors.has('value')\" style=\"color: #ff5252; margin-top: 15px; font-size:12px;\">{{ errors.first('value') }}</span>\n            <!-- phone or hotline -->\n            <v-text-field\n            tabindex=\"4\"\n            v-if=\"isPhone\"\n            placeholder=\"Nhập giá trị\"\n            v-validate=\"'required|numeric|min:10|max:12'\"\n            :error-messages=\"errors.has('value') ? errors.collect('value') : []\"\n            :data-vv-as=\"$t('label.value')\"\n            name=\"value\"\n            :counter=\"12\"\n            type=\"number\"\n            :label=\"$t('label.value')\"\n            class=\"input-required\"\n            v-model=\"setting.value\"> </v-text-field>\n            <!-- email -->\n            <v-text-field\n            tabindex=\"4\"\n            v-if=\"isEmail\"\n            placeholder=\"Example@gmail.com\"\n            v-validate=\"'required|email'\"\n            :error-messages=\"errors.has('value') ? errors.collect('value') : []\"\n            :data-vv-as=\"$t('label.value')\"\n            name=\"value\"\n            :label=\"$t('label.value')\"\n            class=\"input-required\"\n            v-model=\"setting.value\"> </v-text-field>\n            <!-- url-->\n            <v-text-field\n            tabindex=\"4\"\n            v-if=\"isUrl\"\n            placeholder=\"https://vnexpress.net\"\n            v-validate=\"'required|url:require_protocol'\"\n            :error-messages=\"errors.has('value') ? errors.collect('value') : []\"\n            :data-vv-as=\"$t('label.value')\"\n            name=\"value\"\n            :label=\"$t('label.value')\"\n            class=\"input-required\"\n            v-model=\"setting.value\"> </v-text-field>\n            <!-- number-->\n            <v-text-field\n            tabindex=\"4\"\n            v-if=\"isNumber\"\n            placeholder=\"Nhập số\"\n            v-validate=\"'required|numeric'\"\n            :error-messages=\"errors.has('value') ? errors.collect('value') : []\"\n            :data-vv-as=\"$t('label.value')\"\n            name=\"value\"\n            type=\"number\"\n            min=1\n            :label=\"$t('label.value')\"\n            class=\"input-required\"\n            v-model=\"setting.value\"> </v-text-field>\n            <!-- key othor -->\n            <v-text-field\n            tabindex=\"4\"\n            v-if=\"isNomal\"\n            placeholder=\"Nhập giá trị\"\n            v-validate=\"'required'\"\n            :error-messages=\"errors.has('value') ? errors.collect('value') : []\"\n            :data-vv-as=\"$t('label.value')\"\n            name=\"value\"\n            :label=\"$t('label.value')\"\n            class=\"input-required\"\n            v-model=\"setting.value\">\n          </v-text-field>\n          </v-flex>\n          <v-flex xs3 class=\"mt-3\">\n              <label slot=\"activator\">Trạng thái</label>\n              <v-tooltip bottom>\n                  <v-switch\n                  style=\"margin-top:-4px; outline-style: none;\"\n                  v-validate = \"'required'\"\n                  tabindex = \"5\"\n                  name = \"status\"\n                  slot=\"activator\"\n                  v-model=\"setting.status\"\n                  ></v-switch>\n                  <span v-if=\"setting.status\">Hiển thị</span>\n                  <span v-else>Không hiển thị</span>\n              </v-tooltip>\n          </v-flex>\n      </v-layout>\n    </v-container>\n  </v-card-text>\n  <div style=\"margin-top: -40px;\">\n      <v-divider></v-divider>\n      <v-card-actions style=\"\">\n         <v-spacer></v-spacer>\n              <v-btn tabindex=\"6\" color=\"error\" flat @click.native=\"close\">Hủy bỏ</v-btn>\n              <v-btn tabindex=\"7\" type=\"submit\" class=\"green--text text-uppercase\" flat><span v-if=\"editedIndex!==-1\">Lưu lại</span><span v-else class=\"text-uppercase\">Thêm mới</span></v-btn>\n              <div :tabindex=\"7\"  @focus=\"backTabIndex\"></div>\n      </v-card-actions>\n  </div>\n</v-card>\n</v-form>\n</v-dialog>\n</v-flex>\n\n<v-flex xs12 class=\"border-e0-top\">\n  <data-view\n  :name=\"dataViewName\"\n  api-url=\"settings?sort=status:-1,id:-1\"\n  v-if=\"dataViewHeight\"\n  :viewHeight=\"dataViewHeight\"\n  :params=\"filterParams\"\n  :ref=\"dataViewName\"\n  >\n  <template slot-scope=\"{items}\">\n    <v-list three-line>\n      <template v-for=\"(item, index) in items.data\">\n        <v-layout class=\"pa-2\" :key=\"index\" >\n          <v-flex style=\"flex-basis:55px;\" class=\"ml-3\" sm1 :class=\"isMini && 'd-none'\">\n            {{ index + 1 }}\n          </v-flex>\n          <v-flex sm2 class=\"pr-1\" :class=\"isMini && 'd-none'\">\n            {{ item.name }}\n          </v-flex>\n          <v-flex sm2 class=\"pr-1 copytext\" :class=\"isMini && 'd-none'\">\n            <span @click.stop=\"clickToCopy\" class=\"click-copy text-capitalize\">{{ item.slug }}</span>\n          </v-flex>\n          <v-flex\n          row\n          class=\"mr-1\"\n          sm6\n          style=\"white-space: nowrap;\"\n          v-if=\"item.value.length > 56\"\n          >\n          <v-flex style=\"float:left\">\n            <span v-html=\"item.value.slice(0,55) + ' ...'\"></span>\n          </v-flex>\n          <v-flex sm1 style=\"margin-top: -13px;\">\n            <v-tooltip bottom>\n              <v-btn slot=\"activator\" icon @click=\"DetailSetting(item)\"><v-icon color=\"green\" size=\"19px\">fas fa-eye</v-icon></v-btn>\n              <span>Xem thêm</span>\n            </v-tooltip>\n          </v-flex>\n          <v-menu\n          style=\"left:50px !important;\"\n          v-model=\"dialogDetail\"\n          >\n          <v-card>\n            <v-list>\n              <v-list-tile>\n                <v-list-tile-content  v-if=\"valueSetting\">\n                  <v-list-tile-title class=\"text-xs-center\" >{{ valueSetting.name }}</v-list-tile-title>\n                </v-list-tile-content>\n                <v-btn icon flat @click=\"dialogDetail = false\">\n                  <v-icon color=\"primary\">close</v-icon>\n                </v-btn>\n              </v-list-tile>\n              <v-divider></v-divider>\n              <v-container fluid class=\"white scroll-y\" v-if=\"valueSetting\">\n                <v-flex v-html=\"valueSetting.value\">\n                </v-flex>\n              </v-container>\n            </v-list>\n          </v-card>\n        </v-menu>\n      </v-flex>\n      <v-flex\n      class=\"mr-1\"\n      sm6\n      v-else\n      v-html=\"item.value\"> </v-flex>\n      <v-flex sm2 :class=\"isMini && 'd-none'\">\n        <v-layout row xs12>\n          <v-tooltip bottom sm6>\n            <v-btn slot=\"activator\" class=\"ma-0\" v-if=\"canAccess('setting.update')\"  @click=\"editSetting(item,item.id)\" icon>\n              <v-icon class='theme--light teal--text'>edit</v-icon>\n            </v-btn>\n            <span>Sửa</span>\n          </v-tooltip>\n          <v-tooltip bottom sm6>\n            <v-btn slot=\"activator\" class=\"ma-0\" v-if=\"canAccess('setting.delete')\" @click.stop=\"removeConfirm(item)\" icon >\n              <v-icon class=\"theme--light pink--text\">delete</v-icon>\n            </v-btn>\n            <span>Xóa</span>\n          </v-tooltip>\n        </v-layout>\n        <v-tooltip bottom sm12>\n          <v-switch\n          @click.native.stop\n          @change=\"changeStatus(item.id)\"\n          class='ml-3'\n          name=\"status\"\n          slot=\"activator\"\n          v-model=\"item.status\"\n          ></v-switch>\n          <span v-if=\"item.status\">Hiển thị</span>\n          <span v-else>Không hiển thị</span>\n        </v-tooltip>\n      </v-flex>\n    </v-layout>\n    <v-divider\n    :key=\"'div'+ item.id\"\n    v-if=\"index + 1 < items.data.length\"\n    ></v-divider>\n  </template>\n</v-list>\n</template>\n</data-view>\n</v-flex>\n<dialog-confirm v-model=\"dialogDelete\" @input=\"remove\" />\n</v-layout>\n</template>\n<script>\nimport axios from '../../plugins/axios'\nimport { debounce } from 'lodash'\nimport DataView from '@/components/DataView/DataView'\nimport DialogConfirm from '@/components/DialogConfirm'\nimport { mapActions, mapGetters } from 'vuex'\nimport { mapFields } from 'vuex-map-fields'\nexport default{\n  name: 'setingIndex',\n  components: {\n    DataView,\n    DialogConfirm\n  },\n  props: {\n    isMini: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    dialogDetail: false,\n    valueSetting: null,\n    width: 500,\n    dataViewHeight: 0,\n    dataViewName: 'setting',\n    defaultValue: null,\n    idSetting: null,\n    dialogDelete: false,\n    dialog: false,\n    widthDiglogDefault: '600px',\n    typeValueSetting: [\n      { name: 'Bình thường', value: 0 },\n      { name: 'Số điện thoại', value: 1 },\n      { name: 'Văn bản', value: 2 },\n      { name: 'Email', value: 3 },\n      { name: 'Url', value: 4 },\n      { name: 'Số', value: 5 }\n    ],\n    editedIndex: -1,\n    setting: {\n      name: '',\n      value: '',\n      slug: '',\n      status: true\n    },\n    defaultItem: {\n      value: '',\n      status: true,\n      type: 0\n    }\n  }),\n  watch: {\n    dialog (val) {\n      if (!val) return\n      requestAnimationFrame(() => {\n        this.$refs.firstInput.focus()\n      })\n    }\n  },\n  computed: {\n    ...mapGetters('Setting', [ 'filterParams']),\n    ...mapGetters(['isFetchingApi']),\n    ...mapFields(`Setting`, {\n      filterQ: 'params.q'\n    }),\n    formTitle () {\n      return this.editedIndex === -1 ? 'Thêm thiết lập' : 'Sửa thiết lập'\n    },\n    isNomal () {\n      return this.defaultValue === 0\n    },\n    isPhone () {\n      return this.defaultValue === 1\n    },\n    isEditor () {\n      return this.defaultValue === 2\n    },\n    isEmail () {\n      return this.defaultValue === 3\n    },\n    isUrl () {\n      return this.defaultValue === 4\n    },\n    isNumber () {\n      return this.defaultValue === 5\n    }\n  },\n  created () {\n    this.FetchSetting()\n  },\n  mounted () {\n    this.dataViewHeight = this.$refs.laylout.clientHeight - 104\n    let query = { ...this.$route.query }\n    if (query.hasOwnProperty('reload')) {\n      this.$nextTick(() => {\n        this.$refs[this.dataViewName].$emit('reload')\n      })\n      delete query.reload\n      this.$router.replace({\n        query: query\n      })\n    }\n  },\n  methods: {\n    ...mapActions(['fetchApi']),\n    ...mapActions(['setMiniDrawer']),\n    ...mapActions('Setting', ['FetchSetting', 'updateStatusSetting', 'createSetting', 'updateSetting', 'deleteSetting']),\n    ...mapActions('Dataview', ['updateDataviewEntry', 'removeDataviewEntry']),\n    ...mapActions(['showNotify', 'setMiniDrawer']),\n\n    backTabIndex () {\n      this.$refs.firstInput.focus()\n    },\n    // close dialog\n    close () {\n      this.dialog = false\n      setTimeout(() => {\n        this.setting = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      }, 300)\n    },\n    // nut copy\n    copy () {\n      var copyText = document.querySelector('#input')\n      copyText.select()\n      document.execCommand('copy')\n    },\n    DetailSetting (item) {\n      this.valueSetting = item\n      this.dialogDetail = true\n    },\n    // open dialog\n    addSetting () {\n      this.setting = Object.assign({}, this.defaultItem)\n      this.$validator.reset()\n      this.editedIndex = -1\n      this.changeTypeSetting(-1)\n      this.dialog = true\n    },\n    // reset all search\n    clearSearch () {\n      this.changeSearch()\n      this.filter()\n    },\n    // copy\n    copy () {\n      var copyText = document.querySelector('#input')\n      copyText.select()\n      document.execCommand('copy')\n    },\n    // change filter\n    changeSearch: debounce(function () {\n      this.filter()\n    }, 500),\n    filter () {\n      this.$refs[this.dataViewName].$emit('reload')\n    },\n    // change changeTypeSetting\n    changeTypeSetting (value) {\n      this.defaultValue = value\n      this.setting.type = value\n      setTimeout(() => {\n        if (value === 2) {\n          this.widthDiglogDefault = '1000px'\n        } else {\n          this.widthDiglogDefault = '600px'\n        }\n      }, 500)\n    },\n    // set upload images editor\n    handleImageAdded: async function (file, success, failure) {\n      let formData = new FormData()\n      formData.append('file', file.blob())\n      // try {\n      //   let response = await axios.post('/branches/upload', formData)\n      //   if (response.data.code === 1) {\n      //     success(response.data.data.path)\n      //   } else {\n      //     return false\n      //   }\n      // } catch (err) {\n      //   if (err.status === 422) {\n      //     this.$store.dispatch('showNotify', {\n      //       text: this.$t('alert.error'),\n      //       color: 'error'\n      //     })\n      //   }\n      // }\n    },\n\n    removeConfirm (item) {\n      this.valueSetting = item\n      this.idSetting = item.id\n      this.dialogDelete = true\n    },\n    remove (confirm) {\n      if (confirm) {\n        this.deleteSetting({\n          id: this.idSetting,\n          cb: (response) => {\n            this.$store.dispatch('showNotify', {\n              text: this.$t('alert.deleteSettingSuccess'),\n              color: 'success'\n            })\n            this.removeDataviewEntry({\n              name: 'setting',\n              data: this.valueSetting,\n              key: 'id'\n            })\n            this.dialogDelete = false\n          },\n          error: (error) => {\n            if (error.status === 404) {\n              this.$store.dispatch('showNotify', {\n                text: this.$t('alert.not-found'),\n                color: 'warning'\n              })\n            }\n          }\n        })\n      }\n    },\n    // validator\n    submitForm () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n          if (this.editedIndex === -1) {\n            this.createSetting({\n              setting: this.setting,\n              cb: (response) => {\n                this.clearFilter()\n                this.dialog = false\n                setTimeout(() => {\n                  this.setting = Object.assign({}, this.defaultItem)\n                  this.editedIndex = -1\n                }, 300)\n                this.$refs[this.dataViewName].$emit('reload')\n                this.showNotify({\n                  color: 'success',\n                  text: this.$t('alert.addSettingSuccess')\n                })\n              }\n            })\n            this.dialog = false\n          } else {\n            this.updateSetting({\n              id: this.idSetting,\n              setting: this.setting,\n              cb: (response) => {\n                this.showNotify({\n                  color: 'success',\n                  text: this.$t('alert.updateSettingSuccess')\n                })\n                this.updateDataviewEntry({\n                  name: 'setting',\n                  data: response.data,\n                  key: 'id'\n                })\n                this.dialog = false\n                setTimeout(() => {\n                  this.setting = Object.assign({}, this.defaultItem)\n                  this.editedIndex = -1\n                }, 300)\n              }\n            })\n            this.dialog = false\n          }\n        }\n      })\n    },\n    // set value editor\n    setEditorContent (e, content) {\n      e.setContent(content || '')\n    },\n    // edit setting\n    editSetting (item, id) {\n      this.defaultValue = item.type\n      this.$validator.reset()\n      this.idSetting = id\n      this.editedIndex = 1\n      this.setting = Object.assign({}, item)\n      this.dialog = true\n    },\n    // change status\n    changeStatus (idSetting) {\n      this.updateStatusSetting({\n        id: idSetting,\n        cb: (response) => {\n          this.$store.dispatch('showNotify', {\n            text: this.$t('alert.statusSuccess'),\n            color: 'success'\n          })\n          this.updateDataviewEntry({\n            name: 'setting',\n            data: response,\n            key: 'id'\n          })\n        },\n        error: (error) => {\n          if (error.status === 404) {\n            this.$store.dispatch('showNotify', {\n              text: this.$t('alert.not-found'),\n              color: 'warning'\n            })\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n  span.status{\n    position: absolute;\n    bottom: 118px;\n    left:70px;\n  }\n  #d1 {\n    height:600px !important;\n  }\n  .title-department{\n   color: #67757c;\n   -webkit-transform: translateY(-25px) translateX(-12px);\n   transform: translateY(-25px) translateX(-12px);\n   top: 0;\n }\n .v-menu__content{\n  position: none !important;\n  left: 20% !important;\n  right: 20% !important;\n  top: 20% !important;\n}\n</style>\n"]}]}