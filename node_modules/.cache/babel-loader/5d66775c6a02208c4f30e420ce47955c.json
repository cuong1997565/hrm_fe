{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/user.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/user.js","mtime":1538386573205},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1534394480737},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":1534394476611},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":1534394478618}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations;\n\nimport { SET_USER, SET_USERS, SET_INITIAL_STATE } from '../mutation-types';\n\nvar initState = function initState() {\n  return {\n    users: {},\n    user: {}\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  users: initState().users,\n  user: initState().user\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  setUser: function setUser(_ref, payload) {\n    var commit = _ref.commit;\n    var users = payload.users;\n    commit(SET_USER, users);\n  },\n  getUsers: function getUsers(_ref2, payload) {\n    var commit = _ref2.commit,\n        dispatch = _ref2.dispatch;\n    var params = payload.params;\n    dispatch('fetchApi', {\n      url: \"users\",\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_USERS, response.data);\n      }\n    }, {\n      root: true\n    });\n  },\n  getUser: function getUser(_ref3, payload) {\n    var commit = _ref3.commit,\n        dispatch = _ref3.dispatch;\n    var userId = payload.userId,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: \"users/\".concat(userId),\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_USER, response.data);\n      }\n    }, {\n      root: true\n    });\n  },\n  fetchUser: function fetchUser(_ref4, payload) {\n    var commit = _ref4.commit,\n        dispatch = _ref4.dispatch;\n\n    var _ref5 = payload || {},\n        params = _ref5.params,\n        error = _ref5.error;\n\n    dispatch('fetchApi', {\n      url: \"users\",\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_USER, response.data);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  createUser: function createUser(_ref6, payload) {\n    var commit = _ref6.commit,\n        dispatch = _ref6.dispatch;\n    var user = payload.user,\n        cb = payload.cb,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: 'users',\n      method: 'POST',\n      data: user,\n      params: params,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  updateUser: function updateUser(_ref7, payload) {\n    var commit = _ref7.commit,\n        dispatch = _ref7.dispatch;\n    var id = payload.id,\n        user = payload.user,\n        cb = payload.cb,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: \"users/\".concat(id),\n      method: 'PUT',\n      data: user,\n      params: params,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  deleteUser: function deleteUser(_ref8, payload) {\n    var commit = _ref8.commit,\n        dispatch = _ref8.dispatch;\n\n    var _ref9 = payload || {},\n        id = _ref9.id,\n        cb = _ref9.cb,\n        error = _ref9.error;\n\n    dispatch('fetchApi', {\n      url: \"users/\".concat(id),\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  }\n};\n/**\n * mutations\n */\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_USERS, function (state, users) {\n  state.users = users;\n}), _defineProperty(_mutations, SET_USER, function (state, user) {\n  state.user = user;\n}), _defineProperty(_mutations, SET_INITIAL_STATE, function (state) {\n  state.users = initState().users;\n}), _mutations);\n/**\n * getters\n */\n\nvar getters = {\n  userDetail: function userDetail(state) {\n    return state.user;\n  },\n  userAll: function userAll(state) {\n    return state.users;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["src/store/modules/user.js"],"names":["SET_USER","SET_USERS","SET_INITIAL_STATE","initState","users","user","state","actions","setUser","payload","commit","getUsers","dispatch","params","url","method","success","response","data","root","getUser","userId","fetchUser","error","createUser","cb","updateUser","id","deleteUser","mutations","getters","userDetail","userAll","namespaced"],"mappings":"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","sourceRoot":"/home/nguyenxuancuong/Sites/hrm_fe","sourcesContent":["import {\n  SET_USER,\n  SET_USERS,\n  SET_INITIAL_STATE\n} from '../mutation-types'\n\nconst initState = () => {\n  return {\n    users: {},\n    user: {}\n  }\n}\n\n/**\n * state\n */\nconst state = {\n  users: initState().users,\n  user: initState().user\n}\n\n/**\n * actions\n */\nconst actions = {\n  setUser ({ commit }, payload) {\n    let { users } = payload\n    commit(SET_USER, users)\n  },\n  getUsers ({ commit, dispatch }, payload) {\n    let { params } = payload\n    dispatch(\n      'fetchApi',\n      {\n        url: `users`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_USERS, response.data)\n        }\n      },\n      { root: true }\n    )\n  },\n  getUser ({ commit, dispatch }, payload) {\n    let { userId, params } = payload\n    dispatch(\n      'fetchApi',\n      {\n        url: `users/${userId}`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_USER, response.data)\n        }\n      },\n      { root: true }\n    )\n  },\n  fetchUser ({ commit, dispatch }, payload) {\n    let { params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `users`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_USER, response.data)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  createUser ({ commit, dispatch }, payload) {\n    let { user, cb, params } = payload\n    dispatch('fetchApi', {\n      url: 'users',\n      method: 'POST',\n      data: user,\n      params: params,\n      success: cb\n    }, { root: true })\n  },\n  updateUser ({ commit, dispatch }, payload) {\n    let { id, user, cb, params } = payload\n    dispatch('fetchApi', {\n      url: `users/${id}`,\n      method: 'PUT',\n      data: user,\n      params: params,\n      success: cb\n    }, { root: true })\n  },\n  deleteUser ({ commit, dispatch }, payload) {\n    let { id, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `users/${id}`,\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, { root: true })\n  }\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_USERS]: (state, users) => {\n    state.users = users\n  },\n  [SET_USER]: (state, user) => {\n    state.user = user\n  },\n  [SET_INITIAL_STATE]: (state) => {\n    state.users = initState().users\n  }\n}\n\n/**\n * getters\n */\nconst getters = {\n  userDetail: (state) => state.user,\n  userAll: (state) => state.users\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}