{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/account/ChangePassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/account/ChangePassword.vue","mtime":1538377839386},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'ChangePassword',\n  data: function data() {\n    return {\n      account: {\n        old_password: '',\n        password: '',\n        password_confirmation: ''\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['isFetchingApi'])),\n  methods: _objectSpread({}, mapActions(['clearLogged', 'showNotify']), mapActions('Account', ['changePassword']), {\n    validateBeforeSubmit: function validateBeforeSubmit() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          _this.changePassword({\n            data: _this.account,\n            cb: function cb(response) {\n              _this.showNotify({\n                color: 'success',\n                text: response.data.message\n              });\n\n              _this.clearLogged();\n\n              _this.$router.push({\n                name: 'login'\n              });\n            }\n          });\n        } else {\n          _this.$store.dispatch('showNotify', {\n            text: _this.$t('alert.invalid'),\n            color: 'warning'\n          });\n        }\n      });\n    }\n  })\n};",{"version":3,"sources":["ChangePassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,eAAA;AAEA,QAAA,gBAFA;AAIA,MAJA,kBAIA;AACA,WAAA;AACA,eAAA;AACA,sBAAA,EADA;AAEA,kBAAA,EAFA;AAGA,+BAAA;AAHA;AADA,KAAA;AAOA,GAZA;AAaA,8BACA,WAAA,CAAA,eAAA,CAAA,CADA,CAbA;AAgBA,6BACA,WAAA,CAAA,aAAA,EAAA,YAAA,CAAA,CADA,EAEA,WAAA,SAAA,EAAA,CAAA,gBAAA,CAAA,CAFA;AAGA,wBAHA,kCAGA;AAAA;;AACA,WAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,kBAAA;AACA,YAAA,MAAA,EAAA;AACA,gBAAA,cAAA,CAAA;AACA,kBAAA,MAAA,OADA;AAEA,gBAAA,YAAA,QAAA,EAAA;AACA,oBAAA,UAAA,CAAA;AACA,uBAAA,SADA;AAEA,sBAAA,SAAA,IAAA,CAAA;AAFA,eAAA;;AAIA,oBAAA,WAAA;;AACA,oBAAA,OAAA,CAAA,IAAA,CAAA;AAAA,sBAAA;AAAA,eAAA;AACA;AATA,WAAA;AAWA,SAZA,MAYA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AACA,kBAAA,MAAA,EAAA,CAAA,eAAA,CADA;AAEA,mBAAA;AAFA,WAAA;AAIA;AACA,OAnBA;AAoBA;AAxBA;AAhBA,CAAA","sourcesContent":["<template>\n  <v-card flat>\n    <v-form @submit.prevent=\"validateBeforeSubmit\">\n      <v-container>\n        <v-layout row wrap justify-content-center>\n          <v-flex xs12 sm6>\n            <v-text-field\n              type=\"password\"\n              :error-messages=\"errors.has('old_password') ? errors.collect('old_password') : []\"\n              v-validate=\"'required|min:5|max:255'\"\n              :data-vv-as=\"$t('label.old_password')\"\n              name=\"old_password\"\n              autocomplete=\"off\"\n              :label=\"$t('label.old_password') + ' *'\"\n              v-model=\"account.old_password\">\n            </v-text-field>\n            <v-text-field\n              type=\"password\"\n              :error-messages=\"errors.has('password') ? errors.collect('password') : []\"\n              v-validate=\"'required|min:5|max:255'\"\n              :data-vv-as=\"$t('label.new_password')\"\n              name=\"password\"\n              autocomplete=\"off\"\n              :label=\"$t('label.new_password') + ' *'\"\n              v-model=\"account.password\">\n            </v-text-field>\n            <v-text-field\n              type=\"password\"\n              :error-messages=\"errors.has('password_confirmation') ? errors.collect('password_confirmation') : []\"\n              v-validate=\"'required|min:5|max:255|confirmed:password'\"\n              :data-vv-as=\"$t('label.new_password_confirmation')\"\n              name=\"password_confirmation\"\n              autocomplete=\"off\"\n              :label=\"$t('label.new_password_confirmation') + ' *'\"\n              v-model=\"account.password_confirmation\">\n            </v-text-field>\n          </v-flex>\n          <v-flex xs12 text-xs-center>\n            <v-btn\n              :loading=\"isFetchingApi\"\n              :disabled=\"isFetchingApi\"\n              color=\"primary\"\n              type=\"submit\"\n              >\n                <v-icon left>lock</v-icon> {{$t('control.change-password')}}\n            </v-btn>\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-form>\n  </v-card>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nexport default {\n\n  name: 'ChangePassword',\n\n  data () {\n    return {\n      account: {\n        old_password: '',\n        password: '',\n        password_confirmation: ''\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['isFetchingApi'])\n  },\n  methods: {\n    ...mapActions(['clearLogged', 'showNotify']),\n    ...mapActions('Account', ['changePassword']),\n    validateBeforeSubmit () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n          this.changePassword({\n            data: this.account,\n            cb: (response) => {\n              this.showNotify({\n                color: 'success',\n                text: response.data.message\n              })\n              this.clearLogged()\n              this.$router.push({ name: 'login' })\n            }\n          })\n        } else {\n          this.$store.dispatch('showNotify', {\n            text: this.$t('alert.invalid'),\n            color: 'warning'\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n</style>\n"],"sourceRoot":"src/views/account"}]}