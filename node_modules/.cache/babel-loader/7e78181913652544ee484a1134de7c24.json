{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/user.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/user.js","mtime":1543026746036},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations;\n\nimport { SET_USER, SET_USERS, SET_INITIAL_STATE } from '../mutation-types';\nimport { getField, updateField } from 'vuex-map-fields';\n\nvar initState = function initState() {\n  return {\n    users: {},\n    user: {},\n    params: {\n      q: '',\n      status: '',\n      include: 'roles'\n    }\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  users: initState().users,\n  user: initState().user,\n  params: initState().params\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  setUser: function setUser(_ref, payload) {\n    var commit = _ref.commit;\n    var users = payload.users;\n    commit(SET_USERS, users);\n  },\n  getUsers: function getUsers(_ref2, payload) {\n    var commit = _ref2.commit,\n        dispatch = _ref2.dispatch;\n    var params = payload.params;\n    dispatch('fetchApi', {\n      url: \"users\",\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_USERS, response.data);\n      }\n    }, {\n      root: true\n    });\n  },\n  getUser: function getUser(_ref3, payload) {\n    var commit = _ref3.commit,\n        dispatch = _ref3.dispatch;\n    var userId = payload.userId,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: \"users/\".concat(userId),\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_USER, response.data);\n      }\n    }, {\n      root: true\n    });\n  },\n  fetchUser: function fetchUser(_ref4, payload) {\n    var commit = _ref4.commit,\n        dispatch = _ref4.dispatch;\n\n    var _ref5 = payload || {},\n        params = _ref5.params,\n        error = _ref5.error;\n\n    dispatch('fetchApi', {\n      url: \"users\",\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_USER, response.data);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  createUser: function createUser(_ref6, payload) {\n    var commit = _ref6.commit,\n        dispatch = _ref6.dispatch;\n    var user = payload.user,\n        cb = payload.cb,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: 'users',\n      method: 'POST',\n      data: user,\n      params: params,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  updateStatusUser: function updateStatusUser(_ref7, payload) {\n    var commit = _ref7.commit,\n        dispatch = _ref7.dispatch;\n    var id = payload.id,\n        user = payload.user,\n        cb = payload.cb;\n    dispatch('fetchApi', {\n      url: \"users/change-status/\".concat(id),\n      method: 'PUT',\n      data: user,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  updateUser: function updateUser(_ref8, payload) {\n    var commit = _ref8.commit,\n        dispatch = _ref8.dispatch;\n\n    var _ref9 = payload || {},\n        id = _ref9.id,\n        user = _ref9.user,\n        cb = _ref9.cb,\n        params = _ref9.params;\n\n    dispatch('fetchApi', {\n      url: \"users/\".concat(id),\n      method: 'PUT',\n      data: user,\n      params: params,\n      success: function success(response) {\n        cb && cb(response.data);\n      }\n    }, {\n      root: true\n    });\n  },\n  deleteUser: function deleteUser(_ref10, payload) {\n    var commit = _ref10.commit,\n        dispatch = _ref10.dispatch;\n\n    var _ref11 = payload || {},\n        id = _ref11.id,\n        cb = _ref11.cb,\n        error = _ref11.error;\n\n    dispatch('fetchApi', {\n      url: \"users/\".concat(id),\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  },\n  clearFilter: function clearFilter(_ref12) {\n    var commit = _ref12.commit;\n    commit('resetFilter');\n  }\n};\n/**\n * mutations\n */\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_USERS, function (state, users) {\n  state.users = users;\n}), _defineProperty(_mutations, SET_USER, function (state, user) {\n  state.user = user;\n}), _defineProperty(_mutations, SET_INITIAL_STATE, function (state) {\n  state.users = initState().users;\n  state.user = initState().user;\n  state.params = initState().params;\n}), _defineProperty(_mutations, \"updateField\", updateField), _defineProperty(_mutations, \"resetFilter\", function resetFilter(state) {\n  state.params.q = '';\n  state.params.status = '';\n}), _mutations);\n/**\n * getters\n */\n\nvar getters = {\n  userDetail: function userDetail(state) {\n    return state.user;\n  },\n  userAll: function userAll(state) {\n    return state.users;\n  },\n  filterParams: function filterParams(state) {\n    return state.params;\n  },\n  getField: getField\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/user.js"],"names":["SET_USER","SET_USERS","SET_INITIAL_STATE","getField","updateField","initState","users","user","params","q","status","include","state","actions","setUser","payload","commit","getUsers","dispatch","url","method","success","response","data","root","getUser","userId","fetchUser","error","createUser","cb","updateStatusUser","id","updateUser","deleteUser","clearFilter","mutations","getters","userDetail","userAll","filterParams","namespaced"],"mappings":"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","sourcesContent":["import {\n  SET_USER,\n  SET_USERS,\n  SET_INITIAL_STATE\n} from '../mutation-types'\nimport { getField, updateField } from 'vuex-map-fields'\nconst initState = () => {\n  return {\n    users: {},\n    user: {},\n    params: {\n      q: '',\n      status: '',\n      include: 'roles'\n    }\n  }\n}\n\n/**\n * state\n */\nconst state = {\n  users: initState().users,\n  user: initState().user,\n  params: initState().params\n}\n\n/**\n * actions\n */\nconst actions = {\n  setUser ({ commit }, payload) {\n    let { users } = payload\n    commit(SET_USERS, users)\n  },\n  getUsers ({ commit, dispatch }, payload) {\n    let { params } = payload\n    dispatch(\n      'fetchApi',\n      {\n        url: `users`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_USERS, response.data)\n        }\n      },\n      { root: true }\n    )\n  },\n  getUser ({ commit, dispatch }, payload) {\n    let { userId, params } = payload\n    dispatch(\n      'fetchApi',\n      {\n        url: `users/${userId}`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_USER, response.data)\n        }\n      },\n      { root: true }\n    )\n  },\n  fetchUser ({ commit, dispatch }, payload) {\n    let { params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `users`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_USER, response.data)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  createUser ({ commit, dispatch }, payload) {\n    let { user, cb, params } = payload\n    dispatch('fetchApi', {\n      url: 'users',\n      method: 'POST',\n      data: user,\n      params: params,\n      success: cb\n    }, { root: true })\n  },\n  updateStatusUser ({ commit, dispatch }, payload) {\n    let { id, user, cb } = payload\n    dispatch('fetchApi', {\n      url: `users/change-status/${id}`,\n      method: 'PUT',\n      data: user,\n      success: cb\n    }, { root: true })\n  },\n  updateUser ({ commit, dispatch }, payload) {\n    let { id, user, cb, params } = payload || {}\n    dispatch('fetchApi', {\n      url: `users/${id}`,\n      method: 'PUT',\n      data: user,\n      params: params,\n      success: response => {\n        cb && cb(response.data)\n      }\n    }, { root: true })\n  },\n  deleteUser ({ commit, dispatch }, payload) {\n    let { id, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `users/${id}`,\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, { root: true })\n  },\n  clearFilter ({ commit }) {\n    commit('resetFilter')\n  }\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_USERS]: (state, users) => {\n    state.users = users\n  },\n  [SET_USER]: (state, user) => {\n    state.user = user\n  },\n  [SET_INITIAL_STATE]: (state) => {\n    state.users = initState().users\n    state.user = initState().user\n    state.params = initState().params\n  },\n  updateField,\n  resetFilter (state) {\n    state.params.q = ''\n    state.params.status = ''\n  }\n}\n\n/**\n * getters\n */\nconst getters = {\n  userDetail: (state) => state.user,\n  userAll: (state) => state.users,\n  filterParams: (state) => state.params,\n  getField\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}