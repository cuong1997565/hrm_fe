{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/interview/Listting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/interview/Listting.vue","mtime":1541128830776},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Calendar, Weekday, Month } from 'dayspan';\nimport Vue from 'vue';\nexport default {\n  name: 'app',\n  data: function data() {\n    return {\n      storeKey: 'dayspanState',\n      calendar: Calendar.months(),\n      readOnly: false,\n      defaultEvents: [{\n        data: {\n          title: 'Weekly Meeting',\n          color: '#3F51B5'\n        },\n        schedule: {\n          dayOfWeek: [Weekday.MONDAY],\n          times: [9],\n          duration: 30,\n          durationUnit: 'minutes'\n        }\n      }, {\n        data: {\n          title: 'First Weekend',\n          color: '#4CAF50'\n        },\n        schedule: {\n          weekspanOfMonth: [0],\n          dayOfWeek: [Weekday.FRIDAY],\n          duration: 3,\n          durationUnit: 'days'\n        }\n      }, {\n        data: {\n          title: 'End of Month',\n          color: '#000000'\n        },\n        schedule: {\n          lastDayOfMonth: [1],\n          duration: 1,\n          durationUnit: 'hours'\n        }\n      }, {\n        data: {\n          title: 'Mother\\'s Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.MAY],\n          dayOfWeek: [Weekday.SUNDAY],\n          weekspanOfMonth: [1]\n        }\n      }, {\n        data: {\n          title: 'New Year\\'s Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.JANUARY],\n          dayOfMonth: [1]\n        }\n      }, {\n        data: {\n          title: 'Inauguration Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.JANUARY],\n          dayOfMonth: [20]\n        }\n      }, {\n        data: {\n          title: 'Martin Luther King, Jr. Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.JANUARY],\n          dayOfWeek: [Weekday.MONDAY],\n          weekspanOfMonth: [2]\n        }\n      }, {\n        data: {\n          title: 'George Washington\\'s Birthday',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.FEBRUARY],\n          dayOfWeek: [Weekday.MONDAY],\n          weekspanOfMonth: [2]\n        }\n      }, {\n        data: {\n          title: 'Memorial Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.MAY],\n          dayOfWeek: [Weekday.MONDAY],\n          lastWeekspanOfMonth: [0]\n        }\n      }, {\n        data: {\n          title: 'Independence Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.JULY],\n          dayOfMonth: [4]\n        }\n      }, {\n        data: {\n          title: 'Labor Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.SEPTEMBER],\n          dayOfWeek: [Weekday.MONDAY],\n          lastWeekspanOfMonth: [0]\n        }\n      }, {\n        data: {\n          title: 'Columbus Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.OCTOBER],\n          dayOfWeek: [Weekday.MONDAY],\n          weekspanOfMonth: [1]\n        }\n      }, {\n        data: {\n          title: 'Veterans Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.NOVEMBER],\n          dayOfMonth: [11]\n        }\n      }, {\n        data: {\n          title: 'Thanksgiving Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.NOVEMBER],\n          dayOfWeek: [Weekday.THURSDAY],\n          weekspanOfMonth: [3]\n        }\n      }, {\n        data: {\n          title: 'Christmas Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.DECEMBER],\n          dayOfMonth: [25]\n        }\n      }]\n    };\n  },\n  mounted: function mounted() {\n    window.app = this.$refs.app;\n    this.loadState();\n  },\n  methods: {\n    getCalendarTime: function getCalendarTime(calendarEvent) {\n      var sa = calendarEvent.start.format('a');\n      var ea = calendarEvent.end.format('a');\n      var sh = calendarEvent.start.format('h');\n      var eh = calendarEvent.end.format('h');\n\n      if (calendarEvent.start.minute !== 0) {\n        sh += calendarEvent.start.format(':mm');\n      }\n\n      if (calendarEvent.end.minute !== 0) {\n        eh += calendarEvent.end.format(':mm');\n      }\n\n      return sa === ea ? sh + ' - ' + eh + ea : sh + sa + ' - ' + eh + ea;\n    },\n    saveState: function saveState() {\n      var state = this.calendar.toInput(true);\n      var json = JSON.stringify(state);\n      localStorage.setItem(this.storeKey, json);\n    },\n    loadState: function loadState() {\n      var _this = this;\n\n      var state = {};\n\n      try {\n        var savedState = JSON.parse(localStorage.getItem(this.storeKey));\n\n        if (savedState) {\n          state = savedState;\n          state.preferToday = false;\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(e);\n      }\n\n      if (!state.events || !state.events.length) {\n        state.events = this.defaultEvents;\n      }\n\n      state.events.forEach(function (ev) {\n        var defaults = _this.$dayspan.getDefaultEventDetails();\n\n        ev.data = Vue.util.extend(defaults, ev.data);\n      });\n      this.$refs.app.setState(state);\n    }\n  }\n};",{"version":3,"sources":["Listting.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app id=\"dayspan\" v-cloak>\n\n    <ds-calendar-app ref=\"app\"\n      :calendar=\"calendar\"\n      :read-only=\"readOnly\"\n      @change=\"saveState\">\n\n      <template slot=\"title\">\n        DaySpan\n      </template>\n\n      <template slot=\"menuRight\">\n        <v-btn icon large href=\"https://github.com/ClickerMonkey/dayspan-vuetify\" target=\"_blank\">\n          <v-avatar size=\"32px\" tile>\n            <img src=\"https://simpleicons.org/icons/github.svg\" alt=\"Github\">\n          </v-avatar>\n        </v-btn>\n      </template>\n\n      <template slot=\"eventPopover\" slot-scope=\"slotData\">\n         <ds-calendar-event-popover\n          v-bind=\"slotData\"\n          :read-only=\"readOnly\"\n          @finish=\"saveState\"\n        ></ds-calendar-event-popover>\n      </template>\n\n      <template slot=\"eventCreatePopover\" slot-scope=\"{placeholder, calendar, close}\">\n        <ds-calendar-event-create-popover\n          :calendar-event=\"placeholder\"\n          :calendar=\"calendar\"\n          :close=\"$refs.app.$refs.calendar.clearPlaceholder\"\n          @create-edit=\"$refs.app.editPlaceholder\"\n          @create-popover-closed=\"saveState\"\n        ></ds-calendar-event-create-popover>\n      </template>\n\n      <template slot=\"eventTimeTitle\" slot-scope=\"{calendarEvent, details}\">\n        <div>\n          <v-icon class=\"ds-ev-icon\"\n            v-if=\"details.icon\"\n            size=\"14\"\n            :style=\"{color: details.forecolor}\">\n            {{ details.icon }}\n          </v-icon>\n          <strong class=\"ds-ev-title\">{{ details.title }}</strong>\n        </div>\n        <div class=\"ds-ev-description\">{{ getCalendarTime( calendarEvent ) }}</div>\n      </template>\n\n      <template slot=\"drawerBottom\">\n        <div class=\"pa-3\">\n          <v-checkbox\n            label=\"Read Only?\"\n            v-model=\"readOnly\"\n          ></v-checkbox>\n        </div>\n      </template>\n\n    </ds-calendar-app>\n\n  </v-app>\n</template>\n\n<script>\nimport { Calendar, Weekday, Month } from 'dayspan'\nimport Vue from 'vue'\n\nexport default {\n\n  name: 'app',\n\n  data: () => ({\n    storeKey: 'dayspanState',\n    calendar: Calendar.months(),\n    readOnly: false,\n    defaultEvents: [\n      {\n        data: {\n          title: 'Weekly Meeting',\n          color: '#3F51B5'\n        },\n        schedule: {\n          dayOfWeek: [Weekday.MONDAY],\n          times: [9],\n          duration: 30,\n          durationUnit: 'minutes'\n        }\n      },\n      {\n        data: {\n          title: 'First Weekend',\n          color: '#4CAF50'\n        },\n        schedule: {\n          weekspanOfMonth: [0],\n          dayOfWeek: [Weekday.FRIDAY],\n          duration: 3,\n          durationUnit: 'days'\n        }\n      },\n      {\n        data: {\n          title: 'End of Month',\n          color: '#000000'\n        },\n        schedule: {\n          lastDayOfMonth: [1],\n          duration: 1,\n          durationUnit: 'hours'\n        }\n      },\n      {\n        data: {\n          title: 'Mother\\'s Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.MAY],\n          dayOfWeek: [Weekday.SUNDAY],\n          weekspanOfMonth: [1]\n        }\n      },\n      {\n        data: {\n          title: 'New Year\\'s Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.JANUARY],\n          dayOfMonth: [1]\n        }\n      },\n      {\n        data: {\n          title: 'Inauguration Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.JANUARY],\n          dayOfMonth: [20]\n        }\n      },\n      {\n        data: {\n          title: 'Martin Luther King, Jr. Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.JANUARY],\n          dayOfWeek: [Weekday.MONDAY],\n          weekspanOfMonth: [2]\n        }\n      },\n      {\n        data: {\n          title: 'George Washington\\'s Birthday',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.FEBRUARY],\n          dayOfWeek: [Weekday.MONDAY],\n          weekspanOfMonth: [2]\n        }\n      },\n      {\n        data: {\n          title: 'Memorial Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.MAY],\n          dayOfWeek: [Weekday.MONDAY],\n          lastWeekspanOfMonth: [0]\n        }\n      },\n      {\n        data: {\n          title: 'Independence Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.JULY],\n          dayOfMonth: [4]\n        }\n      },\n      {\n        data: {\n          title: 'Labor Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.SEPTEMBER],\n          dayOfWeek: [Weekday.MONDAY],\n          lastWeekspanOfMonth: [0]\n        }\n      },\n      {\n        data: {\n          title: 'Columbus Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.OCTOBER],\n          dayOfWeek: [Weekday.MONDAY],\n          weekspanOfMonth: [1]\n        }\n      },\n      {\n        data: {\n          title: 'Veterans Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.NOVEMBER],\n          dayOfMonth: [11]\n        }\n      },\n      {\n        data: {\n          title: 'Thanksgiving Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.NOVEMBER],\n          dayOfWeek: [Weekday.THURSDAY],\n          weekspanOfMonth: [3]\n        }\n      },\n      {\n        data: {\n          title: 'Christmas Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.DECEMBER],\n          dayOfMonth: [25]\n        }\n      }\n    ]\n  }),\n\n  mounted () {\n    window.app = this.$refs.app\n\n    this.loadState()\n  },\n\n  methods:\n  {\n    getCalendarTime (calendarEvent) {\n      let sa = calendarEvent.start.format('a')\n      let ea = calendarEvent.end.format('a')\n      let sh = calendarEvent.start.format('h')\n      let eh = calendarEvent.end.format('h')\n\n      if (calendarEvent.start.minute !== 0) {\n        sh += calendarEvent.start.format(':mm')\n      }\n\n      if (calendarEvent.end.minute !== 0) {\n        eh += calendarEvent.end.format(':mm')\n      }\n\n      return (sa === ea) ? (sh + ' - ' + eh + ea) : (sh + sa + ' - ' + eh + ea)\n    },\n\n    saveState () {\n      let state = this.calendar.toInput(true)\n      let json = JSON.stringify(state)\n\n      localStorage.setItem(this.storeKey, json)\n    },\n\n    loadState () {\n      let state = {}\n\n      try {\n        let savedState = JSON.parse(localStorage.getItem(this.storeKey))\n\n        if (savedState) {\n          state = savedState\n          state.preferToday = false\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log( e );\n      }\n\n      if (!state.events || !state.events.length) {\n        state.events = this.defaultEvents\n      }\n\n      state.events.forEach(ev => {\n        let defaults = this.$dayspan.getDefaultEventDetails()\n\n        ev.data = Vue.util.extend(defaults, ev.data)\n      })\n\n      this.$refs.app.setState(state)\n    }\n  }\n}\n</script>\n\n<style>\n\nbody, html, #app, #dayspan {\n  font-family: Roboto, sans-serif !important;\n  width: 100%;\n  height: 100%;\n}\n\n.v-btn--flat,\n.v-text-field--solo .v-input__slot {\n  background-color: #f5f5f5 !important;\n  margin-bottom: 8px !important;\n}\n.v-content .ds-expand{\n  padding: 0px !important;\n}\n.v-input.v-text-field .v-label{\n  -webkit-transform: none !important;\n  transform: none !important;\n}\n.v-textarea.v-text-field--box.v-text-field--single-line .v-label, .v-textarea.v-text-field--enclosed.v-text-field--single-line .v-label{\n    top: 5px;\n}\n\n</style>\n"],"sourceRoot":"src/views/interview"}]}