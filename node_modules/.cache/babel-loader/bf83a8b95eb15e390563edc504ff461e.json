{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/quasar-calendar/src/components/calendar/CalendarEventDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/quasar-calendar/src/components/calendar/CalendarEventDetail.vue","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport dashHas from 'lodash.has';\nimport { QList, QItem, QItemSide, QItemTile, QItemMain, QModal, QBtn, QIcon, QField, QCheckbox, QDatetime, QInput } from 'quasar';\nimport CalendarMixin from './mixins/CalendarMixin';\n\nvar _require = require('luxon'),\n    DateTime = _require.DateTime;\n\nexport default {\n  name: 'CalendarEventDetail',\n  props: {\n    eventObject: {\n      type: Object,\n      default: function _default() {}\n    },\n    eventRef: {\n      type: String,\n      default: 'cal-' + Math.random().toString(36).substring(2, 15)\n    },\n    calendarLocale: {\n      type: String,\n      default: function _default() {\n        return DateTime.local().locale;\n      }\n    },\n    calendarTimezone: {\n      type: String,\n      default: function _default() {\n        return DateTime.local().zoneName;\n      }\n    },\n    allowEditing: {\n      type: Boolean,\n      default: false\n    },\n    fieldColor: {\n      type: String,\n      default: 'grey-2'\n    }\n  },\n  components: {\n    QList: QList,\n    QItem: QItem,\n    QItemSide: QItemSide,\n    QItemTile: QItemTile,\n    QItemMain: QItemMain,\n    QModal: QModal,\n    QBtn: QBtn,\n    QIcon: QIcon,\n    QField: QField,\n    QCheckbox: QCheckbox,\n    QDatetime: QDatetime,\n    QInput: QInput\n  },\n  mixins: [CalendarMixin],\n  data: function data() {\n    return {\n      modalIsOpen: false,\n      inEditMode: false,\n      editEventObject: {},\n      startDateObject: new Date(),\n      startTimeObject: new Date(),\n      endDateObject: new Date(),\n      endTimeObject: new Date()\n    };\n  },\n  computed: {\n    countAttendees: function countAttendees() {\n      if (!dashHas(this.eventObject, 'attendees')) {\n        return 0;\n      }\n\n      var count = this.eventObject.attendees.length;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.eventObject.attendees[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var thisAttendee = _step.value;\n\n          if (thisAttendee.resource) {\n            count--;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return count;\n    },\n    countResources: function countResources() {\n      if (!dashHas(this.eventObject, 'attendees')) {\n        return 0;\n      }\n\n      var count = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.eventObject.attendees[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var thisAttendee = _step2.value;\n\n          if (thisAttendee.resource) {\n            count++;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return count;\n    },\n    getTopColorClasses: function getTopColorClasses() {\n      return this.addCssColorClasses({\n        'ced-top': true,\n        'q-pr-md': true,\n        'q-py-md': true,\n        'relative-position': true\n      }, this.eventObject);\n    },\n    getEventStyle: function getEventStyle() {\n      return {// 'background-color': this.backgroundColor,\n        // 'color': this.textColor\n      };\n    },\n    getEventClass: function getEventClass() {\n      return this.addCssColorClasses({\n        'calendar-event': true,\n        'calendar-event-month': this.monthStyle\n      }, this.eventObject);\n    },\n    isEditingAllowed: function isEditingAllowed() {\n      if (dashHas(this.eventObject, 'allowEditing')) {\n        return this.eventObject.allowEditing;\n      }\n\n      return this.allowEditing;\n    }\n  },\n  methods: {\n    textExists: function textExists(fieldLocation) {\n      return dashHas(this.eventObject, fieldLocation) && this.eventObject[fieldLocation].length > 0;\n    },\n    __open: function __open() {\n      this.modalIsOpen = true;\n    },\n    __close: function __close() {\n      this.modalIsOpen = false;\n      this.inEditMode = false;\n    },\n    startEditMode: function startEditMode() {\n      this.editEventObject = this.eventObject; // fixes for any values that will cause errors\n\n      if (!dashHas(this.editEventObject, 'start.isAllDay')) {\n        this.editEventObject.start.isAllDay = false;\n      }\n\n      var dateObj = {};\n\n      if (typeof this.editEventObject.start.dateObject.toJSDate === 'function') {\n        dateObj = this.editEventObject.start.dateObject.toJSDate();\n      } else {\n        dateObj = this.editEventObject.start.dateObject;\n      }\n\n      this.startDateObject = dateObj;\n      this.startTimeObject = dateObj;\n\n      if (dashHas(this.editEventObject, 'end.dateObject')) {\n        if (typeof this.editEventObject.end.dateObject.toJSDate === 'function') {\n          dateObj = this.editEventObject.end.dateObject.toJSDate();\n        } else {\n          dateObj = this.editEventObject.end.dateObject;\n        }\n\n        this.endDateObject = dateObj;\n        this.endTimeObject = dateObj;\n      }\n\n      this.inEditMode = true;\n    },\n    __save: function __save() {\n      // convert elements back to parsed format\n      var stepList = ['start', 'end'];\n\n      for (var _i = 0; _i < stepList.length; _i++) {\n        var step = stepList[_i];\n        var dateObj = DateTime.fromJSDate(this[step + 'DateObject']);\n        var timeObj = this[step + 'TimeObject'];\n        dateObj = dateObj.set({\n          hour: timeObj.getHours(),\n          minute: timeObj.getMinutes(),\n          second: timeObj.getSeconds()\n        });\n        this.editEventObject[step] = {\n          dateObject: dateObj,\n          dateTime: dateObj.toISO()\n        };\n      } // done modifying\n\n\n      this.eventObject = this.editEventObject;\n      this.$root.$emit('update-event-' + this.eventRef, this.eventObject);\n\n      this.__close();\n    }\n  },\n  mounted: function mounted() {}\n};",{"version":3,"sources":["CalendarEventDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkUA,OAAA,OAAA,MAAA,YAAA;AACA,SACA,KADA,EAEA,KAFA,EAGA,SAHA,EAIA,SAJA,EAKA,SALA,EAMA,MANA,EAOA,IAPA,EAQA,KARA,EASA,MATA,EAUA,SAVA,EAWA,SAXA,EAYA,MAZA,QAaA,QAbA;AAcA,OAAA,aAAA,MAAA,wBAAA;;eACA,QAAA,OAAA,C;IAAA,Q,YAAA,Q;;AACA,eAAA;AACA,QAAA,qBADA;AAEA,SAAA;AACA,iBAAA;AACA,YAAA,MADA;AAEA,eAAA,oBAAA,CAAA;AAFA,KADA;AAKA,cAAA;AACA,YAAA,MADA;AAEA,eAAA,SAAA,KAAA,MAAA,GAAA,QAAA,CAAA,EAAA,EAAA,SAAA,CAAA,CAAA,EAAA,EAAA;AAFA,KALA;AASA,oBAAA;AACA,YAAA,MADA;AAEA,eAAA,oBAAA;AAAA,eAAA,SAAA,KAAA,GAAA,MAAA;AAAA;AAFA,KATA;AAaA,sBAAA;AACA,YAAA,MADA;AAEA,eAAA,oBAAA;AAAA,eAAA,SAAA,KAAA,GAAA,QAAA;AAAA;AAFA,KAbA;AAiBA,kBAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KAjBA;AAqBA,gBAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AArBA,GAFA;AA4BA,cAAA;AACA,gBADA;AAEA,gBAFA;AAGA,wBAHA;AAIA,wBAJA;AAKA,wBALA;AAMA,kBANA;AAOA,cAPA;AAQA,gBARA;AASA,kBATA;AAUA,wBAVA;AAWA,wBAXA;AAYA;AAZA,GA5BA;AA0CA,UAAA,CAAA,aAAA,CA1CA;AA2CA,MA3CA,kBA2CA;AACA,WAAA;AACA,mBAAA,KADA;AAEA,kBAAA,KAFA;AAGA,uBAAA,EAHA;AAIA,uBAAA,IAAA,IAAA,EAJA;AAKA,uBAAA,IAAA,IAAA,EALA;AAMA,qBAAA,IAAA,IAAA,EANA;AAOA,qBAAA,IAAA,IAAA;AAPA,KAAA;AASA,GArDA;AAsDA,YAAA;AACA,oBAAA,0BAAA;AACA,UAAA,CAAA,QAAA,KAAA,WAAA,EAAA,WAAA,CAAA,EAAA;AACA,eAAA,CAAA;AACA;;AACA,UAAA,QAAA,KAAA,WAAA,CAAA,SAAA,CAAA,MAAA;AAJA;AAAA;AAAA;;AAAA;AAKA,6BAAA,KAAA,WAAA,CAAA,SAAA,8HAAA;AAAA,cAAA,YAAA;;AACA,cAAA,aAAA,QAAA,EAAA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,aAAA,KAAA;AACA,KAZA;AAaA,oBAAA,0BAAA;AACA,UAAA,CAAA,QAAA,KAAA,WAAA,EAAA,WAAA,CAAA,EAAA;AACA,eAAA,CAAA;AACA;;AACA,UAAA,QAAA,CAAA;AAJA;AAAA;AAAA;;AAAA;AAKA,8BAAA,KAAA,WAAA,CAAA,SAAA,mIAAA;AAAA,cAAA,YAAA;;AACA,cAAA,aAAA,QAAA,EAAA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,aAAA,KAAA;AACA,KAxBA;AAyBA,wBAAA,8BAAA;AACA,aAAA,KAAA,kBAAA,CAAA;AACA,mBAAA,IADA;AAEA,mBAAA,IAFA;AAGA,mBAAA,IAHA;AAIA,6BAAA;AAJA,OAAA,EAMA,KAAA,WANA,CAAA;AAOA,KAjCA;AAkCA,mBAAA,yBAAA;AACA,aAAA,CACA;AACA;AAFA,OAAA;AAIA,KAvCA;AAwCA,mBAAA,yBAAA;AACA,aAAA,KAAA,kBAAA,CACA;AACA,0BAAA,IADA;AAEA,gCAAA,KAAA;AAFA,OADA,EAKA,KAAA,WALA,CAAA;AAOA,KAhDA;AAiDA,sBAAA,4BAAA;AACA,UAAA,QAAA,KAAA,WAAA,EAAA,cAAA,CAAA,EAAA;AACA,eAAA,KAAA,WAAA,CAAA,YAAA;AACA;;AACA,aAAA,KAAA,YAAA;AACA;AAtDA,GAtDA;AA+GA,WAAA;AACA,gBAAA,oBAAA,aAAA,EAAA;AACA,aACA,QAAA,KAAA,WAAA,EAAA,aAAA,KACA,KAAA,WAAA,CAAA,aAAA,EAAA,MAAA,GAAA,CAFA;AAIA,KANA;AAOA,YAAA,kBAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,KATA;AAUA,aAAA,mBAAA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,WAAA,UAAA,GAAA,KAAA;AACA,KAbA;AAcA,mBAAA,yBAAA;AACA,WAAA,eAAA,GAAA,KAAA,WAAA,CADA,CAEA;;AACA,UAAA,CAAA,QAAA,KAAA,eAAA,EAAA,gBAAA,CAAA,EAAA;AACA,aAAA,eAAA,CAAA,KAAA,CAAA,QAAA,GAAA,KAAA;AACA;;AACA,UAAA,UAAA,EAAA;;AACA,UAAA,OAAA,KAAA,eAAA,CAAA,KAAA,CAAA,UAAA,CAAA,QAAA,KAAA,UAAA,EAAA;AACA,kBAAA,KAAA,eAAA,CAAA,KAAA,CAAA,UAAA,CAAA,QAAA,EAAA;AACA,OAFA,MAGA;AACA,kBAAA,KAAA,eAAA,CAAA,KAAA,CAAA,UAAA;AACA;;AACA,WAAA,eAAA,GAAA,OAAA;AACA,WAAA,eAAA,GAAA,OAAA;;AACA,UAAA,QAAA,KAAA,eAAA,EAAA,gBAAA,CAAA,EAAA;AACA,YAAA,OAAA,KAAA,eAAA,CAAA,GAAA,CAAA,UAAA,CAAA,QAAA,KAAA,UAAA,EAAA;AACA,oBAAA,KAAA,eAAA,CAAA,GAAA,CAAA,UAAA,CAAA,QAAA,EAAA;AACA,SAFA,MAGA;AACA,oBAAA,KAAA,eAAA,CAAA,GAAA,CAAA,UAAA;AACA;;AACA,aAAA,aAAA,GAAA,OAAA;AACA,aAAA,aAAA,GAAA,OAAA;AACA;;AACA,WAAA,UAAA,GAAA,IAAA;AACA,KAxCA;AAyCA,YAAA,kBAAA;AACA;AACA,UAAA,WAAA,CAAA,OAAA,EAAA,KAAA,CAAA;;AACA,4BAAA,QAAA,eAAA;AAAA,YAAA,OAAA,QAAA,IAAA;AACA,YAAA,UAAA,SAAA,UAAA,CAAA,KAAA,OAAA,YAAA,CAAA,CAAA;AACA,YAAA,UAAA,KAAA,OAAA,YAAA,CAAA;AACA,kBAAA,QAAA,GAAA,CAAA;AACA,gBAAA,QAAA,QAAA,EADA;AAEA,kBAAA,QAAA,UAAA,EAFA;AAGA,kBAAA,QAAA,UAAA;AAHA,SAAA,CAAA;AAKA,aAAA,eAAA,CAAA,IAAA,IAAA;AACA,sBAAA,OADA;AAEA,oBAAA,QAAA,KAAA;AAFA,SAAA;AAIA,OAfA,CAgBA;;;AACA,WAAA,WAAA,GAAA,KAAA,eAAA;AACA,WAAA,KAAA,CAAA,KAAA,CACA,kBAAA,KAAA,QADA,EAEA,KAAA,WAFA;;AAIA,WAAA,OAAA;AACA;AAhEA,GA/GA;AAiLA,SAjLA,qBAiLA,CAAA;AAjLA,CAAA","sourcesContent":["<template>\n\n  <q-modal\n    v-model=\"modalIsOpen\"\n    class=\"calendar-event-detail\"\n    @hide=\"__close()\"\n    @escape-key=\"__close()\"\n  >\n    <div :class=\"getTopColorClasses\">\n      <div class=\"absolute-top-right row justify-end items-start ced-toolbar\">\n        <q-btn\n          flat\n          icon-right=\"close\"\n          @click=\"__close()\"\n        />\n      </div>\n      <div\n        v-if=\"isEditingAllowed && inEditMode\"\n        class=\"ced-top-title\"\n      >\n        <div\n          v-if=\"isEditingAllowed && inEditMode\"\n          class=\"ced-toolbar-edit-spacer\">\n        </div>\n        <q-input\n          v-model=\"editEventObject.summary\"\n          float-label=\"Summary\"\n          inverted-light\n          :color=\"fieldColor\"\n          class=\"no-shadow\"\n        />\n      </div>\n      <div\n        v-else-if=\"eventObject.summary\"\n        class=\"ced-top-title\"\n      >\n        {{ eventObject.summary }}\n      </div>\n      <div\n        v-if=\"isEditingAllowed && !inEditMode\"\n        class=\"ced-edit-button-container\"\n      >\n        <div class=\"ced-edit-button\">\n          <q-btn\n            round\n            icon=\"edit\"\n            :color=\"getEventColor(eventObject, 'color')\"\n            :text-color=\"getEventColor(eventObject, 'textColor')\"\n            @click=\"startEditMode\"\n          />\n        </div>\n\n      </div>\n\n    </div>\n\n    <div class=\"ced-content\">\n      <div\n        v-if=\"isEditingAllowed && !inEditMode\"\n        class=\"ced-edit-button-content-spacer\"\n      ></div>\n      <q-list no-border>\n\n        <!-- date / time -->\n        <q-item multiline>\n          <q-item-side>\n            <q-item-tile icon=\"access_time\"/>\n          </q-item-side>\n\n          <!-- edit mode -->\n          <q-item-main v-if=\"isEditingAllowed && inEditMode\">\n\n            <div class=\"row items-center gutter-xs\">\n              <div>\n                <q-field>\n                  <q-datetime\n                    v-model=\"startDateObject\"\n                    type=\"date\"\n                    inverted-light\n                    :color=\"fieldColor\"\n                    class=\"no-shadow\"\n                    format=\"MMM D, YYYY\"\n                  />\n                </q-field>\n\n              </div>\n\n              <div v-if=\"!editEventObject.start.isAllDay\">\n                <q-field>\n                  <q-datetime\n                    v-model=\"startTimeObject\"\n                    type=\"time\"\n                    inverted-light\n                    :color=\"fieldColor\"\n                    class=\"no-shadow\"\n                  />\n                </q-field>\n\n              </div>\n              <div>to</div>\n              <div>\n                <q-field>\n                  <q-datetime\n                    v-model=\"endDateObject\"\n                    type=\"date\"\n                    inverted-light\n                    :color=\"fieldColor\"\n                    class=\"no-shadow\"\n                    format=\"MMM D, YYYY\"\n                  />\n                </q-field>\n\n              </div>\n\n              <div v-if=\"!editEventObject.start.isAllDay\">\n                <q-field>\n                  <q-datetime\n                    v-model=\"endTimeObject\"\n                    type=\"time\"\n                    inverted-light\n                    :color=\"fieldColor\"\n                    class=\"no-shadow\"\n                  />\n                </q-field>\n\n              </div>\n\n            </div>\n\n            <!-- all-day -->\n            <q-field>\n              <q-checkbox\n                label=\"All day\"\n                v-model=\"editEventObject.start.isAllDay\"\n                :toggle-indeterminate=\"false\"\n              />\n            </q-field>\n\n          </q-item-main>\n\n          <!-- display mode -->\n          <q-item-main v-else>\n            <div\n              v-if=\"eventObject.start && eventObject.start.dateObject\"\n              class=\"ced-list-title\"\n            >\n              {{ formatDate(eventObject.start.dateObject, 'DATE_HUGE', true) }}\n              <template\n                v-if=\"eventObject.end &&\n                  eventObject.end.dateObject &&\n                  eventObject.start.isAllDay &&\n                  formatDate(eventObject.start.dateObject, 'DATE_SHORT', true) !== formatDate(eventObject.end.dateObject, 'DATE_SHORT', true)\"\n              >\n                -\n                {{ formatDate(eventObject.end.dateObject, 'DATE_HUGE', true) }}\n              </template>\n            </div>\n            <div\n              v-if=\"eventObject.end &&\n                eventObject.end.dateObject &&\n                eventObject.start.isAllDay !== true\"\n              class=\"ced-list-subtitle\"\n            >\n              {{ formatDate(eventObject.start.dateObject, 'TIME_SIMPLE', true)\n              }}\n              -\n              {{ formatDate(eventObject.end.dateObject, 'TIME_SIMPLE', true) }}\n            </div>\n          </q-item-main>\n        </q-item>\n\n        <!-- location -->\n        <q-item v-if=\"isEditingAllowed && inEditMode\" multiline>\n          <q-item-side>\n            <q-item-tile icon=\"location_on\"/>\n          </q-item-side>\n          <q-item-main class=\"ced-list-title\">\n            <q-field>\n              <q-input\n                v-model=\"editEventObject.location\"\n                float-label=\"Location\"\n                inverted-light\n                :color=\"fieldColor\"\n                class=\"no-shadow\"\n              />\n            </q-field>\n\n          </q-item-main>\n        </q-item>\n        <q-item v-else-if=\"textExists('location')\">\n          <q-item-side>\n            <q-item-tile icon=\"location_on\"/>\n          </q-item-side>\n          <q-item-main class=\"ced-list-title\">\n            {{ eventObject.location }}\n          </q-item-main>\n        </q-item>\n\n        <!-- resources -->\n        <q-item\n          v-if=\"countResources > 0\"\n        >\n          <q-item-side>\n            <q-item-tile icon=\"business\"/>\n          </q-item-side>\n          <q-item-main>\n            <q-item\n              dense\n              v-for=\"thisAttendee in eventObject.attendees\"\n              :key=\"thisAttendee.id\"\n              v-if=\"thisAttendee.resource\"\n              class=\"ced-nested-item\"\n            >\n              {{ thisAttendee.displayName }}\n            </q-item>\n          </q-item-main>\n        </q-item>\n\n        <!-- attendees -->\n        <q-item\n          multiline\n          v-if=\"countAttendees > 0\"\n        >\n          <q-item-side icon=\"people\">\n            <!--<q-item-tile icon=\"people\" />-->\n          </q-item-side>\n          <q-item-main class=\"ced-list-title\">\n\n            <q-item-tile>\n              {{ countAttendees }} guest<template v-if=\"countAttendees > 1\">s</template>\n            </q-item-tile>\n\n            <!-- guest list -->\n            <q-item-tile>\n              <q-item\n                dense\n                v-for=\"thisAttendee in eventObject.attendees\"\n                :key=\"thisAttendee.id\"\n                v-if=\"!thisAttendee.resource\"\n                class=\"ced-nested-item\"\n              >\n                <q-item-side\n                  inverted\n                  icon=\"person\"\n                  class=\"ced-small-inverted-icon\"\n                />\n                <q-item-main class=\"ced-list-title\">\n                  <template v-if=\"thisAttendee.displayName && thisAttendee.displayName.length > 0\">\n                    {{ thisAttendee.displayName }}\n                  </template>\n                  <template v-else>\n                    {{ thisAttendee.email }}\n                  </template>\n                </q-item-main>\n              </q-item>\n            </q-item-tile>\n\n          </q-item-main>\n        </q-item>\n\n        <!-- description -->\n        <q-item v-if=\"isEditingAllowed && inEditMode\">\n          <q-item-side>\n            <q-item-tile icon=\"format_align_left\"/>\n          </q-item-side>\n          <q-item-main>\n            <q-field>\n              <q-input\n                v-model=\"editEventObject.description\"\n                float-label=\"Description\"\n                inverted-light\n                :color=\"fieldColor\"\n                class=\"no-shadow\"\n              />\n            </q-field>\n\n          </q-item-main>\n        </q-item>\n        <q-item\n          v-else-if=\"textExists('description')\"\n          multiline\n        >\n          <q-item-side>\n            <q-item-tile icon=\"format_align_left\"/>\n          </q-item-side>\n          <q-item-main class=\"ced-list-title\">\n            {{ eventObject.description }}\n          </q-item-main>\n        </q-item>\n\n      </q-list>\n    </div>\n\n    <!-- editing close buttons -->\n    <div\n      v-if=\"isEditingAllowed && inEditMode\"\n      class=\"row justify-end q-pa-md gutter-sm\"\n    >\n      <div>\n        <q-btn\n          color=\"warning\"\n          icon=\"cancel\"\n          label=\"Cancel\"\n          @click=\"__close()\"\n        />\n      </div>\n      <div>\n        <q-btn\n          color=\"positive\"\n          icon=\"check\"\n          label=\"Save\"\n          @click=\"__save()\"\n        />\n      </div>\n\n    </div>\n\n  </q-modal>\n\n</template>\n\n<script>\n  import dashHas from 'lodash.has'\n  import {\n    QList,\n    QItem,\n    QItemSide,\n    QItemTile,\n    QItemMain,\n    QModal,\n    QBtn,\n    QIcon,\n    QField,\n    QCheckbox,\n    QDatetime,\n    QInput\n  } from 'quasar'\n  import CalendarMixin from './mixins/CalendarMixin'\n  const { DateTime } = require('luxon')\n  export default {\n    name: 'CalendarEventDetail',\n    props: {\n      eventObject: {\n        type: Object,\n        default: () => {}\n      },\n      eventRef: {\n        type: String,\n        default: 'cal-' + Math.random().toString(36).substring(2, 15)\n      },\n      calendarLocale: {\n        type: String,\n        default: () => { return DateTime.local().locale }\n      },\n      calendarTimezone: {\n        type: String,\n        default: () => { return DateTime.local().zoneName }\n      },\n      allowEditing: {\n        type: Boolean,\n        default: false\n      },\n      fieldColor: {\n        type: String,\n        default: 'grey-2'\n      }\n    },\n    components: {\n      QList,\n      QItem,\n      QItemSide,\n      QItemTile,\n      QItemMain,\n      QModal,\n      QBtn,\n      QIcon,\n      QField,\n      QCheckbox,\n      QDatetime,\n      QInput\n    },\n    mixins: [CalendarMixin],\n    data () {\n      return {\n        modalIsOpen: false,\n        inEditMode: false,\n        editEventObject: {},\n        startDateObject: new Date(),\n        startTimeObject: new Date(),\n        endDateObject: new Date(),\n        endTimeObject: new Date()\n      }\n    },\n    computed: {\n      countAttendees: function () {\n        if (!dashHas(this.eventObject, 'attendees')) {\n          return 0\n        }\n        let count = this.eventObject.attendees.length\n        for (let thisAttendee of this.eventObject.attendees) {\n          if (thisAttendee.resource) {\n            count--\n          }\n        }\n        return count\n      },\n      countResources: function () {\n        if (!dashHas(this.eventObject, 'attendees')) {\n          return 0\n        }\n        let count = 0\n        for (let thisAttendee of this.eventObject.attendees) {\n          if (thisAttendee.resource) {\n            count++\n          }\n        }\n        return count\n      },\n      getTopColorClasses: function () {\n        return this.addCssColorClasses({\n          'ced-top': true,\n          'q-pr-md': true,\n          'q-py-md': true,\n          'relative-position': true\n        },\n        this.eventObject)\n      },\n      getEventStyle: function () {\n        return {\n          // 'background-color': this.backgroundColor,\n          // 'color': this.textColor\n        }\n      },\n      getEventClass: function () {\n        return this.addCssColorClasses(\n          {\n            'calendar-event': true,\n            'calendar-event-month': this.monthStyle\n          },\n          this.eventObject\n        )\n      },\n      isEditingAllowed: function () {\n        if (dashHas(this.eventObject, 'allowEditing')) {\n          return this.eventObject.allowEditing\n        }\n        return this.allowEditing\n      }\n\n    },\n    methods: {\n      textExists: function (fieldLocation) {\n        return (\n          dashHas(this.eventObject, fieldLocation) &&\n          this.eventObject[fieldLocation].length > 0\n        )\n      },\n      __open: function () {\n        this.modalIsOpen = true\n      },\n      __close: function () {\n        this.modalIsOpen = false\n        this.inEditMode = false\n      },\n      startEditMode: function () {\n        this.editEventObject = this.eventObject\n        // fixes for any values that will cause errors\n        if (!dashHas(this.editEventObject, 'start.isAllDay')) {\n          this.editEventObject.start.isAllDay = false\n        }\n        let dateObj = {}\n        if (typeof this.editEventObject.start.dateObject.toJSDate === 'function') {\n          dateObj = this.editEventObject.start.dateObject.toJSDate()\n        }\n        else {\n          dateObj = this.editEventObject.start.dateObject\n        }\n        this.startDateObject = dateObj\n        this.startTimeObject = dateObj\n        if (dashHas(this.editEventObject, 'end.dateObject')) {\n          if (typeof this.editEventObject.end.dateObject.toJSDate === 'function') {\n            dateObj = this.editEventObject.end.dateObject.toJSDate()\n          }\n          else {\n            dateObj = this.editEventObject.end.dateObject\n          }\n          this.endDateObject = dateObj\n          this.endTimeObject = dateObj\n        }\n        this.inEditMode = true\n      },\n      __save: function () {\n        // convert elements back to parsed format\n        let stepList = ['start', 'end']\n        for (let step of stepList) {\n          let dateObj = DateTime.fromJSDate(this[step + 'DateObject'])\n          let timeObj = this[step + 'TimeObject']\n          dateObj = dateObj.set({\n            hour: timeObj.getHours(),\n            minute: timeObj.getMinutes(),\n            second: timeObj.getSeconds()\n          })\n          this.editEventObject[step] = {\n            dateObject: dateObj,\n            dateTime: dateObj.toISO()\n          }\n        }\n        // done modifying\n        this.eventObject = this.editEventObject\n        this.$root.$emit(\n          'update-event-' + this.eventRef,\n          this.eventObject\n        )\n        this.__close()\n      },\n    },\n    mounted () {}\n  }\n</script>\n\n<style lang=\"stylus\">\n  @import 'calendar.vars.styl'\n\n  $topSidePadding = 16px\n  $listSideItemWidth = 38px\n  $listSideItemSpace = 10px\n  $forcedLeftMargin = $topSidePadding + $listSideItemWidth + $listSideItemSpace\n\n  .calendar-event-detail\n    .ced-list-title\n      font-size 1em\n    .ced-list-subtitle\n      font-size .8em\n      opacity 0.8\n    .ced-top\n      /*padding .25em 0 1em*/\n      .ced-top-title\n        font-size 1.25em\n        margin-left $forcedLeftMargin\n        .ced-toolbar-edit-spacer\n          min-height 1em\n          height 1em\n      .ced-edit-button-container\n        position relative\n        .ced-edit-button\n          position absolute\n          left 8px\n          bottom -32px\n    .ced-content\n      font-size 1em\n      .ced-edit-button-content-spacer\n        min-height 1em\n        height 1em\n    .ced-nested-item\n      padding-left 0\n    .ced-small-inverted-icon\n      font-size 20px\n      padding 2px\n      border-radius 50%\n      min-width 24px\n      .q-item-icon-inverted\n        background lighten($light, 25%)\n</style>\n"],"sourceRoot":"node_modules/quasar-calendar/src/components/calendar"}]}