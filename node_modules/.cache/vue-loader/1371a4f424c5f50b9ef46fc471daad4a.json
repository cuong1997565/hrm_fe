{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/setting/Index.vue?vue&type=template&id=045671ee&scoped=true&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/setting/Index.vue","mtime":1538377839386},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1534394480737},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1536410629618},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1534394480737},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":1536410629618}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-layout\",\n    { ref: \"laylout\", attrs: { column: \"\", \"fill-height\": \"\" } },\n    [\n      _c(\n        \"v-toolbar\",\n        { attrs: { dense: \"\", color: \"white\", flat: \"\" } },\n        [\n          _c(\"v-spacer\"),\n          _c(\"h3\", [_vm._v(\"Thiết lập thông tin công ty\")]),\n          _c(\"v-spacer\"),\n          _vm.canAccess(\"setting.create\")\n            ? _c(\n                \"v-btn\",\n                {\n                  staticClass: \"mr-5\",\n                  attrs: { icon: \"\", color: \"primary\" },\n                  on: { click: _vm.addSetting }\n                },\n                [_c(\"v-icon\", [_vm._v(\"add\")])],\n                1\n              )\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\n        \"v-flex\",\n        [\n          _c(\n            \"v-dialog\",\n            {\n              attrs: { \"max-width\": \"500px\" },\n              model: {\n                value: _vm.dialog,\n                callback: function($$v) {\n                  _vm.dialog = $$v\n                },\n                expression: \"dialog\"\n              }\n            },\n            [\n              _c(\n                \"v-card\",\n                [\n                  _c(\"v-card-title\", [\n                    _c(\"span\", { staticClass: \"headline\" }, [\n                      _vm._v(_vm._s(_vm.formTitle))\n                    ])\n                  ]),\n                  _c(\n                    \"v-card-text\",\n                    { attrs: { id: \"formSub\" } },\n                    [\n                      _c(\n                        \"v-container\",\n                        {\n                          staticClass: \"white scroll-y border-e0-top\",\n                          attrs: { \"grid-list-md\": \"\" }\n                        },\n                        [\n                          _c(\n                            \"v-layout\",\n                            { attrs: { wrap: \"\" } },\n                            [\n                              _c(\n                                \"v-flex\",\n                                { attrs: { xs12: \"\", sm6: \"\", md12: \"\" } },\n                                [\n                                  _c(\"v-text-field\", {\n                                    directives: [\n                                      {\n                                        name: \"validate\",\n                                        rawName: \"v-validate\",\n                                        value: \"required\",\n                                        expression: \"'required'\"\n                                      }\n                                    ],\n                                    attrs: {\n                                      placeholder: \"nhập tên\",\n                                      \"error-messages\": _vm.errors.has(\"name\")\n                                        ? _vm.errors.collect(\"name\")\n                                        : [],\n                                      \"data-vv-as\": _vm.$t(\"label.name\"),\n                                      name: \"name\",\n                                      label: _vm.$t(\"label.name\") + \"*\"\n                                    },\n                                    model: {\n                                      value: _vm.setting.name,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.setting, \"name\", $$v)\n                                      },\n                                      expression: \"setting.name\"\n                                    }\n                                  })\n                                ],\n                                1\n                              ),\n                              _c(\n                                \"v-flex\",\n                                { attrs: { xs12: \"\", sm6: \"\", md12: \"\" } },\n                                [\n                                  _c(\"v-text-field\", {\n                                    directives: [\n                                      {\n                                        name: \"validate\",\n                                        rawName: \"v-validate\",\n                                        value: \"required\",\n                                        expression: \"'required'\"\n                                      }\n                                    ],\n                                    attrs: {\n                                      placeholder: \"nhập gía trị\",\n                                      \"error-messages\": _vm.errors.has(\"value\")\n                                        ? _vm.errors.collect(\"value\")\n                                        : [],\n                                      \"data-vv-as\": _vm.$t(\"label.value\"),\n                                      name: \"value\",\n                                      label: _vm.$t(\"label.value\") + \"*\"\n                                    },\n                                    model: {\n                                      value: _vm.setting.value,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.setting, \"value\", $$v)\n                                      },\n                                      expression: \"setting.value\"\n                                    }\n                                  })\n                                ],\n                                1\n                              ),\n                              _c(\n                                \"v-flex\",\n                                { attrs: { xs12: \"\", sm6: \"\", md12: \"\" } },\n                                [\n                                  _c(\"label\", [_vm._v(\"Trạng thái\")]),\n                                  _c(\"v-checkbox\", {\n                                    directives: [\n                                      {\n                                        name: \"validate\",\n                                        rawName: \"v-validate\",\n                                        value: \"required\",\n                                        expression: \"'required'\"\n                                      }\n                                    ],\n                                    staticStyle: { \"margin-top\": \"0px\" },\n                                    attrs: {\n                                      \"error-messages\": _vm.errors.has(\"status\")\n                                        ? _vm.errors.collect(\"status\")\n                                        : [],\n                                      \"data-vv-as\": _vm.$t(\"label.status\"),\n                                      name: \"status\"\n                                    },\n                                    model: {\n                                      value: _vm.setting.status,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.setting, \"status\", $$v)\n                                      },\n                                      expression: \"setting.status\"\n                                    }\n                                  }),\n                                  _vm.setting.status\n                                    ? _c(\"span\", { staticClass: \"status\" }, [\n                                        _vm._v(\"Hiển thị\")\n                                      ])\n                                    : _c(\"span\", { staticClass: \"status\" }, [\n                                        _vm._v(\"Không hiển thị\")\n                                      ])\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"v-card-actions\",\n                    [\n                      _c(\"v-spacer\"),\n                      _c(\n                        \"v-btn\",\n                        {\n                          attrs: { color: \"blue darken-1\", flat: \"\" },\n                          nativeOn: {\n                            click: function($event) {\n                              return _vm.close($event)\n                            }\n                          }\n                        },\n                        [_vm._v(\"Hủy bỏ\")]\n                      ),\n                      _c(\n                        \"v-btn\",\n                        {\n                          attrs: { color: \"blue darken-1\", flat: \"\" },\n                          nativeOn: {\n                            click: function($event) {\n                              return _vm.submitForm($event)\n                            }\n                          }\n                        },\n                        [\n                          _vm.editedIndex !== -1\n                            ? _c(\"span\", [_vm._v(\"Lưu lại\")])\n                            : _c(\"span\", [_vm._v(\"Thêm mới\")])\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"v-container\",\n        [\n          Array.isArray(_vm.settingDetail)\n            ? _c(\"v-data-table\", {\n                staticClass: \"elevation-1\",\n                attrs: {\n                  headers: _vm.headers,\n                  items: _vm.settingDetail,\n                  \"hide-actions\": \"\",\n                  expand: \"\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"items\",\n                    fn: function(props) {\n                      return [\n                        _c(\"td\", [_vm._v(\" \" + _vm._s(props.index + 1))]),\n                        _c(\n                          \"td\",\n                          { staticStyle: { \"text-transform\": \"capitalize\" } },\n                          [_vm._v(_vm._s(props.item.name))]\n                        ),\n                        _c(\n                          \"td\",\n                          { staticStyle: { \"text-transform\": \"capitalize\" } },\n                          [_vm._v(_vm._s(props.item.value))]\n                        ),\n                        _c(\"td\", [_vm._v(_vm._s(props.item.status_txt))]),\n                        _c(\n                          \"td\",\n                          { attrs: { id: \"action\" } },\n                          [\n                            _vm.canAccess(\"setting.update\")\n                              ? _c(\n                                  \"v-icon\",\n                                  {\n                                    staticClass: \"mr-6\",\n                                    attrs: { color: \"green\" },\n                                    on: {\n                                      click: function($event) {\n                                        _vm.editItem(props.item, props.item.id)\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(\" edit\")]\n                                )\n                              : _vm._e(),\n                            _vm.canAccess(\"setting.delete\")\n                              ? _c(\n                                  \"v-icon\",\n                                  {\n                                    staticStyle: { \"margin-left\": \"10px\" },\n                                    attrs: { icon: \"\", color: \"red\" },\n                                    on: {\n                                      click: function($event) {\n                                        _vm.removeConfirm(props.item.id)\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(\" delete \")]\n                                )\n                              : _vm._e()\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\"dialog-confirm\", {\n        on: { input: _vm.remove },\n        model: {\n          value: _vm.dialogDelete,\n          callback: function($$v) {\n            _vm.dialogDelete = $$v\n          },\n          expression: \"dialogDelete\"\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}