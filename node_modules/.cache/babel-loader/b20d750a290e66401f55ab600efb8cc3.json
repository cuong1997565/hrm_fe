{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/department.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/department.js","mtime":1538377839382},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1534394480737},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":1534394476611},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":1534394478618}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport { SET_DEPARTMENT } from '../mutation-types';\n\nvar initState = function initState() {\n  return {\n    department: {}\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  department: initState().department\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  setDepartment: function setDepartment(_ref, payload) {\n    var commit = _ref.commit;\n\n    var _ref2 = payload || {},\n        department = _ref2.department;\n\n    commit(SET_DEPARTMENT, department);\n  },\n  getDepartment: function getDepartment(_ref3, payload) {\n    var commit = _ref3.commit,\n        dispatch = _ref3.dispatch;\n\n    var _ref4 = payload || {},\n        departmentId = _ref4.departmentId,\n        params = _ref4.params,\n        error = _ref4.error;\n\n    dispatch('fetchApi', {\n      url: \"departments/\".concat(departmentId),\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_DEPARTMENT, response.data);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  fetchDepartment: function fetchDepartment(_ref5, payload) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n\n    var _ref6 = payload || {},\n        params = _ref6.params,\n        error = _ref6.error;\n\n    dispatch('fetchApi', {\n      url: \"departments\",\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_DEPARTMENT, response.data);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  getDepartmentForUser: function getDepartmentForUser(_ref7, payload) {\n    var commit = _ref7.commit,\n        dispatch = _ref7.dispatch;\n    var branchId = payload.branchId,\n        cb = payload.cb;\n    dispatch('fetchApi', {\n      url: \"departments/branches/\".concat(branchId),\n      method: 'GET',\n      success: function success(response) {\n        commit(SET_DEPARTMENT, response.data);\n        cb && cb();\n      }\n    }, {\n      root: true\n    });\n  },\n  createDepartment: function createDepartment(_ref8, payload) {\n    var commit = _ref8.commit,\n        dispatch = _ref8.dispatch;\n    var department = payload.department,\n        cb = payload.cb,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: 'departments',\n      method: 'POST',\n      data: department,\n      params: params,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  updateDepartment: function updateDepartment(_ref9, payload) {\n    var commit = _ref9.commit,\n        dispatch = _ref9.dispatch;\n    var id = payload.id,\n        department = payload.department,\n        cb = payload.cb,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: \"departments/\".concat(id),\n      method: 'PUT',\n      data: department,\n      params: params,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  deleteDepartment: function deleteDepartment(_ref10, payload) {\n    var commit = _ref10.commit,\n        dispatch = _ref10.dispatch;\n\n    var _ref11 = payload || {},\n        id = _ref11.id,\n        cb = _ref11.cb,\n        error = _ref11.error;\n\n    dispatch('fetchApi', {\n      url: \"departments/\".concat(id),\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  }\n};\n/**\n * mutations\n */\n\nvar mutations = _defineProperty({}, SET_DEPARTMENT, function (state, department) {\n  state.department = department;\n});\n/**\n * getters\n */\n\n\nvar getters = {\n  // departmentByBranch: (state) => state.department,\n  departmentDetail: function departmentDetail(state) {\n    return state.department;\n  } // departmentAll: (state) => state.department\n\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["src/store/modules/department.js"],"names":["SET_DEPARTMENT","initState","department","state","actions","setDepartment","payload","commit","getDepartment","dispatch","departmentId","params","error","url","method","success","response","data","root","fetchDepartment","getDepartmentForUser","branchId","cb","createDepartment","updateDepartment","id","deleteDepartment","mutations","getters","departmentDetail","namespaced"],"mappings":"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","sourceRoot":"/home/nguyenxuancuong/Sites/hrm_fe","sourcesContent":["import {\n  SET_DEPARTMENT\n} from '../mutation-types'\nconst initState = () => {\n  return {\n    department: {}\n  }\n}\n\n/**\n * state\n */\n\nconst state = {\n  department: initState().department\n}\n\n/**\n * actions\n */\n\nconst actions = {\n  setDepartment ({ commit }, payload) {\n    let { department } = payload || {}\n    commit(SET_DEPARTMENT, department)\n  },\n  getDepartment ({ commit, dispatch }, payload) {\n    let { departmentId, params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `departments/${departmentId}`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_DEPARTMENT, response.data)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  fetchDepartment ({ commit, dispatch }, payload) {\n    let { params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `departments`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_DEPARTMENT, response.data)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  getDepartmentForUser ({ commit, dispatch }, payload) {\n    let { branchId, cb } = payload\n    dispatch(\n      'fetchApi',\n      {\n        url: `departments/branches/${branchId}`,\n        method: 'GET',\n        success: (response) => {\n          commit(SET_DEPARTMENT, response.data)\n          cb && cb()\n        }\n      },\n      { root: true }\n    )\n  },\n\n  createDepartment ({ commit, dispatch }, payload) {\n    let { department, cb, params } = payload\n    dispatch('fetchApi', {\n      url: 'departments',\n      method: 'POST',\n      data: department,\n      params: params,\n      success: cb\n    }, { root: true })\n  },\n  updateDepartment ({ commit, dispatch }, payload) {\n    let { id, department, cb, params } = payload\n    dispatch('fetchApi', {\n      url: `departments/${id}`,\n      method: 'PUT',\n      data: department,\n      params: params,\n      success: cb\n    }, { root: true })\n  },\n  deleteDepartment ({ commit, dispatch }, payload) {\n    let { id, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `departments/${id}`,\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, { root: true })\n  }\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_DEPARTMENT]: (state, department) => {\n    state.department = department\n  }\n}\n\n/**\n * getters\n */\nconst getters = {\n  // departmentByBranch: (state) => state.department,\n  departmentDetail: (state) => state.department\n  // departmentAll: (state) => state.department\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}