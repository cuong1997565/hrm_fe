{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/quasar-calendar/src/components/calendar/CalendarDayLabels.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/quasar-calendar/src/components/calendar/CalendarDayLabels.vue","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CalendarMixin from './mixins/CalendarMixin';\n\nvar _require = require('luxon'),\n    DateTime = _require.DateTime;\n\nexport default {\n  name: 'CalendarDayLabels',\n  props: {\n    startDate: {\n      type: [Object, Date],\n      default: function _default() {\n        return new Date();\n      }\n    },\n    numberOfDays: {\n      type: Number,\n      default: 7\n    },\n    showDates: {\n      type: Boolean,\n      default: false\n    },\n    forceStartOfWeek: {\n      type: Boolean,\n      default: false\n    },\n    fullComponentRef: String,\n    sundayFirstDayOfWeek: {\n      type: Boolean,\n      default: false\n    },\n    calendarLocale: {\n      type: String,\n      default: function _default() {\n        return DateTime.local().locale;\n      }\n    }\n  },\n  components: {},\n  mixins: [CalendarMixin],\n  data: function data() {\n    return {\n      dayCellHeight: 5,\n      dayCellHeightUnit: 'rem',\n      // workingDate: new Date(),\n      workingDate: DateTime.local(),\n      weekDateArray: []\n    };\n  },\n  computed: {\n    cellWidth: function cellWidth() {\n      return this.calculateDayCellWidth(this.numberOfDays);\n    },\n    calendarDaysAreClickable: function calendarDaysAreClickable() {\n      return this.fullComponentRef && this.fullComponentRef.length > 0;\n    }\n  },\n  methods: {\n    handleStartChange: function handleStartChange(val, oldVal) {\n      this.doUpdate();\n    },\n    doUpdate: function doUpdate() {\n      this.mountSetDate();\n      this.buildWeekDateArray(this.numberOfDays, this.sundayFirstDayOfWeek);\n    },\n    isCurrentDayLabel: function isCurrentDayLabel(thisDay, checkMonthOnly) {\n      var now = DateTime.local();\n      thisDay = this.makeDT(thisDay);\n\n      if (checkMonthOnly === true) {\n        return now.weekday === thisDay.weekday && now.month === thisDay.month;\n      } else {\n        return now.hasSame(thisDay, 'day');\n      }\n    },\n    handleDayClick: function handleDayClick(dateObject) {\n      if (this.fullComponentRef) {\n        this.fullMoveToDay(dateObject);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.mountSetDate();\n  },\n  watch: {\n    startDate: 'handleStartChange'\n  }\n};",{"version":3,"sources":["CalendarDayLabels.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,aAAA,MAAA,wBAAA;;eACA,QAAA,OAAA,C;IAAA,Q,YAAA,Q;;AACA,eAAA;AACA,QAAA,mBADA;AAEA,SAAA;AACA,eAAA;AACA,YAAA,CAAA,MAAA,EAAA,IAAA,CADA;AAEA,eAAA,oBAAA;AAAA,eAAA,IAAA,IAAA,EAAA;AAAA;AAFA,KADA;AAKA,kBAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KALA;AASA,eAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KATA;AAaA,sBAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KAbA;AAiBA,sBAAA,MAjBA;AAkBA,0BAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KAlBA;AAsBA,oBAAA;AACA,YAAA,MADA;AAEA,eAAA,oBAAA;AAAA,eAAA,SAAA,KAAA,GAAA,MAAA;AAAA;AAFA;AAtBA,GAFA;AA6BA,cAAA,EA7BA;AA8BA,UAAA,CAAA,aAAA,CA9BA;AA+BA,MA/BA,kBA+BA;AACA,WAAA;AACA,qBAAA,CADA;AAEA,yBAAA,KAFA;AAGA;AACA,mBAAA,SAAA,KAAA,EAJA;AAKA,qBAAA;AALA,KAAA;AAOA,GAvCA;AAwCA,YAAA;AACA,eAAA,qBAAA;AACA,aAAA,KAAA,qBAAA,CAAA,KAAA,YAAA,CAAA;AACA,KAHA;AAIA,8BAAA,oCAAA;AACA,aAAA,KAAA,gBAAA,IAAA,KAAA,gBAAA,CAAA,MAAA,GAAA,CAAA;AACA;AANA,GAxCA;AAgDA,WAAA;AACA,uBAAA,2BAAA,GAAA,EAAA,MAAA,EAAA;AACA,WAAA,QAAA;AACA,KAHA;AAIA,cAAA,oBAAA;AACA,WAAA,YAAA;AACA,WAAA,kBAAA,CAAA,KAAA,YAAA,EAAA,KAAA,oBAAA;AACA,KAPA;AAQA,uBAAA,2BAAA,OAAA,EAAA,cAAA,EAAA;AACA,UAAA,MAAA,SAAA,KAAA,EAAA;AACA,gBAAA,KAAA,MAAA,CAAA,OAAA,CAAA;;AACA,UAAA,mBAAA,IAAA,EAAA;AACA,eACA,IAAA,OAAA,KAAA,QAAA,OAAA,IACA,IAAA,KAAA,KAAA,QAAA,KAFA;AAIA,OALA,MAMA;AACA,eAAA,IAAA,OAAA,CAAA,OAAA,EAAA,KAAA,CAAA;AACA;AACA,KApBA;AAqBA,oBAAA,wBAAA,UAAA,EAAA;AACA,UAAA,KAAA,gBAAA,EAAA;AACA,aAAA,aAAA,CAAA,UAAA;AACA;AACA;AAzBA,GAhDA;AA2EA,SA3EA,qBA2EA;AACA,SAAA,YAAA;AACA,GA7EA;AA8EA,SAAA;AACA,eAAA;AADA;AA9EA,CAAA","sourcesContent":["<template>\n  <div class=\"calendar-day-labels row no-wrap justify-end\">\n    <div\n      v-for=\"thisDay in weekDateArray\"\n      :key=\"formatDate(thisDay, 'EEE')\"\n      :class=\"{\n        'calendar-day-label': true,\n        'calendar-cell': true,\n        'calendar-day-label-current': isCurrentDayLabel(thisDay),\n        'cursor-pointer': calendarDaysAreClickable\n      }\"\n      :style=\"{\n        'width': cellWidth,\n        'max-width': cellWidth,\n      }\"\n      @click=\"handleDayClick(thisDay)\"\n    >\n      {{ formatDate(thisDay, 'EEE') }}\n      <div\n        v-if=\"showDates\"\n        class=\"calendar-day-label-date\"\n      >\n        {{ formatDate(thisDay, 'd') }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import CalendarMixin from './mixins/CalendarMixin'\n  const { DateTime } = require('luxon')\n  export default {\n    name: 'CalendarDayLabels',\n    props: {\n      startDate: {\n        type: [Object, Date],\n        default: () => { return new Date() }\n      },\n      numberOfDays: {\n        type: Number,\n        default: 7\n      },\n      showDates: {\n        type: Boolean,\n        default: false\n      },\n      forceStartOfWeek: {\n        type: Boolean,\n        default: false\n      },\n      fullComponentRef: String,\n      sundayFirstDayOfWeek: {\n        type: Boolean,\n        default: false\n      },\n      calendarLocale: {\n        type: String,\n        default: () => { return DateTime.local().locale }\n      }\n    },\n    components: {},\n    mixins: [CalendarMixin],\n    data () {\n      return {\n        dayCellHeight: 5,\n        dayCellHeightUnit: 'rem',\n        // workingDate: new Date(),\n        workingDate: DateTime.local(),\n        weekDateArray: []\n      }\n    },\n    computed: {\n      cellWidth: function () {\n        return this.calculateDayCellWidth(this.numberOfDays)\n      },\n      calendarDaysAreClickable: function () {\n        return (this.fullComponentRef && this.fullComponentRef.length > 0)\n      }\n    },\n    methods: {\n      handleStartChange: function (val, oldVal) {\n        this.doUpdate()\n      },\n      doUpdate: function () {\n        this.mountSetDate()\n        this.buildWeekDateArray(this.numberOfDays, this.sundayFirstDayOfWeek)\n      },\n      isCurrentDayLabel: function (thisDay, checkMonthOnly) {\n        let now = DateTime.local()\n        thisDay = this.makeDT(thisDay)\n        if (checkMonthOnly === true) {\n          return (\n            now.weekday === thisDay.weekday &&\n            now.month === thisDay.month\n          )\n        }\n        else {\n          return now.hasSame(thisDay, 'day')\n        }\n      },\n      handleDayClick: function (dateObject) {\n        if (this.fullComponentRef) {\n          this.fullMoveToDay(dateObject)\n        }\n      }\n    },\n    mounted () {\n      this.mountSetDate()\n    },\n    watch: {\n      startDate: 'handleStartChange'\n    }\n  }\n</script>\n\n<style lang=\"stylus\">\n  .calendar-day-labels\n    .calendar-day-label\n      font-size 1.1em\n      padding-left 4px\n      .calendar-day-label-date\n        font-size 1.75em\n    .calendar-day-label-current\n      font-weight bold\n\n</style>\n"],"sourceRoot":"node_modules/quasar-calendar/src/components/calendar"}]}