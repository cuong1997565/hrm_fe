{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/position.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/position.js","mtime":1543803367360},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations;\n\nimport { SET_POSITION, SET_INITIAL_STATE } from '../mutation-types';\nimport { getField, updateField } from 'vuex-map-fields';\n\nvar initState = function initState() {\n  return {\n    position: [],\n    params: {\n      q: ''\n    }\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  position: initState().position,\n  params: initState().params\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  setPosition: function setPosition(_ref, payload) {\n    var commit = _ref.commit;\n\n    var _ref2 = payload || {},\n        position = _ref2.position;\n\n    commit(SET_POSITION, position);\n  },\n  fetchPosition: function fetchPosition(_ref3, payload) {\n    var commit = _ref3.commit,\n        dispatch = _ref3.dispatch;\n\n    var _ref4 = payload || {},\n        params = _ref4.params,\n        cb = _ref4.cb;\n\n    dispatch('fetchApi', {\n      url: \"positions\",\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_POSITION, response.data);\n        cb(response.data);\n        console.log(\"data response :\", response.data);\n      }\n    }, {\n      root: true\n    });\n  },\n  getPosition: function getPosition(_ref5, payload) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n\n    var _ref6 = payload || {},\n        positionId = _ref6.positionId,\n        params = _ref6.params,\n        error = _ref6.error;\n\n    dispatch('fetchApi', {\n      url: \"positions/\".concat(positionId),\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_POSITION, response.data);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  createPosition: function createPosition(_ref7, payload) {\n    var commit = _ref7.commit,\n        dispatch = _ref7.dispatch;\n\n    var _ref8 = payload || {},\n        position = _ref8.position,\n        cb = _ref8.cb;\n\n    dispatch('fetchApi', {\n      url: 'positions',\n      method: 'POST',\n      data: position,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  updatePosition: function updatePosition(_ref9, payload) {\n    var commit = _ref9.commit,\n        dispatch = _ref9.dispatch;\n\n    var _ref10 = payload || {},\n        id = _ref10.id,\n        position = _ref10.position,\n        cb = _ref10.cb,\n        error = _ref10.error;\n\n    dispatch('fetchApi', {\n      url: \"positions/\".concat(id),\n      method: 'PUT',\n      data: position,\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  },\n  updateStatusPosition: function updateStatusPosition(_ref11, payload) {\n    var commit = _ref11.commit,\n        dispatch = _ref11.dispatch;\n    var id = payload.id,\n        cb = payload.cb,\n        error = payload.error;\n    dispatch('fetchApi', {\n      url: \"positions/change-status/\".concat(id),\n      method: 'PUT',\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  },\n  deletePosition: function deletePosition(_ref12, payload) {\n    var commit = _ref12.commit,\n        dispatch = _ref12.dispatch;\n\n    var _ref13 = payload || {},\n        id = _ref13.id,\n        cb = _ref13.cb,\n        error = _ref13.error;\n\n    dispatch('fetchApi', {\n      url: \"positions/\".concat(id),\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  }\n};\n/**\n * mutations\n */\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_POSITION, function (state, position) {\n  state.position = position;\n}), _defineProperty(_mutations, SET_INITIAL_STATE, function (state) {\n  state.department = initState().department;\n  state.position = initState().position;\n  state.params = initState().params;\n}), _defineProperty(_mutations, \"resetFilter\", function resetFilter(state) {\n  state.params.q = '';\n}), _defineProperty(_mutations, \"updateField\", updateField), _mutations);\n/**\n * getters\n */\n\nvar getters = {\n  positionDetail: function positionDetail(state) {\n    return state.position;\n  },\n  positionAll: function positionAll(state) {\n    return state.position;\n  },\n  filterParams: function filterParams(state) {\n    return state.params;\n  },\n  getField: getField\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/position.js"],"names":["SET_POSITION","SET_INITIAL_STATE","getField","updateField","initState","position","params","q","state","actions","setPosition","payload","commit","fetchPosition","dispatch","cb","url","method","success","response","data","console","log","root","getPosition","positionId","error","createPosition","updatePosition","id","updateStatusPosition","deletePosition","mutations","department","getters","positionDetail","positionAll","filterParams","namespaced"],"mappings":"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","sourcesContent":["import {\n  SET_POSITION,\n  SET_INITIAL_STATE\n} from '../mutation-types'\nimport { getField, updateField } from 'vuex-map-fields'\n\nconst initState = () => {\n  return {\n    position: [],\n    params: {\n      q: ''\n    }\n\n  }\n}\n\n/**\n * state\n */\nconst state = {\n  position: initState().position,\n  params: initState().params\n\n}\n\n/**\n * actions\n */\nconst actions = {\n  setPosition ({ commit }, payload) {\n    let { position } = payload || {}\n    commit(SET_POSITION, position)\n  },\n  fetchPosition ({ commit, dispatch }, payload) {\n    let { params, cb } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `positions`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_POSITION, response.data)\n          cb(response.data)\n          console.log(\"data response :\", response.data);\n        }\n      },\n      { root: true }\n    )\n  },\n  getPosition ({ commit, dispatch }, payload) {\n    let { positionId, params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `positions/${positionId}`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_POSITION, response.data)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  createPosition ({ commit, dispatch }, payload) {\n    let { position, cb } = payload || {}\n    dispatch('fetchApi', {\n      url: 'positions',\n      method: 'POST',\n      data: position,\n      success: cb\n    }, { root: true })\n  },\n  updatePosition ({ commit, dispatch }, payload) {\n    let { id, position, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `positions/${id}`,\n      method: 'PUT',\n      data: position,\n      success: cb,\n      error: error\n    }, { root: true })\n  },\n  updateStatusPosition ({ commit, dispatch }, payload) {\n    let { id, cb, error } = payload\n    dispatch('fetchApi', {\n      url: `positions/change-status/${id}`,\n      method: 'PUT',\n      success: cb,\n      error: error\n    }, { root: true })\n  },\n  deletePosition ({ commit, dispatch }, payload) {\n    let { id, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `positions/${id}`,\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, { root: true })\n  }\n\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_POSITION]: (state, position) => {\n    state.position = position\n  },\n  [SET_INITIAL_STATE]: (state) => {\n    state.department = initState().department\n    state.position = initState().position\n    state.params = initState().params\n  },\n  resetFilter (state) {\n    state.params.q = ''\n  },\n  updateField\n}\n\n/**\n * getters\n */\nconst getters = {\n  positionDetail: (state) => state.position,\n  positionAll: (state) => state.position,\n  filterParams: (state) => state.params,\n  getField\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}