{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/role.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/role.js","mtime":1539317031464},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations;\n\nimport { SET_ROLE, SET_INITIAL_STATE } from '../mutation-types';\n\nvar initState = function initState() {\n  return {\n    role: {}\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  role: initState().role\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  setRole: function setRole(_ref, payload) {\n    var commit = _ref.commit;\n\n    var _ref2 = payload || {},\n        role = _ref2.role;\n\n    commit(SET_ROLE, role);\n  },\n  getRole: function getRole(_ref3, payload) {\n    var commit = _ref3.commit,\n        dispatch = _ref3.dispatch;\n\n    var _ref4 = payload || {},\n        roleId = _ref4.roleId,\n        params = _ref4.params,\n        error = _ref4.error;\n\n    dispatch('fetchApi', {\n      url: \"roles/\".concat(roleId),\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_ROLE, response.data);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  createRole: function createRole(_ref5, payload) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n\n    var _ref6 = payload || {},\n        role = _ref6.role,\n        cb = _ref6.cb;\n\n    dispatch('fetchApi', {\n      url: 'roles',\n      method: 'POST',\n      data: role,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  updateRole: function updateRole(_ref7, payload) {\n    var commit = _ref7.commit,\n        dispatch = _ref7.dispatch;\n\n    var _ref8 = payload || {},\n        id = _ref8.id,\n        role = _ref8.role,\n        cb = _ref8.cb,\n        error = _ref8.error;\n\n    dispatch('fetchApi', {\n      url: \"roles/\".concat(id),\n      method: 'PUT',\n      data: role,\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  },\n  deleteRole: function deleteRole(_ref9, payload) {\n    var commit = _ref9.commit,\n        dispatch = _ref9.dispatch;\n\n    var _ref10 = payload || {},\n        id = _ref10.id,\n        cb = _ref10.cb,\n        error = _ref10.error;\n\n    dispatch('fetchApi', {\n      url: \"roles/\".concat(id),\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  }\n};\n/**\n * mutations\n */\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_ROLE, function (state, role) {\n  state.role = role;\n}), _defineProperty(_mutations, SET_INITIAL_STATE, function (state) {\n  state.role = initState().role;\n}), _mutations);\n/**\n * getters\n */\n\nvar getters = {\n  roleDetail: function roleDetail(state) {\n    return state.role;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/role.js"],"names":["SET_ROLE","SET_INITIAL_STATE","initState","role","state","actions","setRole","payload","commit","getRole","dispatch","roleId","params","error","url","method","success","response","data","root","createRole","cb","updateRole","id","deleteRole","mutations","getters","roleDetail","namespaced"],"mappings":"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","sourcesContent":["import {\n  SET_ROLE,\n  SET_INITIAL_STATE\n} from '../mutation-types'\n\nconst initState = () => {\n  return {\n    role: {}\n  }\n}\n\n/**\n * state\n */\nconst state = {\n  role: initState().role\n}\n\n/**\n * actions\n */\nconst actions = {\n  setRole ({ commit }, payload) {\n    let { role } = payload || {}\n    commit(SET_ROLE, role)\n  },\n  getRole ({ commit, dispatch }, payload) {\n    let { roleId, params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `roles/${roleId}`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_ROLE, response.data)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  createRole ({ commit, dispatch }, payload) {\n    let { role, cb } = payload || {}\n    dispatch('fetchApi', {\n      url: 'roles',\n      method: 'POST',\n      data: role,\n      success: cb\n    }, { root: true })\n  },\n  updateRole ({ commit, dispatch }, payload) {\n    let { id, role, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `roles/${id}`,\n      method: 'PUT',\n      data: role,\n      success: cb,\n      error: error\n    }, { root: true })\n  },\n  deleteRole ({ commit, dispatch }, payload) {\n    let { id, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `roles/${id}`,\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, { root: true })\n  }\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_ROLE]: (state, role) => {\n    state.role = role\n  },\n  [SET_INITIAL_STATE]: (state) => {\n    state.role = initState().role\n  }\n}\n\n/**\n * getters\n */\nconst getters = {\n  roleDetail: (state) => state.role\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}