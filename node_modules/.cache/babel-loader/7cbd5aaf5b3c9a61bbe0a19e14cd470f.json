{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/quasar-calendar/src/components/calendar/CalendarMultiDay.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/quasar-calendar/src/components/calendar/CalendarMultiDay.vue","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CalendarMixin from './mixins/CalendarMixin';\nimport CalendarEventMixin from './mixins/CalendarEventMixin';\nimport CalendarParentComponentMixin from './mixins/CalendarParentComponentMixin';\nimport CalendarEvent from './CalendarEvent';\nimport CalendarDayColumn from './CalendarDayColumn';\nimport CalendarTimeLabelColumn from './CalendarTimeLabelColumn';\nimport CalendarDayLabels from './CalendarDayLabels';\nimport CalendarHeaderNav from './CalendarHeaderNav';\nimport CalendarAllDayEvents from './CalendarAllDayEvents';\nimport CalendarEventDetail from './CalendarEventDetail';\nimport { QBtn, QTooltip, QScrollArea, scroll } from 'quasar';\nvar getScrollTarget = scroll.getScrollTarget,\n    setScrollPosition = scroll.setScrollPosition;\nexport default {\n  name: 'CalendarMultiDay',\n  mixins: [CalendarParentComponentMixin, CalendarMixin, CalendarEventMixin],\n  props: {\n    numDays: {\n      type: Number,\n      default: 7\n    },\n    navDays: {\n      type: Number,\n      default: 7\n    },\n    forceStartOfWeek: {\n      type: Boolean,\n      default: true\n    },\n    dayCellHeight: {\n      type: Number,\n      default: 5\n    },\n    dayCellHeightUnit: {\n      type: String,\n      default: 'rem'\n    },\n    scrollStyle: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    scrollHeight: {\n      type: String,\n      default: 'auto'\n    },\n    fullComponentRef: String\n  },\n  components: {\n    CalendarEvent: CalendarEvent,\n    CalendarDayColumn: CalendarDayColumn,\n    CalendarTimeLabelColumn: CalendarTimeLabelColumn,\n    CalendarDayLabels: CalendarDayLabels,\n    CalendarHeaderNav: CalendarHeaderNav,\n    CalendarAllDayEvents: CalendarAllDayEvents,\n    CalendarEventDetail: CalendarEventDetail,\n    QBtn: QBtn,\n    QTooltip: QTooltip,\n    QScrollArea: QScrollArea\n  },\n  data: function data() {\n    return {\n      workingDate: new Date(),\n      weekDateArray: [],\n      dayRowArray: [],\n      parsed: this.getDefaultParsed(),\n      thisNavRef: this.createNewNavEventName(),\n      eventDetailEventObject: {}\n    };\n  },\n  computed: {\n    dayCellWidth: function dayCellWidth() {\n      return this.calculateDayCellWidth(this.numDays);\n    },\n    getScrollStyle: function getScrollStyle() {\n      if (this.scrollStyle.length > 0) {\n        return this.scrollStyle;\n      } else {\n        return {\n          'height': this.scrollHeight\n        };\n      }\n    },\n    getScrollClass: function getScrollClass() {\n      if (this.scrollHeight === 'auto') {\n        return {\n          'col': true\n        };\n      } else {\n        return {};\n      }\n    }\n  },\n  methods: {\n    getHeaderLabel: function getHeaderLabel() {\n      if (this.forceStartOfWeek) {\n        var dateReturn = '';\n        var bookendDates = this.getForcedWeekBookendDates();\n\n        if (bookendDates.first.month !== bookendDates.last.month) {\n          dateReturn += bookendDates.first.toFormat('MMM');\n\n          if (bookendDates.first.year !== bookendDates.last.year) {\n            dateReturn += bookendDates.first.toFormat(' yyyy');\n          }\n\n          dateReturn += ' - ';\n        }\n\n        dateReturn += bookendDates.last.toFormat('MMM yyyy');\n        return dateReturn;\n      } else {\n        return this.makeDT(this.workingDate).toFormat('MMMM yyyy');\n      }\n    },\n    doUpdate: function doUpdate() {\n      var _this = this;\n\n      this.mountSetDate();\n      this.buildWeekDateArray(this.numDays, this.sundayFirstDayOfWeek);\n      this.$nextTick(function () {\n        _this.scrollToFirstDay();\n      });\n    },\n    handleNavMove: function handleNavMove(unitType, amount) {\n      this.moveTimePeriod(unitType, amount);\n      this.$emit(this.eventRef + ':navMovePeriod', {\n        unitType: unitType,\n        amount: amount\n      });\n      this.buildWeekDateArray();\n    },\n    scrollToElement: function scrollToElement(el) {\n      var target = getScrollTarget(el);\n      var offset = el.offsetTop - el.scrollHeight;\n      var duration = 0;\n      setScrollPosition(target, offset, duration);\n    },\n    scrollToFirstDay: function scrollToFirstDay() {\n      var thisId = this.getDayHourId(this.eventRef, this.weekDateArray[0], this.dayDisplayStartHour + 1);\n      var thisEl = document.getElementById(thisId);\n      this.scrollToElement(thisEl);\n    }\n  },\n  mounted: function mounted() {\n    this.doUpdate();\n    this.handlePassedInEvents();\n    this.$root.$on(this.eventRef + ':navMovePeriod', this.handleNavMove);\n    this.$root.$on('click-event-' + this.eventRef, this.handleEventDetailEvent);\n    this.$root.$on('update-event-' + this.eventRef, this.handleEventUpdate);\n  },\n  watch: {\n    startDate: 'handleStartChange',\n    eventArray: 'getPassedInEventArray',\n    parsedEvents: 'getPassedInParsedEvents'\n  }\n};",{"version":3,"sources":["CalendarMultiDay.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"calendar-multi-day-component column fit no-wrap\">\n    <!-- week nav -->\n    <template v-if=\"numDays === 1\">\n      <calendar-header-nav\n        time-period-unit=\"days\"\n        :time-period-amount=\"navDays\"\n        :move-time-period-emit=\"eventRef + ':navMovePeriod'\"\n        :calendar-locale=\"calendarLocale\"\n      >\n        {{ formatDate(workingDate, 'EEEE, MMMM d, yyyy')}}\n      </calendar-header-nav>\n    </template>\n    <template v-else>\n      <calendar-header-nav\n        time-period-unit=\"days\"\n        :time-period-amount=\"navDays\"\n        :move-time-period-emit=\"eventRef + ':navMovePeriod'\"\n      >\n        {{ getHeaderLabel() }}\n      </calendar-header-nav>\n    </template>\n\n    <div v-if=\"numDays > 1\" class=\"calendar-time-margin\">\n      <calendar-day-labels\n        :number-of-days=\"numDays\"\n        :show-dates=\"true\"\n        :start-date=\"workingDate\"\n        :force-start-of-week=\"forceStartOfWeek\"\n        :full-component-ref=\"fullComponentRef\"\n        :sunday-first-day-of-week=\"sundayFirstDayOfWeek\"\n        :calendar-locale=\"calendarLocale\"\n      />\n    </div>\n\n    <!-- all day events -->\n    <div class=\"calendar-time-margin\">\n      <calendar-all-day-events\n        :number-of-days=\"numDays\"\n        :start-date=\"weekDateArray[0]\"\n        :parsed=\"parsed\"\n        :event-ref=\"eventRef\"\n        :prevent-event-detail=\"preventEventDetail\"\n        :calendar-locale=\"calendarLocale\"\n        :calendar-timezone=\"calendarTimezone\"\n      />\n    </div>\n\n    <!-- content -->\n    <q-scroll-area\n      :style=\"getScrollStyle\"\n      :class=\"getScrollClass\"\n    >\n      <div class=\"col\">\n        <div class=\"calendar-day row\">\n          <calendar-time-label-column\n            :calendar-locale=\"calendarLocale\"\n          />\n          <div class=\"calendar-multiple-days col row\">\n            <calendar-day-column\n              v-for=\"thisDate in weekDateArray\"\n              :key=\"makeDT(thisDate).toISODate()\"\n              :start-date=\"thisDate\"\n              :date-events=\"dateGetEvents(thisDate, true)\"\n              column-css-class=\"calendar-day-column-content\"\n              :style=\"{ 'width': dayCellWidth }\"\n              :event-ref=\"eventRef\"\n              :prevent-event-detail=\"preventEventDetail\"\n              :calendar-locale=\"calendarLocale\"\n              :calendar-timezone=\"calendarTimezone\"\n              :allow-editing=\"allowEditing\"\n            />\n          </div>\n        </div>\n      </div>\n\n    </q-scroll-area>\n\n    <calendar-event-detail\n      ref=\"defaultEventDetail\"\n      v-if=\"!preventEventDetail\"\n      :event-object=\"eventDetailEventObject\"\n      :event-ref=\"eventRef\"\n      :calendar-locale=\"calendarLocale\"\n      :calendar-timezone=\"calendarTimezone\"\n      :allow-editing=\"allowEditing\"\n    />\n\n  </div>\n</template>\n\n<script>\n  import CalendarMixin from './mixins/CalendarMixin'\n  import CalendarEventMixin from './mixins/CalendarEventMixin'\n  import CalendarParentComponentMixin from './mixins/CalendarParentComponentMixin'\n  import CalendarEvent from './CalendarEvent'\n  import CalendarDayColumn from './CalendarDayColumn'\n  import CalendarTimeLabelColumn from './CalendarTimeLabelColumn'\n  import CalendarDayLabels from './CalendarDayLabels'\n  import CalendarHeaderNav from './CalendarHeaderNav'\n  import CalendarAllDayEvents from './CalendarAllDayEvents'\n  import CalendarEventDetail from './CalendarEventDetail'\n  import {\n    QBtn,\n    QTooltip,\n    QScrollArea,\n    scroll\n  } from 'quasar'\n  const { getScrollTarget, setScrollPosition } = scroll\n  export default {\n    name: 'CalendarMultiDay',\n    mixins: [CalendarParentComponentMixin, CalendarMixin, CalendarEventMixin],\n    props: {\n      numDays: {\n        type: Number,\n        default: 7\n      },\n      navDays: {\n        type: Number,\n        default: 7\n      },\n      forceStartOfWeek: {\n        type: Boolean,\n        default: true\n      },\n      dayCellHeight: {\n        type: Number,\n        default: 5\n      },\n      dayCellHeightUnit: {\n        type: String,\n        default: 'rem'\n      },\n      scrollStyle: {\n        type: Object,\n        default: function () {\n          return {}\n        }\n      },\n      scrollHeight: {\n        type: String,\n        default: 'auto'\n      },\n      fullComponentRef: String\n    },\n    components: {\n      CalendarEvent,\n      CalendarDayColumn,\n      CalendarTimeLabelColumn,\n      CalendarDayLabels,\n      CalendarHeaderNav,\n      CalendarAllDayEvents,\n      CalendarEventDetail,\n      QBtn,\n      QTooltip,\n      QScrollArea\n    },\n    data () {\n      return {\n        workingDate: new Date(),\n        weekDateArray: [],\n        dayRowArray: [],\n        parsed: this.getDefaultParsed(),\n        thisNavRef: this.createNewNavEventName(),\n        eventDetailEventObject: {}\n      }\n    },\n    computed: {\n      dayCellWidth: function () {\n        return this.calculateDayCellWidth(this.numDays)\n      },\n      getScrollStyle: function () {\n        if (this.scrollStyle.length > 0) {\n          return this.scrollStyle\n        }\n        else {\n          return {\n            'height': this.scrollHeight\n          }\n        }\n      },\n      getScrollClass: function () {\n        if (this.scrollHeight === 'auto') {\n          return {\n            'col': true\n          }\n        }\n        else {\n          return {}\n        }\n      }\n    },\n    methods: {\n      getHeaderLabel: function () {\n        if (this.forceStartOfWeek) {\n          let dateReturn = ''\n          let bookendDates = this.getForcedWeekBookendDates()\n          if (bookendDates.first.month !== bookendDates.last.month) {\n            dateReturn += bookendDates.first.toFormat('MMM')\n            if (bookendDates.first.year !== bookendDates.last.year) {\n              dateReturn += bookendDates.first.toFormat(' yyyy')\n            }\n            dateReturn += ' - '\n          }\n          dateReturn += bookendDates.last.toFormat('MMM yyyy')\n          return dateReturn\n        }\n        else {\n          return this.makeDT(this.workingDate).toFormat('MMMM yyyy')\n        }\n      },\n      doUpdate: function () {\n        this.mountSetDate()\n        this.buildWeekDateArray(this.numDays, this.sundayFirstDayOfWeek)\n        this.$nextTick(() => {\n          this.scrollToFirstDay()\n        })\n      },\n      handleNavMove: function (unitType, amount) {\n        this.moveTimePeriod(unitType, amount)\n        this.$emit(\n          this.eventRef + ':navMovePeriod',\n          {\n            unitType: unitType,\n            amount: amount\n          }\n        )\n        this.buildWeekDateArray()\n      },\n      scrollToElement: function (el) {\n        let target = getScrollTarget(el)\n        let offset = el.offsetTop - el.scrollHeight\n        let duration = 0\n        setScrollPosition(target, offset, duration)\n      },\n      scrollToFirstDay: function () {\n        let thisId = this.getDayHourId(\n          this.eventRef,\n          this.weekDateArray[0],\n          (this.dayDisplayStartHour + 1)\n        )\n        let thisEl = document.getElementById(thisId)\n        this.scrollToElement(thisEl)\n      }\n    },\n    mounted () {\n      this.doUpdate()\n      this.handlePassedInEvents()\n      this.$root.$on(\n        this.eventRef + ':navMovePeriod',\n        this.handleNavMove\n      )\n      this.$root.$on(\n        'click-event-' + this.eventRef,\n        this.handleEventDetailEvent\n      )\n      this.$root.$on(\n        'update-event-' + this.eventRef,\n        this.handleEventUpdate\n      )\n    },\n    watch: {\n      startDate: 'handleStartChange',\n      eventArray: 'getPassedInEventArray',\n      parsedEvents: 'getPassedInParsedEvents'\n    }\n  }\n</script>\n\n<style lang=\"stylus\">\n  @import 'calendar.vars.styl'\n\n  .calendar-multi-day-component\n    .calendar-time-margin\n      margin-left $dayTimeLabelWidth\n    .calendar-header\n      .calendar-header-label\n        font-size 1.25em\n        font-weight bold\n    .calendar-day\n      .calendar-day-column-label\n        width $dayTimeLabelWidth\n      .calendar-day-column-content\n        border-right $borderThin\n        position relative\n      .calendar-day-time\n        padding-right .5em\n        border-right $borderOuter\n      .calendar-day-time-content\n        border-top $borderThin\n\n</style>\n"],"sourceRoot":"node_modules/quasar-calendar/src/components/calendar"}]}