{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/account/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/account/Login.vue","mtime":1538377839386},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'Login',\n  data: function data() {\n    return {\n      login: {\n        username: '',\n        password: ''\n      },\n      showPassword: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['isFetchingApi'])),\n  methods: _objectSpread({}, mapActions(['fetchApi', 'setLogged', 'getProfile']), {\n    validateBeforeSubmit: function validateBeforeSubmit() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          _this.fetchApi({\n            baseURL: process.env.VUE_APP_API_URL,\n            url: 'login',\n            method: 'post',\n            data: _this.login,\n            success: _this.loggedSuccess\n          });\n        } else {\n          _this.$store.dispatch('showNotify', {\n            text: 'Vui lòng kiểm tra các trường cần nhập!',\n            color: 'warning'\n          });\n        }\n      });\n    },\n    loggedSuccess: function loggedSuccess(response) {\n      this.setLogged(response);\n      this.getProfile({\n        params: {\n          include: 'roles'\n        }\n      });\n\n      if (this.$route.query.redirect) {\n        this.$router.push(this.$route.query.redirect);\n      } else {\n        this.$router.push({\n          name: 'home'\n        });\n      }\n    },\n    forgotPassword: function forgotPassword() {}\n  }),\n  mounted: function mounted() {}\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,QAAA,OADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,aAAA;AACA,kBAAA,EADA;AAEA,kBAAA;AAFA,OADA;AAKA,oBAAA;AALA,KAAA;AAOA,GAVA;AAWA,8BACA,WAAA,CAAA,eAAA,CAAA,CADA,CAXA;AAcA,6BACA,WAAA,CAAA,UAAA,EAAA,WAAA,EAAA,YAAA,CAAA,CADA;AAEA,wBAFA,kCAEA;AAAA;;AACA,WAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,kBAAA;AACA,YAAA,MAAA,EAAA;AACA,gBAAA,QAAA,CAAA;AACA,qBAAA,QAAA,GAAA,CAAA,eADA;AAEA,iBAAA,OAFA;AAGA,oBAAA,MAHA;AAIA,kBAAA,MAAA,KAJA;AAKA,qBAAA,MAAA;AALA,WAAA;AAOA,SARA,MAQA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AACA,kBAAA,wCADA;AAEA,mBAAA;AAFA,WAAA;AAIA;AACA,OAfA;AAgBA,KAnBA;AAoBA,iBApBA,yBAoBA,QApBA,EAoBA;AACA,WAAA,SAAA,CAAA,QAAA;AACA,WAAA,UAAA,CAAA;AAAA,gBAAA;AAAA,mBAAA;AAAA;AAAA,OAAA;;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA;AACA,OAFA,MAEA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AAAA,gBAAA;AAAA,SAAA;AACA;AACA,KA5BA;AA6BA,kBA7BA,4BA6BA,CACA;AA9BA,IAdA;AA8CA,SA9CA,qBA8CA,CAEA;AAhDA,CAAA","sourcesContent":["<template>\n  <div>\n    <v-form @submit.prevent=\"validateBeforeSubmit\">\n      <v-text-field\n        :error-messages=\"errors.has('username') ? errors.collect('username') : []\"\n        v-validate=\"'required|email'\"\n        data-vv-as=\"Tài khoản\"\n        name=\"username\"\n        label=\"Tài khoản\"\n        placeholder=\"example@gmail.com\"\n        type=\"email\"\n        autocomplete=\"off\"\n        v-model=\"login.username\">\n      </v-text-field>\n      <v-text-field\n        :error-messages=\"errors.has('password') ? errors.collect('password') : []\"\n        v-validate=\"'required|min:5'\"\n        data-vv-as=\"Mật khẩu\"\n        :append-icon=\"showPassword ? 'visibility_off' : 'visibility'\"\n        :type=\"showPassword ? 'text' : 'password'\"\n        @click:append=\"showPassword = !showPassword\"\n        name=\"password\"\n        label=\"Mật khẩu\"\n        placeholder=\"......\"\n        autocomplete=\"off\"\n        v-model=\"login.password\">\n      </v-text-field>\n      <v-card-actions class=\"mt-3 mb-3\">\n        <v-btn\n          block\n          :loading=\"isFetchingApi\"\n          :disabled=\"isFetchingApi\"\n          color=\"primary\"\n          type=\"submit\"\n          >\n          Đăng nhập\n        </v-btn>\n      </v-card-actions>\n      <!-- <a class=\"forgot-password\" href=\"#\" @click=\"forgotPassword\"><i class=\"mr-2 fas fa-lock\"></i> Quên mật khẩu?</a> -->\n    </v-form>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex'\nexport default {\n  name: 'Login',\n  data () {\n    return {\n      login: {\n        username: '',\n        password: ''\n      },\n      showPassword: false\n    }\n  },\n  computed: {\n    ...mapGetters(['isFetchingApi'])\n  },\n  methods: {\n    ...mapActions(['fetchApi', 'setLogged', 'getProfile']),\n    validateBeforeSubmit () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n          this.fetchApi({\n            baseURL: process.env.VUE_APP_API_URL,\n            url: 'login',\n            method: 'post',\n            data: this.login,\n            success: this.loggedSuccess\n          })\n        } else {\n          this.$store.dispatch('showNotify', {\n            text: 'Vui lòng kiểm tra các trường cần nhập!',\n            color: 'warning'\n          })\n        }\n      })\n    },\n    loggedSuccess (response) {\n      this.setLogged(response)\n      this.getProfile({ params: { include: 'roles' } })\n      if (this.$route.query.redirect) {\n        this.$router.push(this.$route.query.redirect)\n      } else {\n        this.$router.push({ name: 'home' })\n      }\n    },\n    forgotPassword () {\n    }\n  },\n  mounted () {\n\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.forgot-password {\n  color: #797979 !important;\n  text-decoration: none;\n}\n.forgot-password:hover {\n  color: #343a40!important;\n}\n</style>\n"],"sourceRoot":"src/views/account"}]}