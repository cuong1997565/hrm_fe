{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/employeeHrm/FormSub.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/employeeHrm/FormSub.vue","mtime":1543299117309},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#department_text_long .v-select__selection {\n  /* BOTH of the following are required for text-overflow */\n  overflow: hidden !important;\n  white-space: nowrap !important;\n  text-overflow: ellipsis !important;\n  width: 250px;\n}\n#department_text_long .v-select__selection input::after{\n  width: 260px;\n  content: \"...\";\n}\n",{"version":3,"sources":["FormSub.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormSub.vue","sourceRoot":"src/views/employeeHrm","sourcesContent":["<template>\n  <v-form @submit.prevent=\"validateBeforeSubmit\">\n    <v-flex>\n      <!-- branch,department,position -->\n      <v-layout style=\"position: relative\" row wrap sm12 class=\"mt-3\">\n        <!-- <v-flex xs8> -->\n          <v-flex md4>\n            <h3>Chi nhánh</h3>\n          </v-flex>\n          <v-flex md4 class=\"pl-3\">\n            <h3>Phòng ban</h3>\n          </v-flex>\n          <v-flex md3 style=\"margin-left: 30px;\">\n            <h3>Chức danh</h3>\n          </v-flex>\n        </v-layout>\n        <v-layout v-if=\"employee.departments.length\" style=\"clear: both;\" row wrap :key=\"index\" v-for=\"(department, index) in employee.departments\">\n          <v-flex md4 class=\"mr-3\">\n            <v-autocomplete\n            :loading=\"isLoadingBranch && branchIndex === index\"\n            ref=\"focusInput\"\n            tabindex=1\n            v-validate=\"'required'\"\n            :error-messages=\"errors.has(`branch_${index}`) ? errors.collect(`branch_${index}`) : []\"\n            :data-vv-as=\"$t('label.name_branch')\"\n            :name=\"`branch_${index}`\"\n            v-model=\"employee.departments[index].branch_id\"\n            label=\"Chi nhánh\"\n            @keyup = \"searchBranch(index, $event)\"\n            :items=\"employee.departments[index].branchs\"\n            item-text=\"name\"\n            item-value=\"id\"\n            placeholder=\"Chi nhánh\"\n            single-line\n            clearable\n            @click:clear=\"clearBranch(index)\"\n            @change=\"changeBranch()\"\n            >\n            <template slot=\"no-data\">\n              <v-list-tile>\n                <v-list-tile-title style=\"color:blue\">\n                  Không tìm thấy chi nhánh\n                </v-list-tile-title>\n              </v-list-tile>\n            </template>\n          </v-autocomplete> </v-flex>\n        <!-- department -->\n          <v-flex md4 id=\"department_text_long\" class=\"mr-2\">\n            <v-select\n            tabindex=2\n            v-validate=\"'required'\"\n            v-model=\"employee.departments[index].department_id\"\n            label=\"Phòng ban\"\n            :error-messages=\"errors.has(`department_${index}`) ? errors.collect(`department_${index}`) : []\"\n            :data-vv-as=\"$t('label.name_department')\"\n            :name=\"`department_${index}`\"\n            :disabled=\"!employee.departments[index].branch_id\"\n            :items=\"getDepartmentByBranch(employee.departments[index].branch_id)\"\n            item-text=\"name\"\n            item-value=\"id\"\n            placeholder=\"Phòng ban\"\n            single-line\n            @change=\"changeDepartment\"\n            >\n            <template slot=\"no-data\">\n              <v-list-tile>\n                <v-list-tile-title style=\"color:blue\">\n                  Không có phòng ban\n                </v-list-tile-title>\n              </v-list-tile>\n            </template>\n          </v-select>\n        </v-flex>\n          <!-- postion -->\n        <v-flex md3>\n          <v-autocomplete\n          tabindex=3\n          :disabled=\"!employee.departments[index].department_id\"\n          v-validate=\"'required'\"\n          :loading=\"isLoadingPosition && positionIndex === index\"\n          v-model=\"employee.departments[index].position_id\"\n          :items=\"employee.departments[index].positions\"\n          item-text=\"name\"\n          item-value=\"id\"\n          :error-messages=\"errors.has(`position_${index}`) ? errors.collect(`position_${index}`) : []\"\n          :data-vv-as=\"$t('label.name_position')\"\n          :name=\"`position_${index}`\"\n          placeholder=\"Chức danh\"\n          single-line\n          clearable\n          @click:clear=\"clearPosition(index)\"\n          @keyup = \"searchPosition(index, $event)\"\n          @change=\"changePosition\"\n          >\n          <template slot=\"no-data\">\n            <v-list-tile>\n              <v-list-tile-title style=\"color:blue\">\n                Không tìm thấy chức danh\n              </v-list-tile-title>\n            </v-list-tile>\n          </template>\n        </v-autocomplete>\n      </v-flex>\n        <v-flex xs1 style=\"flex-basis:55px;\">\n        <v-tooltip bottom>\n          <v-btn slot=\"activator\"\n          style=\"margin-top:10px;\"\n          icon color=\"error\"\n          @click=\"deleteDepartment(index)\">\n          <v-icon>delete</v-icon>\n        </v-btn>\n        <span>Xóa</span>\n      </v-tooltip>\n    </v-flex>\n  </v-layout>\n  <v-layout row wrap>\n    <v-tooltip bottom style=\"position: absolute; right: 18px; margin-top: -10px;\">\n      <v-btn slot=\"activator\" class=\"mr-3 mt-0\"\n      icon color=\"primary\"\n      id=\"addDepartment\"\n      @click=\"addDepartment()\">\n      <v-icon>add</v-icon> </v-btn>\n      <span>Thêm chức danh</span>\n    </v-tooltip>\n  </v-layout>\n</v-flex>\n</v-form>\n</template>\n<script>\nimport { filter, debounce } from 'lodash'\nimport { mapGetters, mapActions } from 'vuex'\nexport default {\n  name: 'employeeFormSub',\n  data () {\n    return {\n      colorAddDepartment: 'primary',\n      departments: [],\n      positions: [],\n      branches: [],\n      isLoadingBranch: false,\n      branchIndex: 0,\n      isLoadingPosition: false,\n      positionIndex: 0,\n      employee: {\n        departments: []\n      }\n    }\n  },\n  props: {\n    index: {\n      type: Number,\n      default: 0\n    },\n    dataEmployee: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  computed: {\n    ...mapGetters('Department', ['departmentByBranch']),\n    ...mapGetters('Position', ['positionAll']),\n    ...mapGetters('Branch', ['branchAll'])\n  },\n  watch: {\n    dataEmployee (val) {\n      this.setInitData()\n    }\n  },\n  methods: {\n    ...mapActions(['fetchApi']),\n    ...mapActions('Department', ['getDepartmentForEmployee']),\n    ...mapActions('Position', ['fetchPosition']),\n    ...mapActions('Branch', ['getBranchs', 'setBranch']),\n    // screach branch\n    searchBranch: debounce(function (index, value) {\n      this.branchIndex = index\n      this.isLoadingBranch = true\n      this.employee.departments[index].department_id = ''\n      this.employee.departments[index].branch_id = ''\n      this.employee.departments[index].branchs = []\n      this.getBranchs({ params: { q: value.target.value, limit: 10 },\n        cb: (response) => {\n          this.employee.departments[index].branchs = response\n          this.isLoadingBranch = false\n        }\n      })\n    }),\n    changeBranch () {\n      this.departmentRequired = 'required'\n    },\n    // get department theo branch\n    getDepartmentByBranch (branchId) {\n      let array = []\n      if (this.departments.length) {\n        array = filter(this.departments, function (object) {\n          return parseInt(object.branch_id) === parseInt(branchId)\n        })\n      }\n      return array\n    },\n    // clear branch\n    clearBranch (index) {\n      this.getBranchs({\n        params: { q: '', limit: 10 },\n        cb: (response) => {\n          this.employee.departments[index].branchs = response\n        }\n      })\n      this.employee.departments[index].department_id = ''\n      this.employee.departments[index].branch_id = ''\n    },\n    // clear position\n    clearPosition (index) {\n      this.employee.departments[index].position_id = ''\n      this.fetchPosition({ params: { q: '', limit: 10 },\n        cb: (response) => {\n          this.employee.departments[index].positions = response\n        }\n      })\n    },\n    // sreach positions\n    searchPosition: debounce(function (index, value) {\n      this.isLoadingPosition = true\n      this.positionIndex = index\n      this.employee.departments[index].position_id = ''\n      this.employee.departments[index].positions = []\n      this.fetchPosition({\n        params: { q: value.target.value, limit: 10 },\n        cb: (response) => {\n          this.employee.departments[index].positions = response\n          this.isLoadingPosition = false\n        }\n      })\n    }, 500),\n    // focusInput\n    focusInput () {\n      this.$nextTick(() => {\n        this.$refs.focusInput[0].focus()\n      })\n    },\n    // deleteDepartment remove 1 row\n    deleteDepartment (index) {\n      this.employee.departments.splice(index, 1)\n    },\n    // add 1 row\n    addDepartment () {\n      this.employee.departments.push({})\n      this.employee.departments[this.employee.departments.length - 1].branchs = this.branchAll\n      this.employee.departments[this.employee.departments.length - 1].positions = this.positionAll\n      this.employee.departments[this.employee.departments.length - 1].isLoadingBranch = false\n    },\n    // change department\n    changeDepartment () {\n      this.emitDepartment()\n    },\n    // change positions\n    changePosition () {\n      this.emitDepartment()\n    },\n    // validator form sub\n    validateBeforeSubmit () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n        } else {\n          this.$store.dispatch('showNotify', {\n            text: this.$t('alert.invalid'),\n            color: 'warning'\n          })\n          this.stepEmployee = 1\n        }\n      })\n    },\n    // emit data form sub about form\n    emitDepartment () {\n      this.$emit('positionAndDepartment', this.employee.departments)\n    },\n    // set data about form sub\n    setInitData () {\n      let dataEmployee = { ...this.dataEmployee }\n      this.employee = { ...this.employee, ...dataEmployee }\n      // nếu mảng dataemployee.departments không có gía trị thì push thêm một mảng rỗng\n      if (this.dataEmployee.departments.data) {\n        this.employee.departments = this.dataEmployee.departments.data.length ? this.employee.departments.data : [{}]\n        if (this.employee.departments.length) {\n          this.employee.departments.map((item) => {\n            item.department_id = item.id\n            return item\n          })\n        }\n      } else {\n        this.employee.departments.push({})\n        if (this.employee.departments[0]) {\n          this.employee.departments[0].branchs = this.branchAll\n          this.employee.departments[0].positions = this.positionAll\n        }\n      }\n    }\n  },\n  mounted () {\n    // data form sub cua phan  add\n    if (!this.dataEmployee.departments.data) {\n      this.employee.departments.push({})\n      this.employee.departments[0].branchs = this.branchAll\n      this.employee.departments[0].positions = this.positionAll\n      this.employee.departments[0].loadingBranch = false\n      this.employee.departments[0].loadingPosition = false\n      /* this.employee.departments[this.employee.departments.length-1].branchs = this.branchAll */\n    }\n    // branch rong\n    if (!this.branchAll.length) {\n      this.getBranchs({\n        params: { limit: 10 },\n        cb: (response) => {\n          this.employee.departments[0].branchs = response\n        }\n      })\n    }\n    // position\n    if (!this.positionAll.length) {\n      this.fetchPosition({\n        params: { limit: 10 },\n        cb: (response) => {\n          this.employee.departments[0].positions = response\n        }\n      })\n    }\n  },\n  created () {\n    this.fetchApi({\n      url: 'departments',\n      method: 'GET',\n      params: {\n        limit: -1\n      },\n      success: (response) => {\n        this.departments = response.data\n      }\n    })\n  }\n}\n</script>\n<style>\n#department_text_long .v-select__selection {\n  /* BOTH of the following are required for text-overflow */\n  overflow: hidden !important;\n  white-space: nowrap !important;\n  text-overflow: ellipsis !important;\n  width: 250px;\n}\n#department_text_long .v-select__selection input::after{\n  width: 260px;\n  content: \"...\";\n}\n</style>\n"]}]}