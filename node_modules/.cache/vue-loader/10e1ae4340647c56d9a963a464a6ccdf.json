{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/plansHrm/FormCandidate.vue?vue&type=template&id=696fa163&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/plansHrm/FormCandidate.vue","mtime":1543479403870},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-form\",\n    {\n      staticClass: \"pa-0\",\n      on: {\n        submit: function($event) {\n          $event.preventDefault()\n          return _vm.submitFormCandidate($event)\n        }\n      }\n    },\n    [\n      _c(\n        \"v-card\",\n        { staticClass: \"pa-0\" },\n        [\n          _c(\"v-card-title\", { staticClass: \"pt-3\" }, [\n            _c(\n              \"span\",\n              {\n                staticClass: \"headline\",\n                staticStyle: { margin: \"0 auto\" },\n                attrs: { width: \"100%\" }\n              },\n              [_vm._v(\"Thêm hồ sơ ứng viên\")]\n            )\n          ]),\n          _c(\"v-divider\"),\n          _c(\n            \"v-card-text\",\n            { staticClass: \"pt-0\" },\n            [\n              _c(\n                \"v-container\",\n                {\n                  staticClass: \"white scroll-y\",\n                  attrs: { \"grid-list-md\": \"\" }\n                },\n                [\n                  _c(\n                    \"v-layout\",\n                    { attrs: { row: \"\", wrap: \"\" } },\n                    [\n                      _c(\n                        \"v-flex\",\n                        { attrs: { xs6: \"\" } },\n                        [\n                          _c(\"v-text-field\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|min:3\",\n                                expression: \"'required|min:3'\"\n                              }\n                            ],\n                            ref: \"firstInputCandidate\",\n                            staticClass: \"input-required\",\n                            attrs: {\n                              tabindex: \"1\",\n                              \"error-messages\": _vm.errors.has(\"candidate.name\")\n                                ? _vm.errors.collect(\"candidate.name\")\n                                : [],\n                              \"data-vv-as\": _vm.$t(\"label.name\"),\n                              name: \"candidate.name\",\n                              placeholder: \"Xin vui lòng nhập tên\",\n                              label: _vm.$t(\"label.name\"),\n                              autofocus: \"\"\n                            },\n                            model: {\n                              value: _vm.candidate.name,\n                              callback: function($$v) {\n                                _vm.$set(_vm.candidate, \"name\", $$v)\n                              },\n                              expression: \"candidate.name\"\n                            }\n                          }),\n                          _c(\"v-text-field\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"numeric|min:10|max:12\",\n                                expression: \"'numeric|min:10|max:12'\"\n                              }\n                            ],\n                            attrs: {\n                              tabindex: \"3\",\n                              \"error-messages\": _vm.errors.has(\n                                \"candidate.phone\"\n                              )\n                                ? _vm.errors.collect(\"candidate.phone\")\n                                : [],\n                              \"data-vv-as\": _vm.$t(\"label.phone\"),\n                              name: \"candidate.phone\",\n                              placeholder: \"Xin vui lòng nhập số điện thoại\",\n                              label: _vm.$t(\"label.phone\")\n                            },\n                            model: {\n                              value: _vm.candidate.phone,\n                              callback: function($$v) {\n                                _vm.$set(_vm.candidate, \"phone\", $$v)\n                              },\n                              expression: \"candidate.phone\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"v-flex\",\n                        { attrs: { xs6: \"\" } },\n                        [\n                          _c(\"v-text-field\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|min:3\",\n                                expression: \"'required|min:3'\"\n                              }\n                            ],\n                            staticClass: \"input-required\",\n                            attrs: {\n                              tabindex: \"2\",\n                              \"error-messages\": _vm.errors.has(\n                                \"candidate.email\"\n                              )\n                                ? _vm.errors.collect(\"candidate.email\")\n                                : [],\n                              \"data-vv-as\": _vm.$t(\"label.email\"),\n                              placeholder: \"Xin vui lòng nhập email\",\n                              name: \"candidate.email\",\n                              label: _vm.$t(\"label.email\")\n                            },\n                            model: {\n                              value: _vm.candidate.email,\n                              callback: function($$v) {\n                                _vm.$set(_vm.candidate, \"email\", $$v)\n                              },\n                              expression: \"candidate.email\"\n                            }\n                          }),\n                          _c(\"v-text-field\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"url:require_protocol\",\n                                expression: \"'url:require_protocol'\"\n                              }\n                            ],\n                            attrs: {\n                              tabindex: \"4\",\n                              \"error-messages\": _vm.errors.has(\n                                \"candidate.source\"\n                              )\n                                ? _vm.errors.collect(\"candidate.source\")\n                                : [],\n                              \"data-vv-as\": _vm.$t(\"label.source\"),\n                              name: \"candidate.source\",\n                              placeholder: \"Chọn source\",\n                              label: _vm.$t(\"label.source\")\n                            },\n                            model: {\n                              value: _vm.candidate.source,\n                              callback: function($$v) {\n                                _vm.$set(_vm.candidate, \"source\", $$v)\n                              },\n                              expression: \"candidate.source\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"v-layout\",\n                    { attrs: { row: \"\", wrap: \"\" } },\n                    [\n                      _c(\n                        \"v-flex\",\n                        { attrs: { xs6: \"\" } },\n                        [\n                          _c(\"p\", [_vm._v(\"Chức danh\")]),\n                          _c(\n                            \"v-tooltip\",\n                            { attrs: { bottom: \"\" } },\n                            [\n                              _c(\n                                \"v-autocomplete\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"validate\",\n                                      rawName: \"v-validate\",\n                                      value: \"required\",\n                                      expression: \"'required'\"\n                                    }\n                                  ],\n                                  attrs: {\n                                    slot: \"activator\",\n                                    tabindex: \"5\",\n                                    label: \"Chức danh\",\n                                    items: _vm.positionsCandidate,\n                                    \"item-text\": \"name\",\n                                    \"item-value\": \"id\",\n                                    \"data-vv-as\": _vm.$t(\"label.name_position\"),\n                                    \"error-messages\": _vm.errors.has(\n                                      \"candidate.position\"\n                                    )\n                                      ? _vm.errors.collect(\"candidate.position\")\n                                      : [],\n                                    name: \"candidate.position\",\n                                    placeholder: \"Chức danh\",\n                                    \"single-line\": \"\"\n                                  },\n                                  slot: \"activator\",\n                                  model: {\n                                    value: _vm.candidate.position_id,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.candidate,\n                                        \"position_id\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"candidate.position_id\"\n                                  }\n                                },\n                                [\n                                  _c(\n                                    \"template\",\n                                    { slot: \"no-data\" },\n                                    [\n                                      _c(\n                                        \"v-list-tile\",\n                                        [\n                                          _c(\n                                            \"v-list-tile-title\",\n                                            { staticStyle: { color: \"blue\" } },\n                                            [\n                                              _vm._v(\n                                                \"\\n                        Không tìm thấy chức danh\\n                      \"\n                                              )\n                                            ]\n                                          )\n                                        ],\n                                        1\n                                      )\n                                    ],\n                                    1\n                                  )\n                                ],\n                                2\n                              ),\n                              _c(\"span\", [_vm._v(\"Chọn chức danh\")])\n                            ],\n                            1\n                          ),\n                          _c(\"v-datetime-picker\", {\n                            attrs: {\n                              label: \"Thời gian phỏng vấn\",\n                              placeholder: \"Chọn thời gian phỏng vấn\"\n                            },\n                            model: {\n                              value: _vm.candidate.time_interview,\n                              callback: function($$v) {\n                                _vm.$set(_vm.candidate, \"time_interview\", $$v)\n                              },\n                              expression: \"candidate.time_interview\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"v-flex\",\n                        { attrs: { xs6: \"\" } },\n                        [\n                          _c(\"v-select\", {\n                            attrs: {\n                              tabindex: \"6\",\n                              items: _vm.status,\n                              \"item-text\": \"name\",\n                              \"item-value\": \"id\",\n                              name: \"status\",\n                              label: _vm.$t(\"label.status\")\n                            },\n                            model: {\n                              value: _vm.candidate.status,\n                              callback: function($$v) {\n                                _vm.$set(_vm.candidate, \"status\", $$v)\n                              },\n                              expression: \"candidate.status\"\n                            }\n                          }),\n                          _c(\n                            \"v-menu\",\n                            {\n                              ref: \"dateApply\",\n                              attrs: {\n                                \"close-on-content-click\": false,\n                                \"nudge-right\": 40,\n                                \"return-value\": _vm.candidate.date_apply,\n                                lazy: \"\",\n                                transition: \"scale-transition\",\n                                \"offset-y\": \"\",\n                                \"full-width\": \"\",\n                                \"min-width\": \"290px\"\n                              },\n                              on: {\n                                \"update:returnValue\": function($event) {\n                                  _vm.$set(_vm.candidate, \"date_apply\", $event)\n                                }\n                              },\n                              model: {\n                                value: _vm.dateApply,\n                                callback: function($$v) {\n                                  _vm.dateApply = $$v\n                                },\n                                expression: \"dateApply\"\n                              }\n                            },\n                            [\n                              _c(\"v-text-field\", {\n                                attrs: {\n                                  slot: \"activator\",\n                                  tabindex: \"8\",\n                                  label: \"Chọn ngày nộp đơn\",\n                                  readonly: \"\"\n                                },\n                                slot: \"activator\",\n                                model: {\n                                  value: _vm.candidate.date_apply,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.candidate, \"date_apply\", $$v)\n                                  },\n                                  expression: \"candidate.date_apply\"\n                                }\n                              }),\n                              _c(\n                                \"v-date-picker\",\n                                {\n                                  attrs: { \"no-title\": \"\", scrollable: \"\" },\n                                  model: {\n                                    value: _vm.candidate.date_apply,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.candidate, \"date_apply\", $$v)\n                                    },\n                                    expression: \"candidate.date_apply\"\n                                  }\n                                },\n                                [\n                                  _c(\"v-spacer\"),\n                                  _c(\n                                    \"v-btn\",\n                                    {\n                                      attrs: { flat: \"\", color: \"primary\" },\n                                      on: {\n                                        click: function($event) {\n                                          _vm.dateApply = false\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"Cancel\")]\n                                  ),\n                                  _c(\n                                    \"v-btn\",\n                                    {\n                                      attrs: { flat: \"\", color: \"primary\" },\n                                      on: {\n                                        click: function($event) {\n                                          _vm.$refs.dateApply.save(\n                                            _vm.candidate.date_apply\n                                          )\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"OK\")]\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"v-layout\",\n                    { attrs: { row: \"\", wrap: \"\" } },\n                    [\n                      _c(\n                        \"v-flex\",\n                        { attrs: { xs12: \"\" } },\n                        [\n                          Array.isArray(_vm.employeeAll)\n                            ? _c(\"v-combobox\", {\n                                attrs: {\n                                  name: \"interview_by\",\n                                  items: _vm.employeeAll,\n                                  label: \"Người phỏng vấn\",\n                                  multiple: \"\",\n                                  \"item-value\": \"id\",\n                                  \"item-text\": \"name\",\n                                  chips: \"\",\n                                  clearable: \"\"\n                                },\n                                on: {\n                                  keyup: _vm.searchEmployee,\n                                  input: _vm.checkInput\n                                },\n                                scopedSlots: _vm._u([\n                                  {\n                                    key: \"selection\",\n                                    fn: function(data) {\n                                      return [\n                                        _c(\n                                          \"v-chip\",\n                                          {\n                                            staticClass: \"chip--select-multi\",\n                                            attrs: {\n                                              selected: data.selected,\n                                              close: \"\"\n                                            },\n                                            on: {\n                                              input: function($event) {\n                                                _vm.removeInterview(data.item)\n                                              }\n                                            }\n                                          },\n                                          [\n                                            _c(\"v-list-tile-title\", {\n                                              domProps: {\n                                                innerHTML: _vm._s(\n                                                  data.item.name\n                                                )\n                                              }\n                                            })\n                                          ],\n                                          1\n                                        )\n                                      ]\n                                    }\n                                  }\n                                ]),\n                                model: {\n                                  value: _vm.candidate.interview_by,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.candidate, \"interview_by\", $$v)\n                                  },\n                                  expression: \"candidate.interview_by\"\n                                }\n                              })\n                            : _vm._e()\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\"v-divider\"),\n          _c(\n            \"v-card-actions\",\n            [\n              _c(\"v-spacer\"),\n              _c(\n                \"v-btn\",\n                {\n                  attrs: { tabindex: \"10\", color: \"error\", flat: \"\" },\n                  nativeOn: {\n                    click: function($event) {\n                      _vm.closeDialog(\"Candidate\")\n                    }\n                  }\n                },\n                [_vm._v(\"Hủy bỏ\")]\n              ),\n              _c(\n                \"v-btn\",\n                {\n                  staticClass: \"green--text text-uppercase\",\n                  attrs: { tabindex: \"11\", flat: \"\", type: \"submit\" }\n                },\n                [\n                  _vm.isEditCandidate !== 0\n                    ? _c(\"span\", [_vm._v(\"Lưu lại\")])\n                    : _c(\"span\", [_vm._v(\"Thêm mới\")])\n                ]\n              ),\n              _c(\"div\", {\n                attrs: { tabindex: 12 },\n                on: {\n                  focus: function($event) {\n                    _vm.backTabIndex(\"candidate\")\n                  }\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}