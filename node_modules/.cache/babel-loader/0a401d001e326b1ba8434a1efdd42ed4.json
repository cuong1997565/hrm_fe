{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/department.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/department.js","mtime":1541040965622},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations;\n\nimport { SET_DEPARTMENT, SET_INITIAL_STATE } from '../mutation-types';\nimport { getField, updateField } from 'vuex-map-fields';\n\nvar initState = function initState() {\n  return {\n    department: [],\n    params: {\n      q: '',\n      branch_id: ''\n    }\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  department: initState().department,\n  params: initState().params\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  setDepartment: function setDepartment(_ref, payload) {\n    var commit = _ref.commit;\n\n    var _ref2 = payload || {},\n        department = _ref2.department;\n\n    commit(SET_DEPARTMENT, department);\n  },\n  clearFilter: function clearFilter(_ref3) {\n    var commit = _ref3.commit;\n    commit('resetFilter');\n  },\n  getDepartment: function getDepartment(_ref4, payload) {\n    var commit = _ref4.commit,\n        dispatch = _ref4.dispatch;\n\n    var _ref5 = payload || {},\n        departmentId = _ref5.departmentId,\n        params = _ref5.params,\n        error = _ref5.error;\n\n    dispatch('fetchApi', {\n      url: \"departments/\".concat(departmentId),\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_DEPARTMENT, response.data);\n        console.log('data get department :', response.data);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  fetchDepartment: function fetchDepartment(_ref6, payload) {\n    var commit = _ref6.commit,\n        dispatch = _ref6.dispatch;\n\n    var _ref7 = payload || {},\n        params = _ref7.params,\n        error = _ref7.error;\n\n    dispatch('fetchApi', {\n      url: \"departments?sort=status:-1,id:-1\",\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_DEPARTMENT, response.data);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  getDepartmentForEmployee: function getDepartmentForEmployee(_ref8, payload) {\n    var commit = _ref8.commit,\n        dispatch = _ref8.dispatch;\n    var branchId = payload.branchId,\n        cb = payload.cb;\n    dispatch('fetchApi', {\n      url: \"departments/branches/\".concat(branchId),\n      method: 'GET',\n      success: function success(response) {\n        commit(SET_DEPARTMENT, response.data);\n        cb && cb();\n      }\n    }, {\n      root: true\n    });\n  },\n  createDepartment: function createDepartment(_ref9, payload) {\n    var commit = _ref9.commit,\n        dispatch = _ref9.dispatch;\n    var department = payload.department,\n        cb = payload.cb,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: 'departments',\n      method: 'POST',\n      data: department,\n      params: params,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  updateDepartment: function updateDepartment(_ref10, payload) {\n    var commit = _ref10.commit,\n        dispatch = _ref10.dispatch;\n    var id = payload.id,\n        department = payload.department,\n        cb = payload.cb,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: \"departments/\".concat(id),\n      method: 'PUT',\n      data: department,\n      params: params,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  updateStatusDepartment: function updateStatusDepartment(_ref11, payload) {\n    var commit = _ref11.commit,\n        dispatch = _ref11.dispatch;\n    var id = payload.id,\n        cb = payload.cb,\n        error = payload.error;\n    dispatch('fetchApi', {\n      url: \"departments/change-status/\".concat(id),\n      method: 'PUT',\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  },\n  deleteDepartment: function deleteDepartment(_ref12, payload) {\n    var commit = _ref12.commit,\n        dispatch = _ref12.dispatch;\n\n    var _ref13 = payload || {},\n        id = _ref13.id,\n        cb = _ref13.cb,\n        error = _ref13.error;\n\n    dispatch('fetchApi', {\n      url: \"departments/\".concat(id),\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  }\n};\n/**\n * mutations\n */\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_DEPARTMENT, function (state, department) {\n  state.department = department;\n}), _defineProperty(_mutations, SET_INITIAL_STATE, function (state) {\n  state.department = initState().department;\n  state.params = initState().params;\n}), _defineProperty(_mutations, \"updateField\", updateField), _defineProperty(_mutations, \"resetFilter\", function resetFilter(state) {\n  state.params.q = '';\n  state.params.branch_id = '';\n}), _mutations);\n/**\n * getters\n */\n\nvar getters = {\n  departmentByBranch: function departmentByBranch(state) {\n    return state.department;\n  },\n  departmentDetail: function departmentDetail(state) {\n    return state.department;\n  },\n  filterParams: function filterParams(state) {\n    return state.params;\n  },\n  getField: getField\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/department.js"],"names":["SET_DEPARTMENT","SET_INITIAL_STATE","getField","updateField","initState","department","params","q","branch_id","state","actions","setDepartment","payload","commit","clearFilter","getDepartment","dispatch","departmentId","error","url","method","success","response","data","console","log","root","fetchDepartment","getDepartmentForEmployee","branchId","cb","createDepartment","updateDepartment","id","updateStatusDepartment","deleteDepartment","mutations","getters","departmentByBranch","departmentDetail","filterParams","namespaced"],"mappings":"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","sourcesContent":["import {\n  SET_DEPARTMENT,\n  SET_INITIAL_STATE\n} from '../mutation-types'\nimport { getField, updateField } from 'vuex-map-fields'\nconst initState = () => {\n  return {\n    department: [],\n    params: {\n      q: '',\n      branch_id: ''\n    }\n  }\n}\n\n/**\n * state\n */\nconst state = {\n  department: initState().department,\n  params: initState().params\n}\n\n/**\n * actions\n */\n\nconst actions = {\n  setDepartment ({ commit }, payload) {\n    let { department } = payload || {}\n    commit(SET_DEPARTMENT, department)\n  },\n  clearFilter ({ commit }) {\n    commit('resetFilter')\n  },\n  getDepartment ({ commit, dispatch }, payload) {\n    let { departmentId, params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `departments/${departmentId}`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_DEPARTMENT, response.data)\n          console.log('data get department :', response.data)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  fetchDepartment ({ commit, dispatch }, payload) {\n    let { params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `departments?sort=status:-1,id:-1`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_DEPARTMENT, response.data)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  getDepartmentForEmployee ({ commit, dispatch }, payload) {\n    let { branchId, cb } = payload\n    dispatch(\n      'fetchApi',\n      {\n        url: `departments/branches/${branchId}`,\n        method: 'GET',\n        success: (response) => {\n          commit(SET_DEPARTMENT, response.data)\n          cb && cb()\n        }\n      },\n      { root: true }\n    )\n  },\n\n  createDepartment ({ commit, dispatch }, payload) {\n    let { department, cb, params } = payload\n    dispatch('fetchApi', {\n      url: 'departments',\n      method: 'POST',\n      data: department,\n      params: params,\n      success: cb\n    }, { root: true })\n  },\n  updateDepartment ({ commit, dispatch }, payload) {\n    let { id, department, cb, params } = payload\n    dispatch('fetchApi', {\n      url: `departments/${id}`,\n      method: 'PUT',\n      data: department,\n      params: params,\n      success: cb\n    }, { root: true })\n  },\n  updateStatusDepartment ({ commit, dispatch }, payload) {\n    let { id, cb, error } = payload\n    dispatch('fetchApi', {\n      url: `departments/change-status/${id}`,\n      method: 'PUT',\n      success: cb,\n      error: error\n    }, { root: true })\n  },\n  deleteDepartment ({ commit, dispatch }, payload) {\n    let { id, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `departments/${id}`,\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, { root: true })\n  }\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_DEPARTMENT]: (state, department) => {\n    state.department = department\n  },\n  [SET_INITIAL_STATE]: (state) => {\n    state.department = initState().department\n    state.params = initState().params\n  },\n  updateField,\n  resetFilter (state) {\n    state.params.q = ''\n    state.params.branch_id = ''\n  }\n}\n\n/**\n * getters\n */\n\nconst getters = {\n  departmentByBranch: (state) => state.department,\n  departmentDetail: (state) => state.department,\n  filterParams: (state) => state.params,\n  getField\n\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}