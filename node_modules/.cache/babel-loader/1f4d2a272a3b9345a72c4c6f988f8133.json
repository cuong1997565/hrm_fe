{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/plans/Detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/plans/Detail.vue","mtime":1541476615503},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/typeof\";\nimport _objectSpread from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport listting from './Listting';\nimport DialogConfirm from '@/components/DialogConfirm';\nimport { mapActions, mapGetters } from 'vuex';\nimport { map, filter, debounce } from 'lodash';\nexport default {\n  name: 'PlanDetail',\n  components: {\n    listting: listting,\n    DialogConfirm: DialogConfirm\n  },\n  data: function data() {\n    return {\n      details: {\n        id: '',\n        plan_id: '',\n        branch_id: '',\n        department_id: '',\n        position_id: '',\n        quantity: ''\n      },\n      candidate: {\n        name: '',\n        email: '',\n        phone: '',\n        source: '',\n        date_apply: '',\n        time_interview: '',\n        plan_id: '',\n        position_id: '',\n        status: 0,\n        interview_by: []\n      },\n      interviews: [],\n      departments: [],\n      positions: [],\n      employees: [],\n      dataViewHeight: 0,\n      dateApply: false,\n      // dialog\n      dialogDelete: false,\n      dialogEditDetail: false,\n      dialogCandidate: false,\n      dialogDeleteDetail: false,\n      dialogDeleteCandidate: false,\n      // loading\n      isLoadingBranch: false,\n      isLoadingEmployee: false,\n      isLoadingPositon: false,\n      isPosition: false,\n      dataViewName: 'plan',\n      isEditDetail: 0,\n      isEditCandidate: 0,\n      defaultValues: {},\n      headersPlanDetail: [{\n        text: 'Chi nhánh',\n        align: 'left',\n        sortable: false\n      }, {\n        text: 'Phòng ban',\n        value: 'department_txt',\n        sortable: false\n      }, {\n        text: 'Chức danh',\n        value: 'position_txt',\n        sortable: false\n      }, {\n        text: 'Số lượng',\n        value: 'quantity',\n        sortable: false\n      }, {\n        text: 'Hành động',\n        sortable: false\n      }],\n      headersCandidate: [{\n        text: 'Họ tên',\n        align: 'left',\n        sortable: false\n      }, {\n        text: 'Số điện thoại',\n        value: 'department_txt',\n        sortable: false\n      }, {\n        text: 'Chức danh ứng tuyển',\n        value: 'position_txt',\n        sortable: false\n      }, {\n        text: 'Thời gian phỏng vấn',\n        value: 'quantity',\n        sortable: false\n      }, {\n        text: 'Hành động',\n        sortable: false\n      }],\n      data: [],\n      status: [{\n        'id': 0,\n        'name': 'Mới'\n      }, {\n        'id': 1,\n        'name': 'Chờ kết quả'\n      }, {\n        'id': 2,\n        'name': 'Trượt'\n      }, {\n        'id': 3,\n        'name': 'Đỗ'\n      }, {\n        'id': 4,\n        'name': 'Danh sách đen'\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapGetters('Plan', ['planDetail']), mapGetters('Branch', ['branchAll']), mapGetters('Position', ['positionAll']), mapGetters('Employee', ['employeeAll'])),\n  watch: {\n    dialogEditDetail: function dialogEditDetail(val) {\n      var _this = this;\n\n      if (!val) return;\n      requestAnimationFrame(function () {\n        _this.$refs.firstInputDetail.focus();\n      });\n    },\n    dialogCandidate: function dialogCandidate(val) {\n      var _this2 = this;\n\n      this.positions = map(this.planDetail.details.data, function (item) {\n        return {\n          id: item.position_id,\n          name: item.position_txt\n        };\n      });\n      if (!val) return;\n      requestAnimationFrame(function () {\n        _this2.$refs.firstInputCandidate.focus();\n      });\n    }\n  },\n  methods: _objectSpread({}, mapActions(['setMiniDrawer']), mapActions(['showNotify']), mapActions(['fetchApi']), mapActions('Plan', ['getPlan', 'deletePlan']), mapActions('PlanDetails', ['deletePlanDetail', 'createPlanDetail', 'updatePlanDetail']), mapActions('Dataview', ['removeDataviewEntry', 'updateDataviewEntry']), mapActions('Position', ['fetchPosition', 'setPosition', 'getPosition']), mapActions('Branch', ['getBranchs', 'setBranch']), mapActions('Employee', ['getEmployees', 'setEmployee']), mapActions('Candidate', ['createCandidate', 'updateCandidate', 'deleteCandidate']), {\n    formTitle: function formTitle(type) {\n      if (type === 'detail') {\n        return this.isEditDetail === 0 ? 'Thêm ' : 'Sửa ';\n      } else {\n        return this.isEditCandidate === 0 ? 'Thêm ' : 'Sửa ';\n      }\n    },\n    removeInterview: function removeInterview(item) {\n      console.log('item', item);\n      var index = this.candidate.interview_by.indexOf(item);\n      if (index >= 0) this.candidate.interview_by.splice(index, 1);\n    },\n    // -------Plan------\n    // remove\n    removeConfirm: function removeConfirm() {\n      this.dialogDelete = true;\n    },\n    remove: function remove(confirm) {\n      var _this3 = this;\n\n      if (confirm) {\n        this.deletePlan({\n          id: this.$route.params.id,\n          cb: function cb(response) {\n            _this3.removeDataviewEntry({\n              name: 'plan',\n              data: _this3.planDetail,\n              key: 'id'\n            });\n\n            _this3.$store.dispatch('showNotify', {\n              text: _this3.$t('alert.plan.success_delete'),\n              color: 'success'\n            });\n\n            _this3.dialogDelete = false;\n\n            _this3.$router.push({\n              name: 'plans'\n            });\n          },\n          error: function error(_error) {\n            _this3.callbackError(_error);\n          }\n        });\n      }\n    },\n    // -------End Plan-----\n    // ------Plan Detail-------\n    // edit\n    editDetail: function editDetail(item, id) {\n      var _this4 = this;\n\n      this.$nextTick(function () {\n        return _this4.$validator.reset('details');\n      });\n      this.idDetail = id;\n      this.isEditDetail = 1;\n\n      if (item.department) {\n        this.setBranch({\n          branchs: [item.department.data.branch.data]\n        });\n      }\n\n      this.setPosition({\n        position: [{\n          'id': item.position_id,\n          'name': item.position_txt\n        }]\n      });\n      this.details = Object.assign({}, item);\n\n      if (item.department) {\n        this.details.branch_id = item.department.data.branch_id;\n      }\n\n      this.dialogEditDetail = true;\n    },\n    // end edit\n    // remove\n    removeDetail: function removeDetail(confirm) {\n      var _this5 = this;\n\n      if (confirm) {\n        this.dialogDeleteDetail = false;\n        this.deletePlanDetail({\n          id: this.details.id,\n          cb: function cb(response) {\n            _this5.callbackSubmit(_this5.$t('alert.plan.success_delete_detail'));\n          },\n          error: function error(_error2) {\n            _this5.callbackError(_error2);\n          }\n        });\n      }\n    },\n    removeConfirmDetail: function removeConfirmDetail(idDetail) {\n      this.details.id = idDetail;\n      this.dialogDeleteDetail = true;\n    },\n    // filter\n    searchBranch: debounce(function (value) {\n      var _this6 = this;\n\n      this.isLoadingBranch = true;\n      this.getBranchs({\n        params: {\n          q: value.target.value,\n          limit: 10\n        }\n      });\n\n      if (value.target.value === '') {\n        this.details.department_id = ''; // this.details.branch_id = ''\n      }\n\n      setTimeout(function () {\n        _this6.isLoadingBranch = false;\n      }, 500);\n    }, 500),\n    searchPosition: debounce(function (value) {\n      var _this7 = this;\n\n      this.isLoadingPositon = true;\n      this.fetchPosition({\n        params: {\n          q: value.target.value,\n          limit: 10\n        }\n      });\n      setTimeout(function () {\n        _this7.isLoadingPositon = false;\n      }, 500);\n    }, 500),\n    searchEmployee: debounce(function (value) {\n      var _this8 = this;\n\n      this.isLoadingEmployee = true;\n      this.getEmployees({\n        params: {\n          q: value.target.value,\n          limit: 10\n        }\n      });\n      setTimeout(function () {\n        _this8.isLoadingEmployee = false;\n      }, 500);\n    }, 500),\n    resetBranch: function resetBranch() {\n      this.getBranchs({\n        params: {\n          limit: 10\n        }\n      });\n    },\n    clearBranch: function clearBranch() {\n      this.params.departmentId = null;\n      this.changeSearch();\n    },\n    getDepartmentByBranch: function getDepartmentByBranch(branchId) {\n      var array = [];\n\n      if (this.departments.length) {\n        array = filter(this.departments, function (object) {\n          return parseInt(object.branch_id) === parseInt(branchId);\n        });\n      }\n\n      return array;\n    },\n    // add\n    addPlanDetail: function addPlanDetail() {\n      var _this9 = this;\n\n      this.$nextTick(function () {\n        return _this9.$validator.reset('detail');\n      });\n      this.details = Object.assign({}, this.defaultValues);\n      this.details.plan_id = this.$route.params.id;\n      this.isEditDetail = 0;\n      this.dialogEditDetail = true;\n    },\n    // commom\n    backTabIndex: function backTabIndex(type) {\n      if (type === 'detail') {\n        this.$refs.firstInputDetail.focus();\n      } else {\n        this.$refs.firstInputCandidate.focus();\n      }\n    },\n    closeDialog: function closeDialog(type) {\n      if (type === 'Detail') {\n        this.dialogEditDetail = false;\n      } else {\n        this.dialogCandidate = false;\n      }\n    },\n    submitForm: function submitForm(scope) {\n      var _this10 = this;\n\n      this.$validator.validateAll(scope).then(function (result) {\n        if (result) {\n          _this10.dialogEditDetail = false;\n\n          if (_this10.isEditDetail === 0) {\n            _this10.createPlanDetail({\n              planDetail: _this10.details,\n              cb: function cb(response) {\n                _this10.callbackSubmit(_this10.$t('alert.plan.success_create_detail'));\n              }\n            });\n          } else {\n            _this10.updatePlanDetail({\n              id: _this10.idDetail,\n              planDetail: _this10.details,\n              cb: function cb(response) {\n                _this10.callbackSubmit(_this10.$t('alert.plan.success_edit_detail'));\n              }\n            });\n          }\n        }\n      });\n    },\n    // -----End Plan Detail------\n    // -----Candidate-------\n    changeInterview: function changeInterview(value) {\n      console.log('value', value);\n      this.candidate.interview_by.push(value.id);\n    },\n    save: function save(date) {\n      this.$refs.dateApply.save(date);\n    },\n    dateCandidate: function dateCandidate() {\n      var today = new Date();\n      var dd = this.formatTime(today.getDate());\n      var mm = this.formatTime(today.getMonth() + 1);\n      var yyyy = today.getFullYear();\n      today = yyyy + '-' + mm + '-' + dd;\n      this.candidate.date_apply = today;\n    },\n    addCandidate: function addCandidate(item) {\n      var _this11 = this;\n\n      this.dialogCandidate = true;\n      this.isPosition = false;\n      this.$nextTick(function () {\n        return _this11.$validator.reset('candidate');\n      });\n      this.candidate = Object.assign({}, this.defaultValues);\n\n      if (item) {\n        this.isPosition = true;\n        this.setPosition({\n          position: [{\n            'id': item.position_id,\n            'name': item.position_txt\n          }]\n        });\n        this.candidate.position_id = item.position_id;\n      }\n\n      this.candidate.plan_id = this.$route.params.id;\n      this.candidate.status = 0;\n      this.dateCandidate();\n      this.isEditCandidate = 0;\n    },\n    formatTime: function formatTime(type) {\n      if (type < 10) {\n        return '0' + type;\n      } else {\n        return type;\n      }\n    },\n    formatDate: function formatDate(d) {\n      // format neu < 10 thi them 0 dang truoc\n      var mm = this.formatTime(d.getMonth() + 1);\n      var dd = this.formatTime(d.getDate());\n      var hour = this.formatTime(d.getHours());\n      var minute = this.formatTime(d.getMinutes());\n      var second = this.formatTime(d.getSeconds());\n      var dateFormat = [d.getFullYear(), mm, dd].join('-') + ' ' + [hour, minute, second].join(':');\n      this.candidate.time_interview = dateFormat;\n    },\n    callbackSubmit: function callbackSubmit(textSuccess) {\n      var _this12 = this;\n\n      setTimeout(function () {\n        _this12.candidate = Object.assign({}, _this12.defaultValues);\n      }, 300);\n      this.showNotify({\n        color: 'success',\n        text: textSuccess\n      });\n      this.getPlan({\n        planId: this.$route.params.id,\n        params: {\n          include: 'details.department.branch,candidates.employees'\n        },\n        cb: function cb(response) {\n          _this12.updateDataviewEntry({\n            name: 'plan',\n            data: response,\n            key: 'id'\n          });\n        }\n      });\n    },\n    callbackError: function callbackError(error) {\n      if (error.status === 404) {\n        this.$store.dispatch('showNotify', {\n          text: this.$t('alert.not-found'),\n          color: 'warning'\n        });\n      }\n    },\n    submitFormCandidate: function submitFormCandidate(scope) {\n      var _this13 = this;\n\n      this.$validator.validateAll(scope).then(function (result) {\n        if (result) {\n          _this13.dialogCandidate = false;\n\n          var data = _objectSpread({}, _this13.candidate);\n\n          if (data.interview_by) {\n            data.interview_by = map(data.interview_by, 'id');\n          }\n\n          if (_this13.isEditCandidate === 0) {\n            if (_this13.candidate.time_interview) {\n              _this13.formatDate(_this13.candidate.time_interview);\n            }\n\n            _this13.createCandidate({\n              candidate: data,\n              cb: function cb(response) {\n                _this13.callbackSubmit(_this13.$t('alert.plan.success_create_candidate'));\n              }\n            });\n          } else {\n            _this13.updateCandidate({\n              id: _this13.idCandidate,\n              candidate: data,\n              cb: function cb(response) {\n                _this13.callbackSubmit(_this13.$t('alert.plan.success_edit_candidate'));\n              }\n            });\n          }\n        }\n      });\n    },\n    removeConfirmCandidate: function removeConfirmCandidate(id) {\n      this.candidate.id = id;\n      this.dialogDeleteCandidate = true;\n    },\n    removeCandidate: function removeCandidate(confirm) {\n      var _this14 = this;\n\n      if (confirm) {\n        this.deleteCandidate({\n          id: this.candidate.id,\n          cb: function cb(response) {\n            _this14.dialogDeleteCandidate = false;\n\n            _this14.callbackSubmit(_this14.$t('alert.plan.success_delete_candidate'));\n          },\n          error: function error(_error3) {\n            _this14.callbackError(_error3);\n          }\n        });\n      }\n    },\n    editCadidate: function editCadidate(item, id) {\n      var _this15 = this;\n\n      this.$nextTick(function () {\n        return _this15.$validator.reset('candidate');\n      });\n      this.employees = [];\n      this.isPosition = false;\n      this.idCandidate = id;\n      this.isEditCandidate = 1;\n      this.setPosition({\n        position: [{\n          'id': item.position_id,\n          'name': item.position_txt\n        }]\n      });\n\n      if (item.employees) {\n        this.setEmployee({\n          employees: item.employees.data\n        });\n      }\n\n      this.candidate = Object.assign({}, item);\n      this.candidate.interview_by = item.employees.data;\n      this.dialogCandidate = true;\n    },\n    checkInput: function checkInput(val) {\n      if (val.length) {\n        for (var i = 0; i < val.length; i++) {\n          if (_typeof(val[i]) !== 'object') {\n            val.splice(i, 1);\n          }\n        }\n      }\n    }\n  }),\n  created: function created() {\n    this.setMiniDrawer(true);\n  },\n  mounted: function mounted() {\n    var _this16 = this;\n\n    this.dataViewHeight = this.$refs.laylout.clientHeight - 44;\n\n    if (!this.branchAll.length) {\n      this.getBranchs({\n        params: {\n          limit: 10\n        }\n      });\n    }\n\n    if (!this.positionAll.length) {\n      this.fetchPosition({\n        params: {\n          limit: 10\n        }\n      });\n    }\n\n    if (!this.employeeAll.length) {\n      this.getEmployees({\n        params: {\n          limit: 10\n        }\n      });\n    }\n\n    if (!this.planDetail.id) {\n      this.getPlan({\n        planId: this.$route.params.id,\n        params: {\n          include: 'details.department.branch,candidates.employees'\n        }\n      });\n    } // get department\n\n\n    this.fetchApi({\n      url: 'departments',\n      method: 'GET',\n      params: {\n        limit: -1\n      },\n      success: function success(response) {\n        _this16.departments = response.data;\n      }\n    });\n  }\n};",{"version":3,"sources":["Detail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-layout ref=\"laylout\" row fill-height>\n    <v-flex xs4>\n      <listting type=\"detail\" :is-mini=\"true\"></listting>\n    </v-flex>\n    <v-flex xs8 class=\"border-e0-left\">\n      <v-toolbar dense color=\"white\" flat>\n        <v-toolbar-title>{{planDetail.title}}</v-toolbar-title>\n        <v-spacer></v-spacer>\n\n        <v-btn v-if=\"canAccess('plan.update')\" icon\n               @click=\"$router.push({name: 'plan-edit', params: {id: $route.params.id}})\">\n          <v-icon class=\"theme--light teal--text\">edit</v-icon>\n        </v-btn>\n        <v-btn v-if=\"canAccess('plan.delete')\" icon @click=\"removeConfirm()\">\n          <v-icon class=\"theme--light pink--text\">delete</v-icon>\n        </v-btn>\n        <v-btn icon @click=\"$router.push({name: 'plans'})\">\n          <v-icon>close</v-icon>\n        </v-btn>\n      </v-toolbar>\n\n      <v-container fluid id=\"\" class=\"white scroll-y border-e0-top\" style=\"font-size:16px\"\n                   :style=\"{height: dataViewHeight + 'px'}\">\n        <v-layout>\n\n          <v-flex xs2 style=\"font-weight: 500\">\n            <p>Tên kế hoạch</p>\n            <p>Ngày bắt đầu</p>\n            <p>Ngày kết thúc</p>\n            <p>Trạng thái</p>\n            <p>Nội dung</p>\n          </v-flex>\n          <v-flex xs9>\n            <p>{{ planDetail.title }}</p>\n            <p>{{ planDetail.date_start }}</p>\n            <p>{{ planDetail.date_end }}</p>\n            <p>{{ planDetail.status_txt }}</p>\n            <p><span v-html=\"planDetail.content\"></span></p>\n          </v-flex>\n        </v-layout>\n        <h3>Chi tiết kế hoạch\n          <v-tooltip bottom>\n            <v-btn slot=\"activator\" v-if=\"canAccess('plan.create')\"\n                   class=\"mr-5\" icon color=\"primary\"\n                   @click=\"addPlanDetail\">\n              <v-icon>add\n              </v-icon\n              >\n            </v-btn>\n            <span>Thêm hợp đồng</span>\n          </v-tooltip>\n        </h3>\n        <v-layout class=\"mt-3\">\n          <v-flex xs12 v-if=\"planDetail.details\">\n            <v-data-table\n              :headers=\"headersPlanDetail\"\n              :items=\"planDetail.details.data\"\n              hide-actions\n              class=\"elevation-1\"\n            >\n              <template slot=\"items\" slot-scope=\"props\">\n                <td v-if=\"props.item.department\">{{ props.item.department.data.branch_name }}</td>\n                <td>{{ props.item.department_txt }}</td>\n                <td>{{ props.item.position_txt }}</td>\n                <td class=\"text-center\">{{ props.item.quantity }}</td>\n                <td colspan=\"2\" style=\"width:100px\">\n                  <v-tooltip bottom>\n                    <v-btn style=\"margin-right: -20px;margin-left: -10px\" slot='activator'\n                           v-if=\"canAccess('plan.update')\" icon\n                           @click=\"editDetail(props.item,props.item.id)\">\n                      <v-icon size=\"19px\" class='theme--light teal--text'>edit</v-icon>\n                    </v-btn>\n                    <span>Sửa</span>\n                  </v-tooltip>\n\n                  <v-tooltip bottom>\n                    <v-btn style=\"margin-right: -20px\" slot=\"activator\" v-if=\"canAccess('plan.delete')\" icon\n                           @click=\"removeConfirmDetail(props.item.id)\">\n                      <v-icon size=\"19px\" class=\"theme--light pink--text\">delete</v-icon>\n                    </v-btn>\n                    <span>Xóa</span>\n                  </v-tooltip>\n                  <v-tooltip bottom>\n                    <v-btn style=\"margin-right: -20px;\" slot=\"activator\" icon @click.stop=\"addCandidate(props.item)\">\n                      <v-icon color=\"orange\" size=\"15px\">fa-user-plus</v-icon>\n                    </v-btn>\n                    <span> Tạo hồ sơ ứng viên </span>\n                  </v-tooltip>\n                </td>\n              </template>\n            </v-data-table>\n          </v-flex>\n        </v-layout>\n        <h3 class=\"mt-4\">Hồ sơ ứng viên\n          <v-tooltip bottom>\n            <v-btn slot=\"activator\" v-if=\"canAccess('plan.create')\"\n                   class=\"mr-5\" icon color=\"primary\"\n                   @click=\"addCandidate()\">\n              <v-icon>add\n              </v-icon\n              >\n            </v-btn>\n            <span>Thêm hồ sơ ứng viên</span>\n          </v-tooltip>\n        </h3>\n        <v-layout class=\"mt-3\">\n          <v-flex xs12 v-if=\"planDetail.candidates\">\n            <v-data-table\n              :headers=\"headersCandidate\"\n              :items=\"planDetail.candidates.data\"\n              hide-actions\n              class=\"elevation-1\"\n            >\n              <template slot=\"items\" slot-scope=\"props\">\n                <td>{{ props.item.name }}</td>\n                <td>{{ props.item.phone }}</td>\n                <td>{{ props.item.position_txt }}</td>\n                <td>{{ props.item.time_interview_format }}</td>\n                <td colspan=\"2\" style=\"padding:2px;\">\n                  <v-tooltip bottom class=\"ml-3\">\n                    <v-btn style=\"margin:0px;\" slot='activator' v-if=\"canAccess('plan.update')\" icon\n                           @click=\"editCadidate(props.item,props.item.id)\">\n                      <v-icon size=\"19px\" class='theme--light teal--text'>edit</v-icon>\n                    </v-btn>\n                    <span>Sửa</span>\n                  </v-tooltip>\n                  <v-tooltip bottom>\n                    <v-btn style=\"margin: 0px;\" slot=\"activator\" v-if=\"canAccess('plan.delete')\" icon\n                           @click=\"removeConfirmCandidate(props.item.id)\">\n                      <v-icon size=\"19px\" class=\"theme--light pink--text\">delete</v-icon>\n                    </v-btn>\n                    <span>Xóa</span>\n                  </v-tooltip>\n\n                </td>\n              </template>\n            </v-data-table>\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-flex>\n\n    <!-- dialog details -->\n    <v-dialog v-model=\"dialogEditDetail\" max-width=\"800px\">\n      <v-form @submit.prevent=\"submitForm('detail')\" data-vv-scope=\"detail\" class=\"pa-0\">\n        <v-card class=\"pa-0\">\n          <v-card-title class=\"pt-3\">\n            <span class=\"headline\" width=\"100%\" style=\"margin:0 auto\">{{ formTitle('detail') }} vị trí tuyển dụng</span>\n          </v-card-title>\n          <v-divider></v-divider>\n          <!-- form edit -->\n          <v-card-text id=\"formSub\" class=\"pt-0\">\n            <v-container grid-list-md style=\"padding-bottom: 0px\" class=\"white\">\n              <v-layout row wrap>\n\n                <v-flex xs6>\n                  <p class=\"lb\">Chi nhánh</p>\n                  <v-tooltip bottom>\n                    <v-autocomplete\n                      tabindex=\"1\"\n                      ref=\"firstInputDetail\"\n                      :loading=\"isLoadingBranch\"\n                      v-validate=\"'required'\"\n                      slot=\"activator\"\n                      v-model=\"details.branch_id\"\n                      :items=\"branchAll\"\n                      @keyup=\"searchBranch\"\n                      item-text=\"name\"\n                      item-value=\"id\"\n                      :error-messages=\"errors.has('detail.branch') ? errors.first('detail.branch') : []\"\n                      :data-vv-as=\"$t('label.name_branch')\"\n                      name=\"branch\"\n                      data-vv-scope=\"detail\"\n                      placeholder=\"Chi nhánh\"\n                      single-line\n                    >\n                      <template slot=\"no-data\">\n                        <v-list-tile>\n                          <v-list-tile-title style=\"color:blue\">\n                            Không tìm thấy chi nhánh\n                          </v-list-tile-title>\n                        </v-list-tile>\n                      </template>\n                    </v-autocomplete>\n                    <span>Chọn chi nhánh</span>\n                  </v-tooltip>\n                </v-flex>\n\n                <v-flex xs6>\n                  <p class=\"lb\">Phòng ban</p>\n                  <v-select\n                    tabindex=\"2\"\n                    slot=\"activator\"\n                    v-validate=\"'required'\"\n                    :disabled=\"!details.branch_id\"\n                    v-model=\"details.department_id\"\n                    :items=\"getDepartmentByBranch(details.branch_id)\"\n                    label=\"Phòng ban\"\n                    :error-messages=\"errors.has('detail.department_id') ? errors.first('detail.department_id') : []\"\n                    :data-vv-as=\"$t('label.name_department')\"\n                    name=\"department_id\"\n                    item-text=\"name\"\n                    item-value=\"id\"\n                    data-vv-scope=\"detail\"\n                    placeholder=\"Phòng ban\"\n                    single-line\n                  >\n                    <template slot=\"no-data\">\n                      <v-list-tile>\n                        <v-list-tile-title style=\"color:blue\">\n                          Không tìm thấy phòng ban\n                        </v-list-tile-title>\n                      </v-list-tile>\n                    </template>\n                  </v-select>\n                </v-flex>\n\n                <v-flex xs6>\n                  <p class=\"lb\" style=\"margin-top: 0px !important\">Chức danh</p>\n                  <v-tooltip bottom>\n                    <v-autocomplete\n                      tabindex=\"3\"\n                      :loading=\"isLoadingPositon\"\n                      v-validate=\"'required'\"\n                      slot=\"activator\"\n                      v-model=\"details.position_id\"\n                      label=\"Chức danh\"\n                      :items=\"positionAll\"\n                      @keyup=\"searchPosition\"\n                      item-text=\"name\"\n                      item-value=\"id\"\n                      :error-messages=\"errors.has('detail.position') ? errors.first('detail.position') : []\"\n                      :data-vv-as=\"$t('label.name_position')\"\n                      name=\"position\"\n                      data-vv-scope=\"detail\"\n                      placeholder=\"Chức danh\"\n                      single-line\n                    >\n                      <template slot=\"no-data\">\n                        <v-list-tile>\n                          <v-list-tile-title style=\"color:blue\">\n                            Không tìm thấy chức danh\n                          </v-list-tile-title>\n                        </v-list-tile>\n                      </template>\n                    </v-autocomplete>\n                    <span>Chọn chức danh</span>\n                  </v-tooltip>\n                </v-flex>\n\n                <v-flex xs2>\n                  <p class=\"lb\" style=\"margin-top: 0px !important\">Số lượng</p>\n                  <v-text-field\n                    class=\"pt-0\"\n                    tabindex=\"4\"\n                    style=\"margin-top:12px\"\n                    :error-messages=\"errors.has('detail.quantity') ? errors.first('detail.quantity') : []\"\n                    v-validate=\"'required|numeric|min_value:1'\"\n                    :data-vv-as=\"$t('label.quantity')\"\n                    name=\"quantity\"\n                    v-model=\"details.quantity\"\n                    type=\"number\"\n                    data-vv-scope=\"detail\"\n                    placeholder=\"Số lượng\">\n                  </v-text-field>\n                </v-flex>\n              </v-layout>\n            </v-container>\n          </v-card-text>\n          <!-- end form edit -->\n          <v-divider></v-divider>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn tabindex=\"5\" color=\"error\" flat @click.native=\"closeDialog('Detail')\">Hủy bỏ</v-btn>\n            <v-btn tabindex=\"6\" class=\"green--text text-uppercase\" flat type=\"submit\"><span v-if=\"isEditDetail!==0\">Lưu lại</span><span\n              v-else>Thêm mới</span></v-btn>\n            <div :tabindex=\"7\" @focus=\"backTabIndex('detail')\"></div>\n          </v-card-actions>\n        </v-card>\n      </v-form>\n    </v-dialog>\n    <!-- dialog canidate -->\n    <v-dialog v-model=\"dialogCandidate\" max-width=\"800px\">\n      <v-form @submit.prevent=\"submitFormCandidate('candidate')\" class=\"pa-0\" data-vv-scope=\"candidate\">\n        <v-card class=\"pa-0\">\n          <v-card-title class=\"pt-3\">\n            <span class=\"headline\" width=\"100%\" style=\"margin:0 auto\">{{ formTitle('a') }} hồ sơ ứng viên</span>\n          </v-card-title>\n          <v-divider></v-divider>\n          <!-- form edit -->\n          <v-card-text class=\"pt-0\">\n            <v-container fluid grid-list-md style=\"padding-top: 0px !important;padding-bottom: 0px !important;\"\n                         class=\"white scroll-y border-e0-top\">\n\n              <v-layout row wrap>\n                <v-flex xs6>\n                  <v-text-field\n                    ref=\"firstInputCandidate\"\n                    tabindex=\"1\"\n                    :error-messages=\"errors.has('candidate.name') ? errors.first('candidate.name') : []\"\n                    v-validate=\"'required|min:3'\"\n                    :data-vv-as=\"$t('label.name')\"\n                    name=\"name\"\n                    placeholder=\"Họ tên\"\n                    :label=\"$t('label.name')\"\n                    class=\"input-required\"\n                    autofocus=\"autofocus\"\n                    data-vv-scope=\"candidate\"\n                    v-model=\"candidate.name\">\n                  </v-text-field>\n\n                  <v-text-field\n                    tabindex=\"3\"\n                    :error-messages=\"errors.has('candidate.phone') ? errors.first('candidate.phone') : []\"\n                    v-validate=\"'numeric|min:10|max:12'\"\n                    :data-vv-as=\"$t('label.phone')\"\n                    name=\"phone\"\n                    data-vv-scope=\"candidate\"\n                    placeholder=\"Số điện thoại\"\n                    :label=\"$t('label.phone')\"\n                    v-model=\"candidate.phone\">\n                  </v-text-field>\n\n                </v-flex>\n\n                <v-flex xs6>\n                  <v-text-field\n                    tabindex=\"2\"\n                    :error-messages=\"errors.has('candidate.email') ? errors.first('candidate.email') : []\"\n                    v-validate=\"'required|min:3'\"\n                    :data-vv-as=\"$t('label.email')\"\n                    placeholder=\"example@gmail.com\"\n                    name=\"email\"\n                    :label=\"$t('label.email')\"\n                    class=\"input-required\"\n                    data-vv-scope=\"candidate\"\n                    v-model=\"candidate.email\">\n                  </v-text-field>\n\n                  <v-text-field\n                    tabindex=\"4\"\n                    :error-messages=\"errors.has('candidate.source') ? errors.first('candidate.source') : []\"\n                    v-validate=\"'url:require_protocol'\"\n                    :data-vv-as=\"$t('label.source')\"\n                    data-vv-scope=\"candidate\"\n                    name=\"source\"\n                    placeholder=\"Chọn source\"\n                    :label=\"$t('label.source')\"\n                    v-model=\"candidate.source\">\n                  </v-text-field>\n\n                </v-flex>\n              </v-layout>\n\n              <v-layout row wrap style=\"margin-top:-15px\">\n                <v-flex xs6>\n                  <p class=\"lb\">Chức danh</p>\n                  <v-tooltip bottom>\n                    <v-autocomplete\n                      tabindex=\"5\"\n                      slot=\"activator\"\n                      label=\"Chức danh\"\n                      :loading=\"isLoadingPositon\"\n                      v-validate=\"'required'\"\n                      data-vv-scope=\"candidate\"\n                      @keyup=\"searchPosition\"\n                      v-model=\"candidate.position_id\"\n                      :items=\"positions\"\n                      item-text=\"name\"\n                      class=\"input-required\"\n                      :disabled=\"isPosition\"\n                      item-value=\"id\"\n                      :data-vv-as=\"$t('label.name_position')\"\n                      :error-messages=\"errors.has('candidate.position') ? errors.first('candidate.position') : []\"\n                      :name=\"'candidate.position'\"\n                      placeholder=\"Chức danh\"\n                      single-line>\n                      <template slot=\"no-data\">\n                        <v-list-tile>\n                          <v-list-tile-title style=\"color:blue\">\n                            Không tìm thấy chức danh\n                          </v-list-tile-title>\n                        </v-list-tile>\n                      </template>\n                    </v-autocomplete>\n                    <span>Chọn chức danh</span>\n                  </v-tooltip>\n                  <v-datetime-picker\n                    label=\"Thời gian phỏng vấn\"\n                    placeholder=\"Chọn thời gian phỏng vấn\"\n                    v-model=\"candidate.time_interview\">\n                  </v-datetime-picker>\n                </v-flex>\n\n                <v-flex xs6>\n                  <v-select\n                    tabindex=\"6\"\n                    :items=\"status\"\n                    v-model=\"candidate.status\"\n                    data-vv-scope=\"candidate\"\n                    item-text=\"name\"\n                    item-value=\"id\"\n                    name=\"status\"\n                    :label=\"$t('label.status')\"\n                  ></v-select>\n\n                  <v-menu\n                    ref=\"dateApply\"\n                    :close-on-content-click=\"false\"\n                    v-model=\"dateApply\"\n                    :nudge-right=\"40\"\n                    :return-value.sync=\"candidate.date_apply\"\n                    lazy\n                    transition=\"scale-transition\"\n                    offset-y\n                    full-width\n                    min-width=\"290px\"\n                  >\n                    <v-text-field\n                      slot=\"activator\"\n                      tabindex=\"8\"\n                      v-model=\"candidate.date_apply\"\n                      label=\"Chọn ngày nộp đơn\"\n                      readonly\n                    ></v-text-field>\n                    <v-date-picker v-model=\"candidate.date_apply\" no-title scrollable>\n                      <v-spacer></v-spacer>\n                      <v-btn flat color=\"primary\" @click=\"dateApply = false\">Cancel</v-btn>\n                      <v-btn flat color=\"primary\" @click=\"$refs.dateApply.save(candidate.date_apply)\">OK</v-btn>\n                    </v-date-picker>\n                  </v-menu>\n                </v-flex>\n\n              </v-layout>\n              <v-layout row wrap style=\"margin-top:-15px\">\n                <v-flex xs12>\n                    <v-combobox\n                      name=\"interview_by\"\n                      v-model=\"candidate.interview_by\"\n                      v-if=\"Array.isArray(employeeAll)\"\n                      :items=\"employeeAll\"\n                      @keyup=\"searchEmployee\"\n                      label=\"Người phỏng vấn\"\n                      multiple\n                      item-value=\"id\"\n                      item-text=\"name\"\n                      chips\n                      @input=\"checkInput\"\n                      clearable\n                    >\n                      <template\n                        slot=\"selection\"\n                        slot-scope=\"data\"\n                      >\n                        <v-chip\n                          :selected=\"data.selected\"\n                          close\n                          class=\"chip--select-multi\"\n                          @input=\"removeInterview(data.item)\"\n                        >\n                          <v-list-tile-title v-html=\"data.item.name\"></v-list-tile-title>\n                        </v-chip>\n                      </template>\n\n                    </v-combobox>\n                  </v-flex>\n              </v-layout>\n            </v-container>\n          </v-card-text>\n          <!-- end form edit -->\n          <v-divider></v-divider>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn tabindex=\"10\" color=\"error\" flat @click.native=\"closeDialog('Candidate')\">Hủy bỏ</v-btn>\n            <v-btn tabindex=\"11\" class=\"green--text text-uppercase\" flat type=\"submit\"><span v-if=\"isEditCandidate!==0\">Lưu lại</span><span\n              v-else>Thêm mới</span></v-btn>\n            <div :tabindex=\"12\" @focus=\"backTabIndex('candidate')\"></div>\n          </v-card-actions>\n        </v-card>\n      </v-form>\n    </v-dialog>\n\n    <dialog-confirm v-model=\"dialogDelete\" @input=\"remove\"/>\n    <dialog-confirm v-model=\"dialogDeleteDetail\" @input=\"removeDetail\"/>\n    <dialog-confirm v-model=\"dialogDeleteCandidate\" @input=\"removeCandidate\"/>\n  </v-layout>\n</template>\n<script>\nimport listting from './Listting'\nimport DialogConfirm from '@/components/DialogConfirm'\nimport { mapActions, mapGetters } from 'vuex'\nimport { map, filter, debounce } from 'lodash'\nexport default {\n  name: 'PlanDetail',\n  components: {\n    listting,\n    DialogConfirm\n  },\n  data () {\n    return {\n      details: {\n        id: '',\n        plan_id: '',\n        branch_id: '',\n        department_id: '',\n        position_id: '',\n        quantity: ''\n      },\n      candidate: {\n        name: '',\n        email: '',\n        phone: '',\n        source: '',\n        date_apply: '',\n        time_interview: '',\n        plan_id: '',\n        position_id: '',\n        status: 0,\n        interview_by: []\n      },\n      interviews: [],\n      departments: [],\n      positions: [],\n      employees: [],\n      dataViewHeight: 0,\n      dateApply: false,\n      // dialog\n      dialogDelete: false,\n      dialogEditDetail: false,\n      dialogCandidate: false,\n      dialogDeleteDetail: false,\n      dialogDeleteCandidate: false,\n      // loading\n      isLoadingBranch: false,\n      isLoadingEmployee: false,\n      isLoadingPositon: false,\n      isPosition: false,\n      dataViewName: 'plan',\n      isEditDetail: 0,\n      isEditCandidate: 0,\n      defaultValues: {},\n      headersPlanDetail: [\n        {\n          text: 'Chi nhánh',\n          align: 'left',\n          sortable: false\n        },\n        { text: 'Phòng ban', value: 'department_txt', sortable: false },\n        { text: 'Chức danh', value: 'position_txt', sortable: false },\n        { text: 'Số lượng', value: 'quantity', sortable: false },\n        { text: 'Hành động', sortable: false }\n      ],\n      headersCandidate: [\n        {\n          text: 'Họ tên',\n          align: 'left',\n          sortable: false\n        },\n        { text: 'Số điện thoại', value: 'department_txt', sortable: false },\n        { text: 'Chức danh ứng tuyển', value: 'position_txt', sortable: false },\n        { text: 'Thời gian phỏng vấn', value: 'quantity', sortable: false },\n        { text: 'Hành động', sortable: false }\n      ],\n      data: [],\n      status: [\n        { 'id': 0, 'name': 'Mới' },\n        { 'id': 1, 'name': 'Chờ kết quả' },\n        { 'id': 2, 'name': 'Trượt' },\n        { 'id': 3, 'name': 'Đỗ' },\n        { 'id': 4, 'name': 'Danh sách đen' }\n      ]\n    }\n  },\n  computed: {\n    ...mapGetters('Plan', ['planDetail']),\n    ...mapGetters('Branch', ['branchAll']),\n    ...mapGetters('Position', ['positionAll']),\n    ...mapGetters('Employee', ['employeeAll'])\n  },\n  watch: {\n    dialogEditDetail (val) {\n      if (!val) return\n      requestAnimationFrame(() => {\n        this.$refs.firstInputDetail.focus()\n      })\n    },\n    dialogCandidate (val) {\n      this.positions = map(this.planDetail.details.data, function (item) {\n        return {\n          id: item.position_id,\n          name: item.position_txt\n        }\n      })\n      if (!val) return\n      requestAnimationFrame(() => {\n        this.$refs.firstInputCandidate.focus()\n      })\n    }\n  },\n  methods: {\n    ...mapActions(['setMiniDrawer']),\n    ...mapActions(['showNotify']),\n    ...mapActions(['fetchApi']),\n    ...mapActions('Plan', ['getPlan', 'deletePlan']),\n    ...mapActions('PlanDetails', ['deletePlanDetail', 'createPlanDetail', 'updatePlanDetail']),\n    ...mapActions('Dataview', ['removeDataviewEntry', 'updateDataviewEntry']),\n    ...mapActions('Position', ['fetchPosition', 'setPosition', 'getPosition']),\n    ...mapActions('Branch', ['getBranchs', 'setBranch']),\n    ...mapActions('Employee', ['getEmployees', 'setEmployee']),\n    ...mapActions('Candidate', ['createCandidate', 'updateCandidate', 'deleteCandidate']),\n    formTitle (type) {\n      if (type === 'detail') {\n        return this.isEditDetail === 0 ? 'Thêm ' : 'Sửa '\n      } else {\n        return this.isEditCandidate === 0 ? 'Thêm ' : 'Sửa '\n      }\n    },\n    removeInterview (item) {\n      console.log('item', item)\n      const index = this.candidate.interview_by.indexOf(item)\n      if (index >= 0) this.candidate.interview_by.splice(index, 1)\n    },\n    // -------Plan------\n    // remove\n    removeConfirm () {\n      this.dialogDelete = true\n    },\n    remove (confirm) {\n      if (confirm) {\n        this.deletePlan({\n          id: this.$route.params.id,\n          cb: (response) => {\n            this.removeDataviewEntry({\n              name: 'plan',\n              data: this.planDetail,\n              key: 'id'\n            })\n            this.$store.dispatch('showNotify', {\n              text: this.$t('alert.plan.success_delete'),\n              color: 'success'\n            })\n            this.dialogDelete = false\n            this.$router.push({ name: 'plans' })\n          },\n          error: (error) => {\n            this.callbackError(error)\n          }\n        })\n      }\n    },\n    // -------End Plan-----\n    // ------Plan Detail-------\n    // edit\n    editDetail (item, id) {\n      this.$nextTick(() => this.$validator.reset('details'))\n      this.idDetail = id\n      this.isEditDetail = 1\n      if (item.department) {\n        this.setBranch({ branchs: [item.department.data.branch.data] })\n      }\n      this.setPosition({\n        position: [\n          {\n            'id': item.position_id,\n            'name': item.position_txt\n          }\n        ]\n      })\n      this.details = Object.assign({}, item)\n      if (item.department) {\n        this.details.branch_id = item.department.data.branch_id\n      }\n      this.dialogEditDetail = true\n    },\n    // end edit\n    // remove\n    removeDetail (confirm) {\n      if (confirm) {\n        this.dialogDeleteDetail = false\n        this.deletePlanDetail({\n          id: this.details.id,\n          cb: (response) => {\n            this.callbackSubmit(this.$t('alert.plan.success_delete_detail'))\n          },\n          error: (error) => {\n            this.callbackError(error)\n          }\n        })\n      }\n    },\n    removeConfirmDetail (idDetail) {\n      this.details.id = idDetail\n      this.dialogDeleteDetail = true\n    },\n    // filter\n    searchBranch: debounce(function (value) {\n      this.isLoadingBranch = true\n      this.getBranchs({ params: { q: value.target.value, limit: 10 } })\n      if (value.target.value === '') {\n        this.details.department_id = ''\n        // this.details.branch_id = ''\n      }\n      setTimeout(() => {\n        this.isLoadingBranch = false\n      }, 500)\n    }, 500),\n    searchPosition: debounce(function (value) {\n      this.isLoadingPositon = true\n      this.fetchPosition({ params: { q: value.target.value, limit: 10 } })\n      setTimeout(() => {\n        this.isLoadingPositon = false\n      }, 500)\n    }, 500),\n    searchEmployee: debounce(function (value) {\n      this.isLoadingEmployee = true\n      this.getEmployees({ params: { q: value.target.value, limit: 10 } })\n      setTimeout(() => {\n        this.isLoadingEmployee = false\n      }, 500)\n    }, 500),\n    resetBranch () {\n      this.getBranchs({ params: { limit: 10 } })\n    },\n    clearBranch () {\n      this.params.departmentId = null\n      this.changeSearch()\n    },\n    getDepartmentByBranch (branchId) {\n      let array = []\n      if (this.departments.length) {\n        array = filter(this.departments, function (object) {\n          return parseInt(object.branch_id) === parseInt(branchId)\n        })\n      }\n      return array\n    },\n    // add\n    addPlanDetail () {\n      this.$nextTick(() => this.$validator.reset('detail'))\n      this.details = Object.assign({}, this.defaultValues)\n      this.details.plan_id = this.$route.params.id\n      this.isEditDetail = 0\n      this.dialogEditDetail = true\n    },\n    // commom\n    backTabIndex (type) {\n      if (type === 'detail') {\n        this.$refs.firstInputDetail.focus()\n      } else {\n        this.$refs.firstInputCandidate.focus()\n      }\n    },\n    closeDialog (type) {\n      if (type === 'Detail') {\n        this.dialogEditDetail = false\n      } else {\n        this.dialogCandidate = false\n      }\n    },\n    submitForm (scope) {\n      this.$validator.validateAll(scope).then(result => {\n        if (result) {\n          this.dialogEditDetail = false\n          if (this.isEditDetail === 0) {\n            this.createPlanDetail({\n              planDetail: this.details,\n              cb: (response) => {\n                this.callbackSubmit(this.$t('alert.plan.success_create_detail'))\n              }\n            })\n          } else {\n            this.updatePlanDetail({\n              id: this.idDetail,\n              planDetail: this.details,\n              cb: (response) => {\n                this.callbackSubmit(this.$t('alert.plan.success_edit_detail'))\n              }\n            })\n          }\n        }\n      })\n    },\n    // -----End Plan Detail------\n    // -----Candidate-------\n    changeInterview (value) {\n      console.log('value', value)\n      this.candidate.interview_by.push(value.id)\n    },\n    save (date) {\n      this.$refs.dateApply.save(date)\n    },\n    dateCandidate () {\n      let today = new Date()\n      let dd = this.formatTime(today.getDate())\n      let mm = this.formatTime(today.getMonth() + 1)\n      let yyyy = today.getFullYear()\n      today = yyyy + '-' + mm + '-' + dd\n      this.candidate.date_apply = today\n    },\n    addCandidate (item) {\n      this.dialogCandidate = true\n      this.isPosition = false\n      this.$nextTick(() => this.$validator.reset('candidate'))\n      this.candidate = Object.assign({}, this.defaultValues)\n      if (item) {\n        this.isPosition = true\n        this.setPosition({\n          position: [\n            {\n              'id': item.position_id,\n              'name': item.position_txt\n            }\n          ]\n        })\n        this.candidate.position_id = item.position_id\n      }\n      this.candidate.plan_id = this.$route.params.id\n      this.candidate.status = 0\n      this.dateCandidate()\n      this.isEditCandidate = 0\n    },\n    formatTime (type) {\n      if (type < 10) {\n        return '0' + type\n      } else {\n        return type\n      }\n    },\n    formatDate (d) {\n      // format neu < 10 thi them 0 dang truoc\n      let mm = this.formatTime(d.getMonth() + 1)\n      let dd = this.formatTime(d.getDate())\n      let hour = this.formatTime(d.getHours())\n      let minute = this.formatTime(d.getMinutes())\n      let second = this.formatTime(d.getSeconds())\n      let dateFormat = [d.getFullYear(), mm, dd].join('-') + ' ' +\n          [hour, minute, second].join(':')\n      this.candidate.time_interview = dateFormat\n    },\n    callbackSubmit (textSuccess) {\n      setTimeout(() => {\n        this.candidate = Object.assign({}, this.defaultValues)\n      }, 300)\n      this.showNotify({\n        color: 'success',\n        text: textSuccess\n      })\n      this.getPlan({\n        planId: this.$route.params.id,\n        params: { include: 'details.department.branch,candidates.employees' },\n        cb: (response) => {\n          this.updateDataviewEntry({\n            name: 'plan',\n            data: response,\n            key: 'id'\n          })\n        }\n      })\n    },\n    callbackError (error) {\n      if (error.status === 404) {\n        this.$store.dispatch('showNotify', {\n          text: this.$t('alert.not-found'),\n          color: 'warning'\n        })\n      }\n    },\n    submitFormCandidate (scope) {\n      this.$validator.validateAll(scope).then(result => {\n        if (result) {\n          this.dialogCandidate = false\n          let data = { ...this.candidate }\n          if (data.interview_by) {\n            data.interview_by = map(data.interview_by, 'id')\n          }\n          if (this.isEditCandidate === 0) {\n            if (this.candidate.time_interview) {\n              this.formatDate(this.candidate.time_interview)\n            }\n            this.createCandidate({\n              candidate: data,\n              cb: (response) => {\n                this.callbackSubmit(this.$t('alert.plan.success_create_candidate'))\n              }\n            })\n          } else {\n            this.updateCandidate({\n              id: this.idCandidate,\n              candidate: data,\n              cb: (response) => {\n                this.callbackSubmit(this.$t('alert.plan.success_edit_candidate'))\n              }\n            })\n          }\n        }\n      })\n    },\n    removeConfirmCandidate (id) {\n      this.candidate.id = id\n      this.dialogDeleteCandidate = true\n    },\n    removeCandidate (confirm) {\n      if (confirm) {\n        this.deleteCandidate({\n          id: this.candidate.id,\n          cb: (response) => {\n            this.dialogDeleteCandidate = false\n            this.callbackSubmit(this.$t('alert.plan.success_delete_candidate'))\n          },\n          error: (error) => {\n            this.callbackError(error)\n          }\n        })\n      }\n    },\n    editCadidate (item, id) {\n      this.$nextTick(() => this.$validator.reset('candidate'))\n      this.employees = []\n      this.isPosition = false\n      this.idCandidate = id\n      this.isEditCandidate = 1\n      this.setPosition({\n        position: [\n          {\n            'id': item.position_id,\n            'name': item.position_txt\n          }\n        ]\n      })\n      if (item.employees) {\n        this.setEmployee({ employees: item.employees.data })\n      }\n      this.candidate = Object.assign({}, item)\n      this.candidate.interview_by = item.employees.data\n      this.dialogCandidate = true\n    },\n    checkInput (val) {\n      if (val.length) {\n        for (let i = 0; i < val.length; i++) {\n          if (typeof val[i] !== 'object') {\n            val.splice(i, 1)\n          }\n        }\n      }\n    }\n  },\n  created () {\n    this.setMiniDrawer(true)\n  },\n  mounted () {\n    this.dataViewHeight = this.$refs.laylout.clientHeight - 44\n    if (!this.branchAll.length) {\n      this.getBranchs({ params: { limit: 10 } })\n    }\n    if (!this.positionAll.length) {\n      this.fetchPosition({ params: { limit: 10 } })\n    }\n    if (!this.employeeAll.length) {\n      this.getEmployees({ params: { limit: 10 } })\n    }\n    if (!this.planDetail.id) {\n      this.getPlan({\n        planId: this.$route.params.id,\n        params: { include: 'details.department.branch,candidates.employees' }\n      })\n    }\n    // get department\n    this.fetchApi({\n      url: 'departments',\n      method: 'GET',\n      params: {\n        limit: -1\n      },\n      success: (response) => {\n        this.departments = response.data\n      }\n    })\n  }\n}\n</script>\n\n<style scoped>\n  .scroll-y {\n    height: 360px;\n    overflow-y: scroll;\n  }\n  th {\n    color: black !important;\n  }\n  .lb {\n    margin-top: 17px;\n    margin-bottom: -12px;\n    color: #67757c;\n    height: 20px;\n    line-height: 20px;\n    max-width: 90%;\n    overflow: hidden;\n    pointer-events: none;\n    text-overflow: ellipsis;\n    top: 6px;\n    transform-origin: top left;\n    white-space: nowrap;\n    font-size: 16px;\n    line-height: 1;\n    cursor: pointer;\n  }\n</style>\n"],"sourceRoot":"src/views/plans"}]}