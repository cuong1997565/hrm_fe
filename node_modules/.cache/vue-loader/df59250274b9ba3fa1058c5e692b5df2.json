{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/interview/Listting.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/interview/Listting.vue","mtime":1541128830776},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbody, html, #app, #dayspan {\n  font-family: Roboto, sans-serif !important;\n  width: 100%;\n  height: 100%;\n}\n\n.v-btn--flat,\n.v-text-field--solo .v-input__slot {\n  background-color: #f5f5f5 !important;\n  margin-bottom: 8px !important;\n}\n.v-content .ds-expand{\n  padding: 0px !important;\n}\n.v-input.v-text-field .v-label{\n  -webkit-transform: none !important;\n  transform: none !important;\n}\n.v-textarea.v-text-field--box.v-text-field--single-line .v-label, .v-textarea.v-text-field--enclosed.v-text-field--single-line .v-label{\n    top: 5px;\n}\n\n",{"version":3,"sources":["Listting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Listting.vue","sourceRoot":"src/views/interview","sourcesContent":["<template>\n  <v-app id=\"dayspan\" v-cloak>\n\n    <ds-calendar-app ref=\"app\"\n      :calendar=\"calendar\"\n      :read-only=\"readOnly\"\n      @change=\"saveState\">\n\n      <template slot=\"title\">\n        DaySpan\n      </template>\n\n      <template slot=\"menuRight\">\n        <v-btn icon large href=\"https://github.com/ClickerMonkey/dayspan-vuetify\" target=\"_blank\">\n          <v-avatar size=\"32px\" tile>\n            <img src=\"https://simpleicons.org/icons/github.svg\" alt=\"Github\">\n          </v-avatar>\n        </v-btn>\n      </template>\n\n      <template slot=\"eventPopover\" slot-scope=\"slotData\">\n         <ds-calendar-event-popover\n          v-bind=\"slotData\"\n          :read-only=\"readOnly\"\n          @finish=\"saveState\"\n        ></ds-calendar-event-popover>\n      </template>\n\n      <template slot=\"eventCreatePopover\" slot-scope=\"{placeholder, calendar, close}\">\n        <ds-calendar-event-create-popover\n          :calendar-event=\"placeholder\"\n          :calendar=\"calendar\"\n          :close=\"$refs.app.$refs.calendar.clearPlaceholder\"\n          @create-edit=\"$refs.app.editPlaceholder\"\n          @create-popover-closed=\"saveState\"\n        ></ds-calendar-event-create-popover>\n      </template>\n\n      <template slot=\"eventTimeTitle\" slot-scope=\"{calendarEvent, details}\">\n        <div>\n          <v-icon class=\"ds-ev-icon\"\n            v-if=\"details.icon\"\n            size=\"14\"\n            :style=\"{color: details.forecolor}\">\n            {{ details.icon }}\n          </v-icon>\n          <strong class=\"ds-ev-title\">{{ details.title }}</strong>\n        </div>\n        <div class=\"ds-ev-description\">{{ getCalendarTime( calendarEvent ) }}</div>\n      </template>\n\n      <template slot=\"drawerBottom\">\n        <div class=\"pa-3\">\n          <v-checkbox\n            label=\"Read Only?\"\n            v-model=\"readOnly\"\n          ></v-checkbox>\n        </div>\n      </template>\n\n    </ds-calendar-app>\n\n  </v-app>\n</template>\n\n<script>\nimport { Calendar, Weekday, Month } from 'dayspan'\nimport Vue from 'vue'\n\nexport default {\n\n  name: 'app',\n\n  data: () => ({\n    storeKey: 'dayspanState',\n    calendar: Calendar.months(),\n    readOnly: false,\n    defaultEvents: [\n      {\n        data: {\n          title: 'Weekly Meeting',\n          color: '#3F51B5'\n        },\n        schedule: {\n          dayOfWeek: [Weekday.MONDAY],\n          times: [9],\n          duration: 30,\n          durationUnit: 'minutes'\n        }\n      },\n      {\n        data: {\n          title: 'First Weekend',\n          color: '#4CAF50'\n        },\n        schedule: {\n          weekspanOfMonth: [0],\n          dayOfWeek: [Weekday.FRIDAY],\n          duration: 3,\n          durationUnit: 'days'\n        }\n      },\n      {\n        data: {\n          title: 'End of Month',\n          color: '#000000'\n        },\n        schedule: {\n          lastDayOfMonth: [1],\n          duration: 1,\n          durationUnit: 'hours'\n        }\n      },\n      {\n        data: {\n          title: 'Mother\\'s Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.MAY],\n          dayOfWeek: [Weekday.SUNDAY],\n          weekspanOfMonth: [1]\n        }\n      },\n      {\n        data: {\n          title: 'New Year\\'s Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.JANUARY],\n          dayOfMonth: [1]\n        }\n      },\n      {\n        data: {\n          title: 'Inauguration Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.JANUARY],\n          dayOfMonth: [20]\n        }\n      },\n      {\n        data: {\n          title: 'Martin Luther King, Jr. Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.JANUARY],\n          dayOfWeek: [Weekday.MONDAY],\n          weekspanOfMonth: [2]\n        }\n      },\n      {\n        data: {\n          title: 'George Washington\\'s Birthday',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.FEBRUARY],\n          dayOfWeek: [Weekday.MONDAY],\n          weekspanOfMonth: [2]\n        }\n      },\n      {\n        data: {\n          title: 'Memorial Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.MAY],\n          dayOfWeek: [Weekday.MONDAY],\n          lastWeekspanOfMonth: [0]\n        }\n      },\n      {\n        data: {\n          title: 'Independence Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.JULY],\n          dayOfMonth: [4]\n        }\n      },\n      {\n        data: {\n          title: 'Labor Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.SEPTEMBER],\n          dayOfWeek: [Weekday.MONDAY],\n          lastWeekspanOfMonth: [0]\n        }\n      },\n      {\n        data: {\n          title: 'Columbus Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.OCTOBER],\n          dayOfWeek: [Weekday.MONDAY],\n          weekspanOfMonth: [1]\n        }\n      },\n      {\n        data: {\n          title: 'Veterans Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.NOVEMBER],\n          dayOfMonth: [11]\n        }\n      },\n      {\n        data: {\n          title: 'Thanksgiving Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.NOVEMBER],\n          dayOfWeek: [Weekday.THURSDAY],\n          weekspanOfMonth: [3]\n        }\n      },\n      {\n        data: {\n          title: 'Christmas Day',\n          color: '#2196F3',\n          calendar: 'US Holidays'\n        },\n        schedule: {\n          month: [Month.DECEMBER],\n          dayOfMonth: [25]\n        }\n      }\n    ]\n  }),\n\n  mounted () {\n    window.app = this.$refs.app\n\n    this.loadState()\n  },\n\n  methods:\n  {\n    getCalendarTime (calendarEvent) {\n      let sa = calendarEvent.start.format('a')\n      let ea = calendarEvent.end.format('a')\n      let sh = calendarEvent.start.format('h')\n      let eh = calendarEvent.end.format('h')\n\n      if (calendarEvent.start.minute !== 0) {\n        sh += calendarEvent.start.format(':mm')\n      }\n\n      if (calendarEvent.end.minute !== 0) {\n        eh += calendarEvent.end.format(':mm')\n      }\n\n      return (sa === ea) ? (sh + ' - ' + eh + ea) : (sh + sa + ' - ' + eh + ea)\n    },\n\n    saveState () {\n      let state = this.calendar.toInput(true)\n      let json = JSON.stringify(state)\n\n      localStorage.setItem(this.storeKey, json)\n    },\n\n    loadState () {\n      let state = {}\n\n      try {\n        let savedState = JSON.parse(localStorage.getItem(this.storeKey))\n\n        if (savedState) {\n          state = savedState\n          state.preferToday = false\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log( e );\n      }\n\n      if (!state.events || !state.events.length) {\n        state.events = this.defaultEvents\n      }\n\n      state.events.forEach(ev => {\n        let defaults = this.$dayspan.getDefaultEventDetails()\n\n        ev.data = Vue.util.extend(defaults, ev.data)\n      })\n\n      this.$refs.app.setState(state)\n    }\n  }\n}\n</script>\n\n<style>\n\nbody, html, #app, #dayspan {\n  font-family: Roboto, sans-serif !important;\n  width: 100%;\n  height: 100%;\n}\n\n.v-btn--flat,\n.v-text-field--solo .v-input__slot {\n  background-color: #f5f5f5 !important;\n  margin-bottom: 8px !important;\n}\n.v-content .ds-expand{\n  padding: 0px !important;\n}\n.v-input.v-text-field .v-label{\n  -webkit-transform: none !important;\n  transform: none !important;\n}\n.v-textarea.v-text-field--box.v-text-field--single-line .v-label, .v-textarea.v-text-field--enclosed.v-text-field--single-line .v-label{\n    top: 5px;\n}\n\n</style>\n"]}]}