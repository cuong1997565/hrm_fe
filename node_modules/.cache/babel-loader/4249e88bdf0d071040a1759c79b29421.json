{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/position.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/position.js","mtime":1538377839382},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1534394480737},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":1534394476611},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":1534394478618}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport { SET_POSITION } from '../mutation-types';\n\nvar initState = function initState() {\n  return {\n    position: {}\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  position: initState().position\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  setPosition: function setPosition(_ref, payload) {\n    var commit = _ref.commit;\n\n    var _ref2 = payload || {},\n        position = _ref2.position;\n\n    commit(SET_POSITION, position);\n  },\n  fetchPosition: function fetchPosition(_ref3, payload) {\n    var commit = _ref3.commit,\n        dispatch = _ref3.dispatch;\n\n    var _ref4 = payload || {},\n        params = _ref4.params,\n        error = _ref4.error;\n\n    dispatch('fetchApi', {\n      url: \"positions\",\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_POSITION, response.data);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  getPosition: function getPosition(_ref5, payload) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n\n    var _ref6 = payload || {},\n        positionId = _ref6.positionId,\n        params = _ref6.params,\n        error = _ref6.error;\n\n    dispatch('fetchApi', {\n      url: \"positions/\".concat(positionId),\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_POSITION, response.data);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  createPosition: function createPosition(_ref7, payload) {\n    var commit = _ref7.commit,\n        dispatch = _ref7.dispatch;\n\n    var _ref8 = payload || {},\n        position = _ref8.position,\n        cb = _ref8.cb;\n\n    dispatch('fetchApi', {\n      url: 'positions',\n      method: 'POST',\n      data: position,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  updatePosition: function updatePosition(_ref9, payload) {\n    var commit = _ref9.commit,\n        dispatch = _ref9.dispatch;\n\n    var _ref10 = payload || {},\n        id = _ref10.id,\n        position = _ref10.position,\n        cb = _ref10.cb,\n        error = _ref10.error;\n\n    dispatch('fetchApi', {\n      url: \"positions/\".concat(id),\n      method: 'PUT',\n      data: position,\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  },\n  deletePosition: function deletePosition(_ref11, payload) {\n    var commit = _ref11.commit,\n        dispatch = _ref11.dispatch;\n\n    var _ref12 = payload || {},\n        id = _ref12.id,\n        cb = _ref12.cb,\n        error = _ref12.error;\n\n    dispatch('fetchApi', {\n      url: \"positions/\".concat(id),\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  }\n};\n/**\n * mutations\n */\n\nvar mutations = _defineProperty({}, SET_POSITION, function (state, position) {\n  state.position = position;\n});\n/**\n * getters\n */\n\n\nvar getters = {\n  positionDetail: function positionDetail(state) {\n    return state.position;\n  },\n  positionAll: function positionAll(state) {\n    return state.position;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["src/store/modules/position.js"],"names":["SET_POSITION","initState","position","state","actions","setPosition","payload","commit","fetchPosition","dispatch","params","error","url","method","success","response","data","root","getPosition","positionId","createPosition","cb","updatePosition","id","deletePosition","mutations","getters","positionDetail","positionAll","namespaced"],"mappings":"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","sourceRoot":"/home/nguyenxuancuong/Sites/hrm_fe","sourcesContent":["import {\n  SET_POSITION\n} from '../mutation-types'\n\nconst initState = () => {\n  return {\n    position: {}\n  }\n}\n\n/**\n * state\n */\nconst state = {\n  position: initState().position\n}\n\n/**\n * actions\n */\nconst actions = {\n  setPosition ({ commit }, payload) {\n    let { position } = payload || {}\n    commit(SET_POSITION, position)\n  },\n  fetchPosition ({ commit, dispatch }, payload) {\n    let { params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `positions`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_POSITION, response.data)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  getPosition ({ commit, dispatch }, payload) {\n    let { positionId, params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `positions/${positionId}`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_POSITION, response.data)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  createPosition ({ commit, dispatch }, payload) {\n    let { position, cb } = payload || {}\n    dispatch('fetchApi', {\n      url: 'positions',\n      method: 'POST',\n      data: position,\n      success: cb\n    }, { root: true })\n  },\n  updatePosition ({ commit, dispatch }, payload) {\n    let { id, position, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `positions/${id}`,\n      method: 'PUT',\n      data: position,\n      success: cb,\n      error: error\n    }, { root: true })\n  },\n  deletePosition ({ commit, dispatch }, payload) {\n    let { id, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `positions/${id}`,\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, { root: true })\n  }\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_POSITION]: (state, position) => {\n    state.position = position\n  }\n}\n\n/**\n * getters\n */\nconst getters = {\n  positionDetail: (state) => state.position,\n  positionAll: (state) => state.position\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}