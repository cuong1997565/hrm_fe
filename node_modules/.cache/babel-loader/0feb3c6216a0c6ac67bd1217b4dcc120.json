{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/auth.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/auth.js","mtime":1538377839382},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1534394480737},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":1534394476611},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":1534394478618}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport _objectSpread from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n\nvar _mutations;\n\nimport ls from 'local-storage';\nimport { SET_LOGGED, SET_PROFILE, SET_INITIAL_STATE } from '../mutation-types';\nimport { forEach } from 'lodash';\n\nvar initState = function initState() {\n  return {\n    logged: false,\n    profile: {}\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  logged: initState().logged,\n  profile: initState().profile\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  checkLogged: function checkLogged(_ref, payload) {\n    var commit = _ref.commit;\n    var auth = ls('auth') || {};\n    commit(SET_LOGGED, !!auth.access_token);\n  },\n  setLogged: function setLogged(_ref2, payload) {\n    var commit = _ref2.commit;\n    payload = payload || {};\n    ls('auth', payload);\n    commit(SET_LOGGED, !!payload.token);\n  },\n  clearLogged: function clearLogged(_ref3, payload) {\n    var commit = _ref3.commit,\n        dispatch = _ref3.dispatch;\n    ls.remove('auth');\n    commit(SET_LOGGED, false);\n    dispatch('resetState', {\n      root: true\n    });\n  },\n  getProfile: function getProfile(_ref4, payload) {\n    var commit = _ref4.commit,\n        dispatch = _ref4.dispatch;\n\n    var _ref5 = payload || {},\n        params = _ref5.params;\n\n    dispatch('fetchApi', {\n      url: 'profile',\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_PROFILE, response.data);\n\n        if (response.data.setting) {\n          dispatch('Setting/setSetting', {\n            settings: response.data.setting.data\n          });\n        }\n\n        if (response.data.roles) {\n          var permissions = {};\n          forEach(response.data.roles.data, function (role) {\n            permissions = _objectSpread({}, permissions, role.permissions);\n          });\n          dispatch('setPermissons', {\n            permissions: permissions\n          });\n        }\n      }\n    }, {\n      root: true\n    });\n  }\n};\n/**\n * mutations\n */\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_LOGGED, function (state, logged) {\n  state.logged = logged;\n}), _defineProperty(_mutations, SET_PROFILE, function (state, profile) {\n  state.profile = profile;\n}), _defineProperty(_mutations, SET_INITIAL_STATE, function (state) {\n  state.logged = initState().logged;\n  state.profile = initState().profile;\n}), _mutations);\n/**\n * getters\n */\n\nvar getters = {\n  isLogged: function isLogged(state) {\n    return state.logged;\n  },\n  userProfile: function userProfile(state) {\n    return state.profile;\n  }\n};\nexport default {\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["src/store/modules/auth.js"],"names":["ls","SET_LOGGED","SET_PROFILE","SET_INITIAL_STATE","forEach","initState","logged","profile","state","actions","checkLogged","payload","commit","auth","access_token","setLogged","token","clearLogged","dispatch","remove","root","getProfile","params","url","method","success","response","data","setting","settings","roles","permissions","role","mutations","getters","isLogged","userProfile"],"mappings":";;;;;AAAA,OAAOA,EAAP,MAAe,eAAf;AACA,SACEC,UADF,EAEEC,WAFF,EAGEC,iBAHF,QAIO,mBAJP;AAKA,SAASC,OAAT,QAAwB,QAAxB;;AAEA,IAAMC,YAAY,SAAZA,SAAY,GAAM;AACtB,SAAO;AACLC,YAAQ,KADH;AAELC,aAAS;AAFJ,GAAP;AAID,CALD;AAOA;;;;;AAGA,IAAMC,QAAQ;AACZF,UAAQD,YAAYC,MADR;AAEZC,WAASF,YAAYE;AAGvB;;;;AALc,CAAd;AAQA,IAAME,UAAU;AACdC,aADc,6BACWC,OADX,EACoB;AAAA,QAAnBC,MAAmB,QAAnBA,MAAmB;AAChC,QAAIC,OAAOb,GAAG,MAAH,KAAc,EAAzB;AACAY,WAAOX,UAAP,EAAmB,CAAC,CAACY,KAAKC,YAA1B;AACD,GAJa;AAKdC,WALc,4BAKSJ,OALT,EAKkB;AAAA,QAAnBC,MAAmB,SAAnBA,MAAmB;AAC9BD,cAAUA,WAAW,EAArB;AACAX,OAAG,MAAH,EAAWW,OAAX;AACAC,WAAOX,UAAP,EAAmB,CAAC,CAACU,QAAQK,KAA7B;AACD,GATa;AAUdC,aAVc,8BAUqBN,OAVrB,EAU8B;AAAA,QAA7BC,MAA6B,SAA7BA,MAA6B;AAAA,QAArBM,QAAqB,SAArBA,QAAqB;AAC1ClB,OAAGmB,MAAH,CAAU,MAAV;AACAP,WAAOX,UAAP,EAAmB,KAAnB;AACAiB,aAAS,YAAT,EAAuB;AAAEE,YAAM;AAAR,KAAvB;AACD,GAda;AAedC,YAfc,6BAeoBV,OAfpB,EAe6B;AAAA,QAA7BC,MAA6B,SAA7BA,MAA6B;AAAA,QAArBM,QAAqB,SAArBA,QAAqB;;AAAA,gBACxBP,WAAW,EADa;AAAA,QACnCW,MADmC,SACnCA,MADmC;;AAEzCJ,aACE,UADF,EAEE;AACEK,WAAK,SADP;AAEEC,cAAQ,KAFV;AAGEF,cAAQA,UAAU,EAHpB;AAIEG,eAAS,iBAACC,QAAD,EAAc;AACrBd,eAAOV,WAAP,EAAoBwB,SAASC,IAA7B;;AACA,YAAID,SAASC,IAAT,CAAcC,OAAlB,EAA2B;AACzBV,mBAAS,oBAAT,EAA+B;AAAEW,sBAAUH,SAASC,IAAT,CAAcC,OAAd,CAAsBD;AAAlC,WAA/B;AACD;;AACD,YAAID,SAASC,IAAT,CAAcG,KAAlB,EAAyB;AACvB,cAAIC,cAAc,EAAlB;AACA3B,kBAAQsB,SAASC,IAAT,CAAcG,KAAd,CAAoBH,IAA5B,EAAkC,UAACK,IAAD,EAAU;AAC1CD,4CAAmBA,WAAnB,EAAmCC,KAAKD,WAAxC;AACD,WAFD;AAGAb,mBAAS,eAAT,EAA0B;AAAEa;AAAF,WAA1B;AACD;AACF;AAhBH,KAFF,EAoBE;AAAEX,YAAM;AAAR,KApBF;AAsBD;AAvCa,CAAhB;AA0CA;;;;AAGA,IAAMa,0DACHhC,UADG,EACU,UAACO,KAAD,EAAQF,MAAR,EAAmB;AAC/BE,QAAMF,MAAN,GAAeA,MAAf;AACD,CAHG,+BAIHJ,WAJG,EAIW,UAACM,KAAD,EAAQD,OAAR,EAAoB;AACjCC,QAAMD,OAAN,GAAgBA,OAAhB;AACD,CANG,+BAOHJ,iBAPG,EAOiB,UAACK,KAAD,EAAW;AAC9BA,QAAMF,MAAN,GAAeD,YAAYC,MAA3B;AACAE,QAAMD,OAAN,GAAgBF,YAAYE,OAA5B;AACD,CAVG,cAAN;AAaA;;;;AAGA,IAAM2B,UAAU;AACdC,YAAU,kBAAC3B,KAAD;AAAA,WAAWA,MAAMF,MAAjB;AAAA,GADI;AAEd8B,eAAa,qBAAC5B,KAAD;AAAA,WAAWA,MAAMD,OAAjB;AAAA;AAFC,CAAhB;AAKA,eAAe;AACbC,cADa;AAEbC,kBAFa;AAGbwB,sBAHa;AAIbC;AAJa,CAAf","sourceRoot":"/home/nguyenxuancuong/Sites/hrm_fe","sourcesContent":["import ls from 'local-storage'\nimport {\n  SET_LOGGED,\n  SET_PROFILE,\n  SET_INITIAL_STATE\n} from '../mutation-types'\nimport { forEach } from 'lodash'\n\nconst initState = () => {\n  return {\n    logged: false,\n    profile: {}\n  }\n}\n\n/**\n * state\n */\nconst state = {\n  logged: initState().logged,\n  profile: initState().profile\n}\n\n/**\n * actions\n */\nconst actions = {\n  checkLogged ({ commit }, payload) {\n    let auth = ls('auth') || {}\n    commit(SET_LOGGED, !!auth.access_token)\n  },\n  setLogged ({ commit }, payload) {\n    payload = payload || {}\n    ls('auth', payload)\n    commit(SET_LOGGED, !!payload.token)\n  },\n  clearLogged ({ commit, dispatch }, payload) {\n    ls.remove('auth')\n    commit(SET_LOGGED, false)\n    dispatch('resetState', { root: true })\n  },\n  getProfile ({ commit, dispatch }, payload) {\n    let { params } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: 'profile',\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_PROFILE, response.data)\n          if (response.data.setting) {\n            dispatch('Setting/setSetting', { settings: response.data.setting.data })\n          }\n          if (response.data.roles) {\n            let permissions = {}\n            forEach(response.data.roles.data, (role) => {\n              permissions = { ...permissions, ...role.permissions }\n            })\n            dispatch('setPermissons', { permissions })\n          }\n        }\n      },\n      { root: true }\n    )\n  }\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_LOGGED]: (state, logged) => {\n    state.logged = logged\n  },\n  [SET_PROFILE]: (state, profile) => {\n    state.profile = profile\n  },\n  [SET_INITIAL_STATE]: (state) => {\n    state.logged = initState().logged\n    state.profile = initState().profile\n  }\n}\n\n/**\n * getters\n */\nconst getters = {\n  isLogged: (state) => state.logged,\n  userProfile: (state) => state.profile\n}\n\nexport default {\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}