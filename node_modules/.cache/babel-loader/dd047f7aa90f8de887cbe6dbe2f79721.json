{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/dataview.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/dataview.js","mtime":1543466081017},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport _objectSpread from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n\nvar _mutations;\n\nimport { SET_DATA_VIEW, UPDATE_DATA_VIEW_ENTRY, REMOVE_DATA_VIEW_ENTRY, SET_INITIAL_STATE } from '../mutation-types';\nimport { get, set, findIndex, unset, uniqBy } from 'lodash';\nvar DEFAULT_PAGINATION = {\n  current_page: null,\n  total_pages: null,\n  total: null,\n  count: null,\n  per_page: null\n};\nvar DEFAULT_MODULE_DATA = {\n  data: [],\n  pagination: _objectSpread({}, DEFAULT_PAGINATION),\n  lastScrollPos: 0\n};\n\nvar initState = function initState() {\n  return {\n    dataViews: {\n      user: _objectSpread({}, DEFAULT_MODULE_DATA),\n      employee: _objectSpread({}, DEFAULT_MODULE_DATA),\n      city: _objectSpread({}, DEFAULT_MODULE_DATA),\n      position: _objectSpread({}, DEFAULT_MODULE_DATA),\n      department: _objectSpread({}, DEFAULT_MODULE_DATA),\n      setting: _objectSpread({}, DEFAULT_MODULE_DATA),\n      plan: _objectSpread({}, DEFAULT_MODULE_DATA),\n      branch: _objectSpread({}, DEFAULT_MODULE_DATA),\n      candidate: _objectSpread({}, DEFAULT_MODULE_DATA),\n      contract: _objectSpread({}, DEFAULT_MODULE_DATA) // planDetail: { ...DEFAULT_MODULE_DATA }\n\n    }\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  dataViews: initState().dataViews\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  setDataview: function setDataview(_ref, payload) {\n    var commit = _ref.commit;\n    commit(SET_DATA_VIEW, payload);\n  },\n  initDataview: function initDataview(_ref2, payload) {\n    var dispatch = _ref2.dispatch,\n        state = _ref2.state;\n    payload.name && !state.dataViews[payload.name] && dispatch('setDataview', {\n      name: payload.name,\n      data: [],\n      pagination: _objectSpread({}, DEFAULT_PAGINATION),\n      lastScrollPos: 0\n    });\n  },\n  reloadDataview: function reloadDataview(_ref3, payload) {\n    var dispatch = _ref3.dispatch;\n    payload.name && dispatch('setDataview', {\n      name: payload.name,\n      data: [],\n      pagination: _objectSpread({}, DEFAULT_PAGINATION),\n      lastScrollPos: 0\n    });\n  },\n  updateDataviewEntry: function updateDataviewEntry(_ref4, payload) {\n    var commit = _ref4.commit;\n    commit(UPDATE_DATA_VIEW_ENTRY, payload);\n  },\n  removeDataviewEntry: function removeDataviewEntry(_ref5, payload) {\n    var commit = _ref5.commit;\n    commit(REMOVE_DATA_VIEW_ENTRY, payload);\n  }\n};\n/**\n * mutations\n */\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_DATA_VIEW, function (state, payload) {\n  var name = payload.name,\n      data = payload.data,\n      pagination = payload.pagination,\n      lastScrollPos = payload.lastScrollPos,\n      uniqueKey = payload.uniqueKey;\n  uniqueKey = uniqueKey || 'id';\n  data && set(state.dataViews, \"\".concat(name, \".data\"), uniqBy(data, uniqueKey));\n  pagination && set(state.dataViews, \"\".concat(name, \".pagination\"), pagination);\n  Number.isInteger(lastScrollPos) && set(state.dataViews, \"\".concat(name, \".lastScrollPos\"), lastScrollPos);\n}), _defineProperty(_mutations, UPDATE_DATA_VIEW_ENTRY, function (state, payload) {\n  var name = payload.name,\n      data = payload.data,\n      key = payload.key;\n  var index = findIndex(get(state.dataViews, \"\".concat(name, \".data\")), _defineProperty({}, key, data[key]));\n  index !== -1 && !!data && set(state.dataViews, \"\".concat(name, \".data[\").concat(index, \"]\"), data);\n  state.dataViews[name]['data'] = Object.values(Object.assign({}, state.dataViews[name]['data']));\n}), _defineProperty(_mutations, REMOVE_DATA_VIEW_ENTRY, function (state, payload) {\n  var name = payload.name,\n      data = payload.data,\n      key = payload.key;\n  var index = findIndex(get(state.dataViews, \"\".concat(name, \".data\")), _defineProperty({}, key, data[key]));\n  index !== -1 && !!data && unset(state.dataViews, \"\".concat(name, \".data[\").concat(index, \"]\"));\n  state.dataViews[name]['data'] = Object.values(Object.assign({}, state.dataViews[name]['data']));\n}), _defineProperty(_mutations, SET_INITIAL_STATE, function (state) {\n  state.dataViews = initState().dataViews;\n}), _mutations);\n/**\n * getters\n */\n\nvar getters = {\n  dataViews: function dataViews(state) {\n    return function (name) {\n      return get(state.dataViews, name, {\n        data: [],\n        pagination: _objectSpread({}, DEFAULT_PAGINATION),\n        lastScrollPos: 0\n      });\n    };\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/dataview.js"],"names":["SET_DATA_VIEW","UPDATE_DATA_VIEW_ENTRY","REMOVE_DATA_VIEW_ENTRY","SET_INITIAL_STATE","get","set","findIndex","unset","uniqBy","DEFAULT_PAGINATION","current_page","total_pages","total","count","per_page","DEFAULT_MODULE_DATA","data","pagination","lastScrollPos","initState","dataViews","user","employee","city","position","department","setting","plan","branch","candidate","contract","state","actions","setDataview","payload","commit","initDataview","dispatch","name","reloadDataview","updateDataviewEntry","removeDataviewEntry","mutations","uniqueKey","Number","isInteger","key","index","Object","values","assign","getters","namespaced"],"mappings":";;;;;AAAA,SACEA,aADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,iBAJF,QAKO,mBALP;AAMA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,KAA9B,EAAqCC,MAArC,QAAmD,QAAnD;AAEA,IAAMC,qBAAqB;AAAEC,gBAAc,IAAhB;AAAsBC,eAAa,IAAnC;AAAyCC,SAAO,IAAhD;AAAsDC,SAAO,IAA7D;AAAmEC,YAAU;AAA7E,CAA3B;AACA,IAAMC,sBAAsB;AAC1BC,QAAM,EADoB;AAE1BC,gCAAiBR,kBAAjB,CAF0B;AAG1BS,iBAAe;AAHW,CAA5B;;AAMA,IAAMC,YAAY,SAAZA,SAAY,GAAM;AACtB,SAAO;AACLC,eAAW;AACTC,8BAAWN,mBAAX,CADS;AAETO,kCAAeP,mBAAf,CAFS;AAGTQ,8BAAWR,mBAAX,CAHS;AAITS,kCAAeT,mBAAf,CAJS;AAKTU,oCAAiBV,mBAAjB,CALS;AAMTW,iCAAcX,mBAAd,CANS;AAOTY,8BAAWZ,mBAAX,CAPS;AAQTa,gCAAab,mBAAb,CARS;AASTc,mCAAgBd,mBAAhB,CATS;AAUTe,kCAAef,mBAAf,CAVS,CAWT;;AAXS;AADN,GAAP;AAeD,CAhBD;AAkBA;;;;;AAGA,IAAMgB,QAAQ;AACZX,aAAWD,YAAYC;AAGzB;;;;AAJc,CAAd;AAOA,IAAMY,UAAU;AACdC,aADc,6BACWC,OADX,EACoB;AAAA,QAAnBC,MAAmB,QAAnBA,MAAmB;AAChCA,WAAOnC,aAAP,EAAsBkC,OAAtB;AACD,GAHa;AAIdE,cAJc,+BAIqBF,OAJrB,EAI8B;AAAA,QAA5BG,QAA4B,SAA5BA,QAA4B;AAAA,QAAlBN,KAAkB,SAAlBA,KAAkB;AAC1CG,YAAQI,IAAR,IAAgB,CAACP,MAAMX,SAAN,CAAgBc,QAAQI,IAAxB,CAAjB,IAAkDD,SAAS,aAAT,EAAwB;AAAEC,YAAMJ,QAAQI,IAAhB;AAAsBtB,YAAM,EAA5B;AAAgCC,oCAAiBR,kBAAjB,CAAhC;AAAuES,qBAAe;AAAtF,KAAxB,CAAlD;AACD,GANa;AAOdqB,gBAPc,iCAOgBL,OAPhB,EAOyB;AAAA,QAArBG,QAAqB,SAArBA,QAAqB;AACrCH,YAAQI,IAAR,IAAgBD,SAAS,aAAT,EAAwB;AAAEC,YAAMJ,QAAQI,IAAhB;AAAsBtB,YAAM,EAA5B;AAAgCC,oCAAiBR,kBAAjB,CAAhC;AAAuES,qBAAe;AAAtF,KAAxB,CAAhB;AACD,GATa;AAUdsB,qBAVc,sCAUmBN,OAVnB,EAU4B;AAAA,QAAnBC,MAAmB,SAAnBA,MAAmB;AACxCA,WAAOlC,sBAAP,EAA+BiC,OAA/B;AACD,GAZa;AAadO,qBAbc,sCAamBP,OAbnB,EAa4B;AAAA,QAAnBC,MAAmB,SAAnBA,MAAmB;AACxCA,WAAOjC,sBAAP,EAA+BgC,OAA/B;AACD;AAfa,CAAhB;AAkBA;;;;AAGA,IAAMQ,0DACH1C,aADG,EACa,UAAC+B,KAAD,EAAQG,OAAR,EAAoB;AAAA,MAC7BI,IAD6B,GACwBJ,OADxB,CAC7BI,IAD6B;AAAA,MACvBtB,IADuB,GACwBkB,OADxB,CACvBlB,IADuB;AAAA,MACjBC,UADiB,GACwBiB,OADxB,CACjBjB,UADiB;AAAA,MACLC,aADK,GACwBgB,OADxB,CACLhB,aADK;AAAA,MACUyB,SADV,GACwBT,OADxB,CACUS,SADV;AAEnCA,cAAYA,aAAa,IAAzB;AACA3B,UAAQX,IAAI0B,MAAMX,SAAV,YAAwBkB,IAAxB,YAAqC9B,OAAOQ,IAAP,EAAa2B,SAAb,CAArC,CAAR;AACA1B,gBAAcZ,IAAI0B,MAAMX,SAAV,YAAwBkB,IAAxB,kBAA2CrB,UAA3C,CAAd;AACA2B,SAAOC,SAAP,CAAiB3B,aAAjB,KAAmCb,IAAI0B,MAAMX,SAAV,YAAwBkB,IAAxB,qBAA8CpB,aAA9C,CAAnC;AACD,CAPG,+BAQHjB,sBARG,EAQsB,UAAC8B,KAAD,EAAQG,OAAR,EAAoB;AAAA,MACtCI,IADsC,GAClBJ,OADkB,CACtCI,IADsC;AAAA,MAChCtB,IADgC,GAClBkB,OADkB,CAChClB,IADgC;AAAA,MAC1B8B,GAD0B,GAClBZ,OADkB,CAC1BY,GAD0B;AAE5C,MAAIC,QAAQzC,UAAUF,IAAI2B,MAAMX,SAAV,YAAwBkB,IAAxB,WAAV,sBAAmDQ,GAAnD,EAAyD9B,KAAK8B,GAAL,CAAzD,EAAZ;AACAC,YAAU,CAAC,CAAX,IAAgB,CAAC,CAAC/B,IAAlB,IAA0BX,IAAI0B,MAAMX,SAAV,YAAwBkB,IAAxB,mBAAqCS,KAArC,QAA+C/B,IAA/C,CAA1B;AACAe,QAAMX,SAAN,CAAgBkB,IAAhB,EAAsB,MAAtB,IAAgCU,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,EAAd,EAAkBnB,MAAMX,SAAN,CAAgBkB,IAAhB,EAAsB,MAAtB,CAAlB,CAAd,CAAhC;AACD,CAbG,+BAcHpC,sBAdG,EAcsB,UAAC6B,KAAD,EAAQG,OAAR,EAAoB;AAAA,MACtCI,IADsC,GAClBJ,OADkB,CACtCI,IADsC;AAAA,MAChCtB,IADgC,GAClBkB,OADkB,CAChClB,IADgC;AAAA,MAC1B8B,GAD0B,GAClBZ,OADkB,CAC1BY,GAD0B;AAE5C,MAAIC,QAAQzC,UAAUF,IAAI2B,MAAMX,SAAV,YAAwBkB,IAAxB,WAAV,sBAAmDQ,GAAnD,EAAyD9B,KAAK8B,GAAL,CAAzD,EAAZ;AACAC,YAAU,CAAC,CAAX,IAAgB,CAAC,CAAC/B,IAAlB,IAA0BT,MAAMwB,MAAMX,SAAZ,YAA0BkB,IAA1B,mBAAuCS,KAAvC,OAA1B;AACAhB,QAAMX,SAAN,CAAgBkB,IAAhB,EAAsB,MAAtB,IAAgCU,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,EAAd,EAAkBnB,MAAMX,SAAN,CAAgBkB,IAAhB,EAAsB,MAAtB,CAAlB,CAAd,CAAhC;AACD,CAnBG,+BAoBHnC,iBApBG,EAoBiB,UAAC4B,KAAD,EAAW;AAC9BA,QAAMX,SAAN,GAAkBD,YAAYC,SAA9B;AACD,CAtBG,cAAN;AAyBA;;;;AAGA,IAAM+B,UAAU;AACd/B,aAAW;AAAA,WAAS;AAAA,aAAQhB,IAAI2B,MAAMX,SAAV,EAAqBkB,IAArB,EAA2B;AAAEtB,cAAM,EAAR;AAAYC,sCAAiBR,kBAAjB,CAAZ;AAAmDS,uBAAe;AAAlE,OAA3B,CAAR;AAAA,KAAT;AAAA;AADG,CAAhB;AAIA,eAAe;AACbkC,cAAY,IADC;AAEbrB,cAFa;AAGbC,kBAHa;AAIbU,sBAJa;AAKbS;AALa,CAAf","sourcesContent":["import {\n  SET_DATA_VIEW,\n  UPDATE_DATA_VIEW_ENTRY,\n  REMOVE_DATA_VIEW_ENTRY,\n  SET_INITIAL_STATE\n} from '../mutation-types'\nimport { get, set, findIndex, unset, uniqBy } from 'lodash'\n\nconst DEFAULT_PAGINATION = { current_page: null, total_pages: null, total: null, count: null, per_page: null }\nconst DEFAULT_MODULE_DATA = {\n  data: [],\n  pagination: { ...DEFAULT_PAGINATION },\n  lastScrollPos: 0\n}\n\nconst initState = () => {\n  return {\n    dataViews: {\n      user: { ...DEFAULT_MODULE_DATA },\n      employee: { ...DEFAULT_MODULE_DATA },\n      city: { ...DEFAULT_MODULE_DATA },\n      position: { ...DEFAULT_MODULE_DATA },\n      department: { ...DEFAULT_MODULE_DATA },\n      setting: { ...DEFAULT_MODULE_DATA },\n      plan: { ...DEFAULT_MODULE_DATA },\n      branch: { ...DEFAULT_MODULE_DATA },\n      candidate: { ...DEFAULT_MODULE_DATA },\n      contract: { ...DEFAULT_MODULE_DATA }\n      // planDetail: { ...DEFAULT_MODULE_DATA }\n    }\n  }\n}\n\n/**\n * state\n */\nconst state = {\n  dataViews: initState().dataViews\n}\n\n/**\n * actions\n */\nconst actions = {\n  setDataview ({ commit }, payload) {\n    commit(SET_DATA_VIEW, payload)\n  },\n  initDataview ({ dispatch, state }, payload) {\n    payload.name && !state.dataViews[payload.name] && dispatch('setDataview', { name: payload.name, data: [], pagination: { ...DEFAULT_PAGINATION }, lastScrollPos: 0 })\n  },\n  reloadDataview ({ dispatch }, payload) {\n    payload.name && dispatch('setDataview', { name: payload.name, data: [], pagination: { ...DEFAULT_PAGINATION }, lastScrollPos: 0 })\n  },\n  updateDataviewEntry ({ commit }, payload) {\n    commit(UPDATE_DATA_VIEW_ENTRY, payload)\n  },\n  removeDataviewEntry ({ commit }, payload) {\n    commit(REMOVE_DATA_VIEW_ENTRY, payload)\n  }\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_DATA_VIEW]: (state, payload) => {\n    let { name, data, pagination, lastScrollPos, uniqueKey } = payload\n    uniqueKey = uniqueKey || 'id'\n    data && set(state.dataViews, `${name}.data`, uniqBy(data, uniqueKey))\n    pagination && set(state.dataViews, `${name}.pagination`, pagination)\n    Number.isInteger(lastScrollPos) && set(state.dataViews, `${name}.lastScrollPos`, lastScrollPos)\n  },\n  [UPDATE_DATA_VIEW_ENTRY]: (state, payload) => {\n    let { name, data, key } = payload\n    let index = findIndex(get(state.dataViews, `${name}.data`), { [key]: data[key] })\n    index !== -1 && !!data && set(state.dataViews, `${name}.data[${index}]`, data)\n    state.dataViews[name]['data'] = Object.values(Object.assign({}, state.dataViews[name]['data']))\n  },\n  [REMOVE_DATA_VIEW_ENTRY]: (state, payload) => {\n    let { name, data, key } = payload\n    let index = findIndex(get(state.dataViews, `${name}.data`), { [key]: data[key] })\n    index !== -1 && !!data && unset(state.dataViews, `${name}.data[${index}]`)\n    state.dataViews[name]['data'] = Object.values(Object.assign({}, state.dataViews[name]['data']))\n  },\n  [SET_INITIAL_STATE]: (state) => {\n    state.dataViews = initState().dataViews\n  }\n}\n\n/**\n * getters\n */\nconst getters = {\n  dataViews: state => name => get(state.dataViews, name, { data: [], pagination: { ...DEFAULT_PAGINATION }, lastScrollPos: 0 })\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}