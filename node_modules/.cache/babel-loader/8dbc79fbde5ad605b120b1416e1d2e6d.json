{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/candidate.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/candidate.js","mtime":1538377839382},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1534394480737},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":1534394476611},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":1534394478618}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport { SET_CANDIDATE } from '../mutation-types';\n\nvar initState = function initState() {\n  return {\n    candidate: {}\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  candidate: initState().candidate\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  setCandidate: function setCandidate(_ref, payload) {\n    var commit = _ref.commit;\n\n    var _ref2 = payload || {},\n        candidate = _ref2.candidate;\n\n    commit(SET_CANDIDATE, candidate);\n  },\n  fetchCandidate: function fetchCandidate(_ref3, payload) {\n    var commit = _ref3.commit,\n        dispatch = _ref3.dispatch;\n\n    var _ref4 = payload || {},\n        params = _ref4.params,\n        error = _ref4.error;\n\n    dispatch('fetchApi', {\n      url: \"candidates\",\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_CANDIDATE, response.data);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  getCandidate: function getCandidate(_ref5, payload) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n\n    var _ref6 = payload || {},\n        candidateId = _ref6.candidateId,\n        params = _ref6.params,\n        error = _ref6.error;\n\n    dispatch('fetchApi', {\n      url: \"candidates/\".concat(candidateId),\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_CANDIDATE, response.data);\n        console.log('data SET_CANDIDATE', response);\n      },\n      error: error\n    }, {\n      root: true\n    });\n  },\n  createCandidate: function createCandidate(_ref7, payload) {\n    var commit = _ref7.commit,\n        dispatch = _ref7.dispatch;\n    var candidate = payload.candidate,\n        cb = payload.cb,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: 'candidates',\n      method: 'POST',\n      data: candidate,\n      params: params,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  updateCandidate: function updateCandidate(_ref8, payload) {\n    var commit = _ref8.commit,\n        dispatch = _ref8.dispatch;\n    var id = payload.id,\n        candidate = payload.candidate,\n        cb = payload.cb,\n        params = payload.params;\n    dispatch('fetchApi', {\n      url: \"candidates/\".concat(id),\n      method: 'PUT',\n      data: candidate,\n      params: params,\n      success: cb\n    }, {\n      root: true\n    });\n  },\n  deleteCandidate: function deleteCandidate(_ref9, payload) {\n    var commit = _ref9.commit,\n        dispatch = _ref9.dispatch;\n\n    var _ref10 = payload || {},\n        id = _ref10.id,\n        cb = _ref10.cb,\n        error = _ref10.error;\n\n    dispatch('fetchApi', {\n      url: \"candidates/\".concat(id),\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, {\n      root: true\n    });\n  }\n};\n/**\n * mutations\n */\n\nvar mutations = _defineProperty({}, SET_CANDIDATE, function (state, candidate) {\n  state.candidate = candidate;\n});\n/**\n * getters\n */\n\n\nvar getters = {\n  candidateDetail: function candidateDetail(state) {\n    return state.candidate;\n  },\n  candidateAll: function candidateAll(state) {\n    return state.candidate;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["src/store/modules/candidate.js"],"names":["SET_CANDIDATE","initState","candidate","state","actions","setCandidate","payload","commit","fetchCandidate","dispatch","params","error","url","method","success","response","data","root","getCandidate","candidateId","console","log","createCandidate","cb","updateCandidate","id","deleteCandidate","mutations","getters","candidateDetail","candidateAll","namespaced"],"mappings":";AAAA,SACEA,aADF,QAEO,mBAFP;;AAGA,IAAMC,YAAY,SAAZA,SAAY,GAAM;AACtB,SAAO;AACLC,eAAW;AADN,GAAP;AAGD,CAJD;AAMA;;;;;AAIA,IAAMC,QAAQ;AACZD,aAAWD,YAAYC;AAGzB;;;;AAJc,CAAd;AAQA,IAAME,UAAU;AACdC,cADc,8BACYC,OADZ,EACqB;AAAA,QAAnBC,MAAmB,QAAnBA,MAAmB;;AAAA,gBACbD,WAAW,EADE;AAAA,QAC3BJ,SAD2B,SAC3BA,SAD2B;;AAEjCK,WAAOP,aAAP,EAAsBE,SAAtB;AACD,GAJa;AAKdM,gBALc,iCAKwBF,OALxB,EAKiC;AAAA,QAA7BC,MAA6B,SAA7BA,MAA6B;AAAA,QAArBE,QAAqB,SAArBA,QAAqB;;AAAA,gBACrBH,WAAW,EADU;AAAA,QACvCI,MADuC,SACvCA,MADuC;AAAA,QAC/BC,KAD+B,SAC/BA,KAD+B;;AAE7CF,aACE,UADF,EAEE;AACEG,uBADF;AAEEC,cAAQ,KAFV;AAGEH,cAAQA,UAAU,EAHpB;AAIEI,eAAS,iBAACC,QAAD,EAAc;AACrBR,eAAOP,aAAP,EAAsBe,SAASC,IAA/B;AACD,OANH;AAOEL,aAAOA;AAPT,KAFF,EAWE;AAAEM,YAAM;AAAR,KAXF;AAaD,GApBa;AAqBdC,cArBc,+BAqBsBZ,OArBtB,EAqB+B;AAAA,QAA7BC,MAA6B,SAA7BA,MAA6B;AAAA,QAArBE,QAAqB,SAArBA,QAAqB;;AAAA,gBACNH,WAAW,EADL;AAAA,QACrCa,WADqC,SACrCA,WADqC;AAAA,QACxBT,MADwB,SACxBA,MADwB;AAAA,QAChBC,KADgB,SAChBA,KADgB;;AAE3CF,aACE,UADF,EAEE;AACEG,gCAAmBO,WAAnB,CADF;AAEEN,cAAQ,KAFV;AAGEH,cAAQA,UAAU,EAHpB;AAIEI,eAAS,iBAACC,QAAD,EAAc;AACrBR,eAAOP,aAAP,EAAsBe,SAASC,IAA/B;AACAI,gBAAQC,GAAR,CAAY,oBAAZ,EAAkCN,QAAlC;AACD,OAPH;AAQEJ,aAAOA;AART,KAFF,EAYE;AAAEM,YAAM;AAAR,KAZF;AAcD,GArCa;AAsCdK,iBAtCc,kCAsCyBhB,OAtCzB,EAsCkC;AAAA,QAA7BC,MAA6B,SAA7BA,MAA6B;AAAA,QAArBE,QAAqB,SAArBA,QAAqB;AAAA,QACxCP,SADwC,GACdI,OADc,CACxCJ,SADwC;AAAA,QAC7BqB,EAD6B,GACdjB,OADc,CAC7BiB,EAD6B;AAAA,QACzBb,MADyB,GACdJ,OADc,CACzBI,MADyB;AAE9CD,aAAS,UAAT,EAAqB;AACnBG,WAAK,YADc;AAEnBC,cAAQ,MAFW;AAGnBG,YAAMd,SAHa;AAInBQ,cAAQA,MAJW;AAKnBI,eAASS;AALU,KAArB,EAMG;AAAEN,YAAM;AAAR,KANH;AAOD,GA/Ca;AAgDdO,iBAhDc,kCAgDyBlB,OAhDzB,EAgDkC;AAAA,QAA7BC,MAA6B,SAA7BA,MAA6B;AAAA,QAArBE,QAAqB,SAArBA,QAAqB;AAAA,QACxCgB,EADwC,GACVnB,OADU,CACxCmB,EADwC;AAAA,QACpCvB,SADoC,GACVI,OADU,CACpCJ,SADoC;AAAA,QACzBqB,EADyB,GACVjB,OADU,CACzBiB,EADyB;AAAA,QACrBb,MADqB,GACVJ,OADU,CACrBI,MADqB;AAE9CD,aAAS,UAAT,EAAqB;AACnBG,gCAAmBa,EAAnB,CADmB;AAEnBZ,cAAQ,KAFW;AAGnBG,YAAMd,SAHa;AAInBQ,cAAQA,MAJW;AAKnBI,eAASS;AALU,KAArB,EAMG;AAAEN,YAAM;AAAR,KANH;AAOD,GAzDa;AA0DdS,iBA1Dc,kCA0DyBpB,OA1DzB,EA0DkC;AAAA,QAA7BC,MAA6B,SAA7BA,MAA6B;AAAA,QAArBE,QAAqB,SAArBA,QAAqB;;AAAA,iBACtBH,WAAW,EADW;AAAA,QACxCmB,EADwC,UACxCA,EADwC;AAAA,QACpCF,EADoC,UACpCA,EADoC;AAAA,QAChCZ,KADgC,UAChCA,KADgC;;AAE9CF,aAAS,UAAT,EAAqB;AACnBG,gCAAmBa,EAAnB,CADmB;AAEnBZ,cAAQ,QAFW;AAGnBC,eAASS,EAHU;AAInBZ,aAAOA;AAJY,KAArB,EAKG;AAAEM,YAAM;AAAR,KALH;AAMD;AAlEa,CAAhB;AAqEA;;;;AAGA,IAAMU,gCACH3B,aADG,EACa,UAACG,KAAD,EAAQD,SAAR,EAAsB;AACrCC,QAAMD,SAAN,GAAkBA,SAAlB;AACD,CAHG,CAAN;AAMA;;;;;AAGA,IAAM0B,UAAU;AACdC,mBAAiB,yBAAC1B,KAAD;AAAA,WAAWA,MAAMD,SAAjB;AAAA,GADH;AAEd4B,gBAAc,sBAAC3B,KAAD;AAAA,WAAWA,MAAMD,SAAjB;AAAA;AAFA,CAAhB;AAKA,eAAe;AACb6B,cAAY,IADC;AAEb5B,cAFa;AAGbC,kBAHa;AAIbuB,sBAJa;AAKbC;AALa,CAAf","sourceRoot":"/home/nguyenxuancuong/Sites/hrm_fe","sourcesContent":["import {\n  SET_CANDIDATE\n} from '../mutation-types'\nconst initState = () => {\n  return {\n    candidate: {}\n  }\n}\n\n/**\n * state\n */\n\nconst state = {\n  candidate: initState().candidate\n}\n\n/**\n * actions\n */\n\nconst actions = {\n  setCandidate ({ commit }, payload) {\n    let { candidate } = payload || {}\n    commit(SET_CANDIDATE, candidate)\n  },\n  fetchCandidate ({ commit, dispatch }, payload) {\n    let { params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `candidates`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_CANDIDATE, response.data)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  getCandidate ({ commit, dispatch }, payload) {\n    let { candidateId, params, error } = payload || {}\n    dispatch(\n      'fetchApi',\n      {\n        url: `candidates/${candidateId}`,\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_CANDIDATE, response.data)\n          console.log('data SET_CANDIDATE', response)\n        },\n        error: error\n      },\n      { root: true }\n    )\n  },\n  createCandidate ({ commit, dispatch }, payload) {\n    let { candidate, cb, params } = payload\n    dispatch('fetchApi', {\n      url: 'candidates',\n      method: 'POST',\n      data: candidate,\n      params: params,\n      success: cb\n    }, { root: true })\n  },\n  updateCandidate ({ commit, dispatch }, payload) {\n    let { id, candidate, cb, params } = payload\n    dispatch('fetchApi', {\n      url: `candidates/${id}`,\n      method: 'PUT',\n      data: candidate,\n      params: params,\n      success: cb\n    }, { root: true })\n  },\n  deleteCandidate ({ commit, dispatch }, payload) {\n    let { id, cb, error } = payload || {}\n    dispatch('fetchApi', {\n      url: `candidates/${id}`,\n      method: 'DELETE',\n      success: cb,\n      error: error\n    }, { root: true })\n  }\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_CANDIDATE]: (state, candidate) => {\n    state.candidate = candidate\n  }\n}\n\n/**\n * getters\n */\nconst getters = {\n  candidateDetail: (state) => state.candidate,\n  candidateAll: (state) => state.candidate\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}