{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/employee/FormSub.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/employee/FormSub.vue","mtime":1543237861594},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { filter, debounce } from 'lodash';\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'employeeFormSub',\n  data: function data() {\n    return {\n      colorAddDepartment: 'primary',\n      departments: [],\n      positions: [],\n      branches: [],\n      isLoadingBranch: false,\n      branchIndex: 0,\n      isLoadingPosition: false,\n      positionIndex: 0,\n      employee: {\n        departments: []\n      }\n    };\n  },\n  props: {\n    index: {\n      type: Number,\n      default: 0\n    },\n    dataEmployee: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  watch: {\n    dataEmployee: function dataEmployee(val) {\n      this.setInitData();\n    }\n  },\n  computed: _objectSpread({}, mapGetters('Department', ['departmentByBranch']), mapGetters('Position', ['positionAll']), mapGetters('Branch', ['branchAll'])),\n  methods: _objectSpread({}, mapActions(['fetchApi']), mapActions('Department', ['getDepartmentForEmployee']), mapActions('Position', ['fetchPosition']), mapActions('Branch', ['getBranchs', 'setBranch']), {\n    addDepartment: function addDepartment() {\n      this.employee.departments.push({});\n      this.employee.departments[this.employee.departments.length - 1].branchs = this.branchAll;\n      this.employee.departments[this.employee.departments.length - 1].positions = this.positionAll;\n      this.employee.departments[this.employee.departments.length - 1].loadingBranch = false;\n    },\n    validateBeforeSubmit: function validateBeforeSubmit() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) {} else {\n          _this.$store.dispatch('showNotify', {\n            text: _this.$t('alert.invalid'),\n            color: 'warning'\n          });\n\n          _this.stepEmployee = 1;\n        }\n      });\n    },\n    deleteDepartment: function deleteDepartment(index) {\n      this.employee.departments.splice(index, 1); // this.emitDepartment()\n    },\n    focusInput: function focusInput() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.$refs.focusInput[0].focus();\n      });\n    },\n    searchBranch: debounce(function (index, value) {\n      var _this3 = this;\n\n      this.branchIndex = index;\n      this.isLoadingBranch = true;\n      this.employee.departments[index].department_id = '';\n      this.employee.departments[index].branch_id = '';\n      this.employee.departments[index].branchs = [];\n      this.getBranchs({\n        params: {\n          q: value.target.value,\n          limit: 10\n        },\n        cb: function cb(response) {\n          _this3.employee.departments[index].branchs = response;\n          _this3.isLoadingBranch = false;\n        }\n      });\n    }, 500),\n    clearBranch: function clearBranch(index) {\n      var _this4 = this;\n\n      this.getBranchs({\n        params: {\n          q: '',\n          limit: 10\n        },\n        cb: function cb(response) {\n          _this4.employee.departments[index].branchs = response;\n        }\n      });\n      this.employee.departments[index].department_id = '';\n      this.employee.departments[index].branch_id = '';\n    },\n    clearPosition: function clearPosition(index) {\n      var _this5 = this;\n\n      this.employee.departments[index].position_id = '';\n      this.fetchPosition({\n        params: {\n          q: '',\n          limit: 10\n        },\n        cb: function cb(response) {\n          _this5.employee.departments[index].positions = response;\n        }\n      });\n    },\n    searchPosition: debounce(function (index, value) {\n      var _this6 = this;\n\n      this.isLoadingPosition = true;\n      this.positionIndex = index;\n      this.employee.departments[index].position_id = '';\n      this.employee.departments[index].positions = [];\n      this.fetchPosition({\n        params: {\n          q: value.target.value,\n          limit: 10\n        },\n        cb: function cb(response) {\n          _this6.employee.departments[index].positions = response;\n          _this6.isLoadingPosition = false;\n        }\n      });\n    }, 500),\n    changeBranch: function changeBranch() {\n      this.departmentRequired = 'required';\n    },\n    changeDepartment: function changeDepartment() {\n      this.emitDepartment();\n    },\n    getDepartmentByBranch: function getDepartmentByBranch(branchId) {\n      var array = [];\n\n      if (this.departments.length) {\n        array = filter(this.departments, function (object) {\n          return parseInt(object.branch_id) === parseInt(branchId);\n        });\n      }\n\n      return array;\n    },\n    changePosition: function changePosition() {\n      this.emitDepartment();\n    },\n    // thực hiện emit khi có sự thay đổi về dữ liệu\n    emitDepartment: function emitDepartment() {\n      this.$emit('positionAndDepartment', this.employee.departments);\n    },\n    setInitData: function setInitData() {\n      var dataEmployee = _objectSpread({}, this.dataEmployee);\n\n      this.employee = _objectSpread({}, this.employee, dataEmployee); // nếu mảng dataemployee.departments không có gía trị thì push thêm một mảng rỗng\n\n      if (this.dataEmployee.departments.data) {\n        this.employee.departments = this.dataEmployee.departments.data.length ? this.employee.departments.data : [{}];\n\n        if (this.employee.departments.length) {\n          this.employee.departments.map(function (item) {\n            item.department_id = item.id;\n            return item;\n          });\n        }\n      } else {\n        if (this.employee.departments[0]) {\n          this.employee.departments[0].branchs = this.branchAll;\n          this.employee.departments[0].positions = this.positionAll;\n        }\n      }\n    }\n  }),\n  mounted: function mounted() {\n    if (!this.dataEmployee.departments.data) {\n      this.employee.departments.push({});\n      this.employee.departments[0].branchs = this.branchAll;\n      this.employee.departments[0].positions = this.positionAll;\n      this.employee.departments[0].loadingBranch = false;\n      this.employee.departments[0].loadingPosition = false;\n      /* this.employee.departments[this.employee.departments.length-1].branchs = this.branchAll */\n    }\n\n    if (!this.branchAll.length) {\n      this.getBranchs({\n        params: {\n          limit: 10\n        }\n      });\n    }\n\n    if (!this.positionAll.length) {\n      this.fetchPosition({\n        params: {\n          limit: 10\n        }\n      });\n    }\n  },\n  created: function created() {\n    var _this7 = this;\n\n    this.fetchApi({\n      url: 'departments',\n      method: 'GET',\n      params: {\n        limit: -1\n      },\n      success: function success(response) {\n        _this7.departments = response.data;\n      }\n    });\n    !!this.dataEmployee && this.setInitData();\n  }\n};",{"version":3,"sources":["FormSub.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-form @submit.prevent=\"validateBeforeSubmit\">\n    <v-flex>\n      <!-- branch,department,position -->\n      <v-layout style=\"position: relative\" row wrap sm12 class=\"mt-3\">\n        <!-- <v-flex xs8> -->\n          <v-flex md4>\n            <h3>Chi nhánh</h3>\n          </v-flex>\n          <v-flex md4 class=\"pl-3\">\n            <h3>Phòng ban</h3>\n          </v-flex>\n          <v-flex md3 style=\"margin-left: 30px;\">\n            <h3>Chức danh</h3>\n          </v-flex>\n        </v-layout>\n        <v-layout v-if=\"employee.departments.length\" style=\"clear: both;\" row wrap :key=\"index\" v-for=\"(department, index) in employee.departments\">\n          <v-flex md4>\n            <v-autocomplete\n            :loading=\"isLoadingBranch && branchIndex === index\"\n            ref=\"focusInput\"\n            tabindex=1\n            v-validate=\"'required'\"\n            :error-messages=\"errors.has(`branch_${index}`) ? errors.collect(`branch_${index}`) : []\"\n            :data-vv-as=\"$t('label.name_branch')\"\n            :name=\"`branch_${index}`\"\n            v-model=\"employee.departments[index].branch_id\"\n            label=\"Chi nhánh\"\n            @keyup = \"searchBranch(index, $event)\"\n            :items=\"employee.departments[index].branchs\"\n            item-text=\"name\"\n            item-value=\"id\"\n            placeholder=\"Chi nhánh\"\n            single-line\n            clearable\n            @click:clear=\"clearBranch(index)\"\n            @change=\"changeBranch()\"\n            >\n            <template slot=\"no-data\">\n              <v-list-tile>\n                <v-list-tile-title style=\"color:blue\">\n                  Không tìm thấy chi nhánh\n                </v-list-tile-title>\n              </v-list-tile>\n            </template>\n          </v-autocomplete> </v-flex>\n          <v-spacer></v-spacer>\n          <!-- department -->\n          <v-flex md4 id=\"department_text_long\">\n            <v-select\n            tabindex=2\n            v-validate=\"'required'\"\n            v-model=\"employee.departments[index].department_id\"\n            label=\"Phòng ban\"\n            :error-messages=\"errors.has(`department_${index}`) ? errors.collect(`department_${index}`) : []\"\n            :data-vv-as=\"$t('label.name_department')\"\n            :name=\"`department_${index}`\"\n            :disabled=\"!employee.departments[index].branch_id\"\n            :items=\"getDepartmentByBranch(employee.departments[index].branch_id)\"\n            item-text=\"name\"\n            item-value=\"id\"\n            placeholder=\"Phòng ban\"\n            single-line\n            @change=\"changeDepartment\">\n            <template slot=\"no-data\">\n              <v-list-tile>\n                <v-list-tile-title style=\"color:blue\">\n                  Không có phòng ban\n                </v-list-tile-title>\n              </v-list-tile>\n            </template>\n          </v-select>\n        </v-flex>\n        <v-spacer></v-spacer>\n        <!-- postion -->\n        <v-flex md3>\n          <v-autocomplete\n          tabindex=3\n          :disabled=\"!employee.departments[index].department_id\"\n          v-validate=\"'required'\"\n          :loading=\"isLoadingPosition && positionIndex === index\"\n          v-model=\"employee.departments[index].position_id\"\n          :items=\"employee.departments[index].positions\"\n          item-text=\"name\"\n          item-value=\"id\"\n          :error-messages=\"errors.has(`position_${index}`) ? errors.collect(`position_${index}`) : []\"\n          :data-vv-as=\"$t('label.name_position')\"\n          :name=\"`position_${index}`\"\n          placeholder=\"Chức danh\"\n          single-line\n          clearable\n          @click:clear=\"clearPosition(index)\"\n          @keyup = \"searchPosition(index, $event)\"\n          @change=\"changePosition\">\n          <template slot=\"no-data\">\n            <v-list-tile>\n              <v-list-tile-title style=\"color:blue\">\n                Không tìm thấy chức danh\n              </v-list-tile-title>\n            </v-list-tile>\n          </template>\n        </v-autocomplete>\n      </v-flex>\n      <v-flex xs1 style=\"flex-basis:55px;\">\n        <v-tooltip bottom>\n          <v-btn slot=\"activator\"\n          style=\"margin-top:10px;\"\n          icon color=\"error\"\n          @click=\"deleteDepartment(index)\">\n          <v-icon>delete</v-icon>\n        </v-btn>\n        <span>Xóa</span>\n      </v-tooltip>\n    </v-flex>\n  </v-layout>\n  <v-layout row wrap>\n    <v-tooltip bottom style=\"position: absolute; right: 18px; margin-top: -10px;\">\n      <v-btn slot=\"activator\" class=\"mr-3 mt-0\"\n      icon color=\"primary\"\n      id=\"addDepartment\"\n      @click=\"addDepartment()\">\n      <v-icon>add</v-icon> </v-btn>\n      <span>Thêm chức danh</span>\n    </v-tooltip>\n  </v-layout>\n</v-flex>\n</v-form>\n</template>\n<script>\nimport { filter, debounce } from 'lodash'\nimport { mapGetters, mapActions } from 'vuex'\nexport default {\n  name: 'employeeFormSub',\n  data () {\n    return {\n      colorAddDepartment: 'primary',\n      departments: [],\n      positions: [],\n      branches: [],\n      isLoadingBranch: false,\n      branchIndex: 0,\n      isLoadingPosition: false,\n      positionIndex: 0,\n      employee: {\n        departments: []\n      }\n    }\n  },\n  props: {\n    index: {\n      type: Number,\n      default: 0\n    },\n    dataEmployee: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  watch: {\n    dataEmployee (val) {\n      this.setInitData()\n    }\n  },\n  computed: {\n    ...mapGetters('Department', ['departmentByBranch']),\n    ...mapGetters('Position', ['positionAll']),\n    ...mapGetters('Branch', ['branchAll'])\n  },\n  methods: {\n    ...mapActions(['fetchApi']),\n    ...mapActions('Department', ['getDepartmentForEmployee']),\n    ...mapActions('Position', ['fetchPosition']),\n    ...mapActions('Branch', ['getBranchs', 'setBranch']),\n    addDepartment () {\n      this.employee.departments.push({})\n      this.employee.departments[this.employee.departments.length - 1].branchs = this.branchAll\n      this.employee.departments[this.employee.departments.length - 1].positions = this.positionAll\n      this.employee.departments[this.employee.departments.length - 1].loadingBranch = false\n    },\n    validateBeforeSubmit () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n        } else {\n          this.$store.dispatch('showNotify', {\n            text: this.$t('alert.invalid'),\n            color: 'warning'\n          })\n          this.stepEmployee = 1\n        }\n      })\n    },\n    deleteDepartment (index) {\n      this.employee.departments.splice(index, 1)\n      // this.emitDepartment()\n    },\n    focusInput () {\n      this.$nextTick(() => {\n        this.$refs.focusInput[0].focus()\n      })\n    },\n    searchBranch: debounce(function (index, value) {\n      this.branchIndex = index\n      this.isLoadingBranch = true\n      this.employee.departments[index].department_id = ''\n      this.employee.departments[index].branch_id = ''\n      this.employee.departments[index].branchs = []\n      this.getBranchs({ params: { q: value.target.value, limit: 10 },\n        cb: (response) => {\n          this.employee.departments[index].branchs = response\n          this.isLoadingBranch = false\n        }\n      })\n    }, 500),\n    clearBranch (index) {\n      this.getBranchs({ params: { q: '', limit: 10 },\n        cb: (response) => {\n          this.employee.departments[index].branchs = response\n        }\n      })\n      this.employee.departments[index].department_id = ''\n      this.employee.departments[index].branch_id = ''\n    },\n    clearPosition (index) {\n      this.employee.departments[index].position_id = ''\n      this.fetchPosition({ params: { q: '', limit: 10 },\n        cb: (response) => {\n          this.employee.departments[index].positions = response\n        }\n      })\n    },\n    searchPosition: debounce(function (index, value) {\n      this.isLoadingPosition = true\n      this.positionIndex = index\n      this.employee.departments[index].position_id = ''\n      this.employee.departments[index].positions = []\n      this.fetchPosition({ params: { q: value.target.value, limit: 10 },\n        cb: (response) => {\n          this.employee.departments[index].positions = response\n          this.isLoadingPosition = false\n        }\n      })\n    }, 500),\n    changeBranch () {\n      this.departmentRequired = 'required'\n    },\n    changeDepartment () {\n      this.emitDepartment()\n    },\n    getDepartmentByBranch (branchId) {\n      let array = []\n      if (this.departments.length) {\n        array = filter(this.departments, function (object) { return parseInt(object.branch_id) === parseInt(branchId) })\n      }\n      return array\n    },\n    changePosition () {\n      this.emitDepartment()\n    },\n    // thực hiện emit khi có sự thay đổi về dữ liệu\n    emitDepartment () {\n      this.$emit('positionAndDepartment', this.employee.departments)\n    },\n    setInitData () {\n      let dataEmployee = { ...this.dataEmployee }\n      this.employee = { ...this.employee, ...dataEmployee }\n      // nếu mảng dataemployee.departments không có gía trị thì push thêm một mảng rỗng\n      if (this.dataEmployee.departments.data) {\n        this.employee.departments = this.dataEmployee.departments.data.length ? this.employee.departments.data : [{}]\n        if (this.employee.departments.length) {\n          this.employee.departments.map((item) => {\n            item.department_id = item.id\n            return item\n          })\n        }\n      } else {\n        if (this.employee.departments[0]) {\n          this.employee.departments[0].branchs = this.branchAll\n          this.employee.departments[0].positions = this.positionAll\n        }\n      }\n    }\n  },\n  mounted () {\n    if (!this.dataEmployee.departments.data) {\n      this.employee.departments.push({})\n      this.employee.departments[0].branchs = this.branchAll\n      this.employee.departments[0].positions = this.positionAll\n      this.employee.departments[0].loadingBranch = false\n      this.employee.departments[0].loadingPosition = false\n      /* this.employee.departments[this.employee.departments.length-1].branchs = this.branchAll */\n    }\n    if (!this.branchAll.length) {\n      this.getBranchs({ params: { limit: 10 } })\n    }\n    if (!this.positionAll.length) {\n      this.fetchPosition({ params: { limit: 10 } })\n    }\n  },\n  created () {\n    this.fetchApi({\n      url: 'departments',\n      method: 'GET',\n      params: {\n        limit: -1\n      },\n      success: (response) => {\n        this.departments = response.data\n      }\n    })\n    !!this.dataEmployee && this.setInitData()\n  }\n}\n</script>\n<style>\n#department_text_long .v-select__selection {\n  /* BOTH of the following are required for text-overflow */\n  overflow: hidden !important;\n  white-space: nowrap !important;\n  text-overflow: ellipsis !important;\n  width: 250px;\n}\n#department_text_long .v-select__selection input::after{\n  width: 260px;\n  content: \"...\";\n}\n</style>\n"],"sourceRoot":"src/views/employee"}]}