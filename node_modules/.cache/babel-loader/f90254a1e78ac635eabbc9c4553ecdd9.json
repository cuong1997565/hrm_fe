{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/plansHrm/Listting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/plansHrm/Listting.vue","mtime":1543379311872},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/typeof\";\nimport _objectSpread from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { format, subMonths } from 'date-fns';\nimport DialogConfirm from '@/components/DialogConfirm';\nimport DataView from '@/components/DataView/DataView';\nimport FormCandidate from './FormCandidate';\nimport { mapFields } from 'vuex-map-fields';\nimport { map, filter, debounce } from 'lodash';\nimport { mapActions, mapGetters } from 'vuex';\nimport 'vuetify-daterange-picker/dist/vuetify-daterange-picker.css';\nexport default {\n  name: 'PlanListting',\n  components: {\n    DialogConfirm: DialogConfirm,\n    DataView: DataView,\n    FormCandidate: FormCandidate\n  },\n  props: {\n    isMini: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'index'\n    },\n    closeDialog: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      dialogDetail: false,\n      valuePlan: null,\n      dataViewHeight: 0,\n      dataViewName: 'plan',\n      dialogDelete: false,\n      dialogCreateCandidate: false,\n      dialogSendRequest: false,\n      isLoadingBranchListting: false,\n      isLoadingPositonListting: false,\n      isLoadingEmployee: false,\n      idPlan: null,\n      idSendRequest: null,\n      positions: [],\n      employees: {\n        emails: []\n      },\n      params: {\n        q: '',\n        branchId: '',\n        departmentId: '',\n        positionId: '',\n        status: '',\n        date: '',\n        dateStart: '',\n        dateEnd: '',\n        include: 'details.department.branch'\n      },\n      // filter theo status\n      status: [{\n        'id': 0,\n        'name': 'Mới'\n      }, {\n        'id': 1,\n        'name': 'Chờ duyệt'\n      }, {\n        'id': 2,\n        'name': 'Đã duyệt'\n      }, {\n        'id': 3,\n        'name': 'Không duyệt'\n      }, {\n        'id': 4,\n        'name': 'Hoàn thành'\n      }, {\n        'id': 5,\n        'name': 'Hủy'\n      }],\n      // filter theo date\n      dialog: false,\n      date: null,\n      range: [],\n      departments: [],\n      dateRangeOptions: {\n        maxDate: format('2030-12-30', 'YYYY-MM-DD'),\n        startDate: format(new Date(), 'YYYY-MM-DD'),\n        endDate: format(new Date(), 'YYYY-MM-DD'),\n        format: 'DD/MM/YYYY',\n        presets: [{\n          label: 'Hôm nay',\n          range: [format(new Date(), 'YYYY-MM-DD'), format(new Date(), 'YYYY-MM-DD')]\n        }, {\n          label: '2 tháng sau',\n          range: [format(subMonths(new Date(), 0), 'YYYY-MM-DD'), format(subMonths(new Date(), -2), 'YYYY-MM-DD')]\n        }, {\n          label: '6 tháng sau',\n          range: [format(subMonths(new Date(), 0), 'YYYY-MM-DD'), format(subMonths(new Date(), -6), 'YYYY-MM-DD')]\n        }, {\n          label: '1 năm sau',\n          range: [format(subMonths(new Date(), 0), 'YYYY-MM-DD'), format(subMonths(new Date(), -12), 'YYYY-MM-DD')]\n        }, {\n          label: '2 năm sau',\n          range: [format(subMonths(new Date(), 0), 'YYYY-MM-DD'), format(subMonths(new Date(), -24), 'YYYY-MM-DD')]\n        }, {\n          label: '3 năm sau',\n          range: [format(subMonths(new Date(), 0), 'YYYY-MM-DD'), format(subMonths(new Date(), -36), 'YYYY-MM-DD')]\n        }]\n      },\n      dateRangeOptionsLabel: {\n        start: 'Ngày bắt đầu',\n        end: 'Ngày kết thúc',\n        preset: 'Thời gian' // end filter theo date\n\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters('Branch', ['branchAll']), mapGetters('Position', ['positionAll']), mapGetters('Department', ['departmentByBranch']), mapGetters('Plan', ['filterParams']), mapGetters('Employee', ['employeeAll']), mapFields('Plan', {\n    filterQ: 'params.q',\n    filterBranchId: 'params.branchId',\n    filterDepartmentId: 'params.departmentId',\n    filterPositionId: 'params.positionId',\n    filterStatus: 'params.status',\n    filterDate: 'params.date',\n    filterDateStart: 'params.dateStart',\n    filterDateEnd: 'params.dateEnd'\n  }), {\n    isIndex: function isIndex() {\n      return this.type === 'index';\n    }\n  }),\n  // created () {\n  //   this.fetchPlan()\n  // },\n  methods: _objectSpread({}, mapActions(['setMiniDrawer']), mapActions(['fetchApi']), mapActions('Plan', ['fetchPlan', 'deletePlan', 'getPlan', 'changeStatusPlan', 'clearFilter', 'clearFilterBranch', 'clearFilterDate', 'clearFilterPosition']), mapActions(['showNotify', 'setMiniDrawer']), mapActions('Dataview', ['removeDataviewEntry', 'updateDataviewEntry']), mapActions('Department', ['getDepartmentForEmployee']), mapActions('Position', ['fetchPosition']), mapActions('Branch', ['getBranchs']), mapActions('Employee', ['getEmployees']), {\n    // get department by branch\n    getDepartmentByBranch: function getDepartmentByBranch(branchId) {\n      var array = [];\n\n      if (this.departments.length) {\n        array = filter(this.departments, function (object) {\n          return parseInt(object.branch_id) === parseInt(branchId);\n        });\n      }\n\n      return array;\n    },\n    planDetail: function planDetail(plan) {\n      if (!this.$route.params.id) {\n        this.clearFilter();\n        this.filter();\n      }\n\n      this.getPlan({\n        planId: plan.id,\n        params: {\n          include: 'details.department.branch,candidates.employees'\n        }\n      });\n      this.$router.push({\n        name: 'plan-detail',\n        params: {\n          id: plan.id\n        }\n      });\n    },\n    // filter name\n    clearSearch: function clearSearch() {\n      if (this.$route.params.id) {\n        this.clearFilter();\n      }\n\n      this.changeSearch();\n      this.filter();\n    },\n    changeSearch: debounce(function () {\n      this.filter();\n    }, 500),\n    filter: function filter() {\n      this.$refs[this.dataViewName].$emit('reload');\n    },\n    // end filter name\n    // filter date\n    submitDate: function submitDate() {\n      if (this.range[0] === undefined || this.range[1] === undefined) {\n        this.filterParams.dateStart = this.dateRangeOptions.startDate;\n        this.filterParams.dateEnd = this.dateRangeOptions.endDate;\n      } else {\n        this.filterParams.dateStart = this.range[0];\n        this.filterParams.dateEnd = this.range[1];\n      }\n\n      this.filterParams.date = 'Từ ngày ' + this.filterParams.dateStart;\n      this.filterParams.date += ' đến ngày ' + this.filterParams.dateEnd;\n      this.dialog = false;\n      this.changeSearch();\n    },\n    openDialog: function openDialog() {\n      this.dialog = true;\n    },\n    close: function close() {\n      this.dialog = false;\n    },\n    clearDate: function clearDate() {\n      this.clearFilterDate();\n      this.changeSearch();\n    },\n    onDateRangeChange: function onDateRangeChange(range) {\n      this.range = range;\n      this.dateRangeOptions.presets[1].range[0] = format(range[0], 'YYYY-MM-DD');\n      this.dateRangeOptions.presets[1].range[1] = format(subMonths(range[0], -2), 'YYYY-MM-DD');\n      this.dateRangeOptions.presets[2].range[0] = format(range[0], 'YYYY-MM-DD');\n      this.dateRangeOptions.presets[2].range[1] = format(subMonths(range[0], -6), 'YYYY-MM-DD');\n      this.dateRangeOptions.presets[3].range[0] = format(range[0], 'YYYY-MM-DD');\n      this.dateRangeOptions.presets[3].range[1] = format(subMonths(range[0], -12), 'YYYY-MM-DD');\n    },\n    // end filter date\n    // xóa plan\n    removeConfirm: function removeConfirm(item) {\n      this.idPlan = item.id;\n      this.valuePlan = item;\n      this.dialogDelete = true;\n    },\n    remove: function remove(confirm) {\n      var _this = this;\n\n      if (confirm) {\n        this.deletePlan({\n          id: this.idPlan,\n          cb: function cb(response) {\n            _this.removeDataviewEntry({\n              name: 'plan',\n              data: _this.valuePlan,\n              key: 'id'\n            });\n\n            _this.$refs[_this.dataViewName].$emit('reload');\n\n            _this.$store.dispatch('showNotify', {\n              text: _this.$t('alert.plan.success_delete'),\n              color: 'success'\n            });\n\n            _this.dialogDelete = false;\n          },\n          error: function error(_error) {\n            if (_error.status === 404) {\n              _this.$store.dispatch('showNotify', {\n                text: _this.$t('alert.not-found'),\n                color: 'warning'\n              });\n            }\n          }\n        });\n      }\n    },\n    // close candidate\n    closeDialogCandidate: function closeDialogCandidate(val) {\n      this.dialogCreateCandidate = val;\n    },\n    // close send request\n    closeDialogSendRequest: function closeDialogSendRequest() {\n      this.dialogSendRequest = false;\n    },\n    // edit plan\n    editPlan: function editPlan(planId) {\n      this.getPlan({\n        planId: planId,\n        params: {\n          include: 'details.department.branch'\n        }\n      });\n      this.$router.push({\n        name: 'plan-hrm-edit',\n        params: {\n          id: planId\n        }\n      });\n    },\n    // gui request\n    sendRequest: function sendRequest(id) {\n      this.$validator.reset();\n      this.dialogSendRequest = true;\n      this.idSendRequest = id;\n    },\n    // filter\n    resetForm: function resetForm() {\n      this.clearFilter();\n      this.changeSearch();\n    },\n    // create candidate\n    createCandidate: function createCandidate(item) {\n      this.dialogCreateCandidate = true;\n      this.idPlan = item.id;\n      this.positions = map(item.details.data, function (item) {\n        return {\n          id: item.position_id,\n          name: item.position_txt\n        };\n      });\n    },\n    // submit send form request\n    submitSendRequest: function submitSendRequest() {\n      var _this2 = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          var data = _objectSpread({}, _this2.employees);\n\n          if (data.emails.length) {\n            data.emails = map(data.emails, 'email');\n          }\n\n          _this2.changeStatusPlan({\n            id: _this2.idSendRequest,\n            mail: data,\n            cb: function cb(response) {\n              _this2.getPlan({\n                planId: _this2.idSendRequest,\n                params: {\n                  include: 'details.department.branch,candidates.employees'\n                },\n                cb: function cb(response) {\n                  _this2.updateDataviewEntry({\n                    name: 'plan',\n                    data: response.data,\n                    key: 'id'\n                  });\n                }\n              });\n\n              _this2.$store.dispatch('showNotify', {\n                text: _this2.$t('alert.plan.success_change_status'),\n                color: 'success'\n              });\n\n              _this2.dialogSendRequest = false;\n            }\n          });\n        }\n      });\n    },\n    searchBranch: debounce(function (value) {\n      var _this3 = this;\n\n      this.isLoadingBranchListting = true;\n      this.getBranchs({\n        params: {\n          q: value.target.value,\n          limit: 10\n        }\n      });\n      setTimeout(function () {\n        _this3.isLoadingBranchListting = false;\n      }, 500);\n    }, 500),\n    searchPosition: debounce(function (value) {\n      var _this4 = this;\n\n      this.isLoadingPositonListting = true;\n      this.fetchPosition({\n        params: {\n          q: value.target.value,\n          limit: 10\n        }\n      });\n      setTimeout(function () {\n        _this4.isLoadingPositonListting = false;\n      }, 500);\n    }, 500),\n    resetBranch: function resetBranch() {\n      this.getBranchs({\n        params: {\n          limit: 10\n        }\n      });\n    },\n    changeBranch: debounce(function (value) {\n      this.filter();\n    }, 500),\n    clearBranch: function clearBranch() {\n      this.clearFilterBranch();\n      this.changeSearch();\n    },\n    changeDepartment: debounce(function () {\n      this.filter();\n    }, 500),\n    clearDepartment: function clearDepartment() {\n      this.changeSearch();\n    },\n    searchEmployee: debounce(function (value) {\n      var _this5 = this;\n\n      this.isLoadingEmployee = true;\n      this.getEmployees({\n        params: {\n          q: value.target.value,\n          limit: 10\n        }\n      });\n      setTimeout(function () {\n        _this5.isLoadingEmployee = false;\n      }, 500);\n    }, 500),\n    removeEmployee: function removeEmployee(item) {\n      // const index = this.employees.emails.indexOf(item)\n      // if (index >= 0) this.employees.emails.splice(index, 1)\n      var index = this.employees.emails.indexOf(item);\n      if (index >= 0) this.employees.emails.splice(index, 1);\n    },\n    clearEmployee: function clearEmployee() {\n      this.getEmployees({\n        params: {\n          limit: 10\n        }\n      });\n    },\n    checkInput: function checkInput(val) {\n      if (val.length) {\n        for (var i = 0; i < val.length; i++) {\n          if (_typeof(val[i]) !== 'object') {\n            console.log('xoas');\n            val.splice(i, 1);\n          }\n        }\n      }\n    }\n  }),\n  mounted: function mounted() {\n    var _this6 = this;\n\n    // filter\n    if (!this.branchAll.length) {\n      this.getBranchs({\n        params: {\n          limit: 10\n        }\n      });\n    }\n\n    if (!this.positionAll.length) {\n      this.fetchPosition({\n        params: {\n          limit: 10\n        }\n      });\n    }\n\n    if (!this.employeeAll.length) {\n      this.getEmployees({\n        params: {\n          limit: 10\n        }\n      });\n    }\n\n    this.fetchApi({\n      url: 'departments',\n      method: 'GET',\n      params: {\n        limit: -1\n      },\n      success: function success(response) {\n        _this6.departments = response.data;\n      }\n    }); // tinh view height --\n\n    if (this.$route.params.id) {\n      this.dataViewHeight = this.$refs.laylout.clientHeight - 55;\n    } else {\n      this.dataViewHeight = this.$refs.laylout.clientHeight - 154;\n    }\n\n    var query = _objectSpread({}, this.$route.query);\n\n    if (query.hasOwnProperty('reload')) {\n      this.$nextTick(function () {\n        _this6.$refs[_this6.dataViewName].$emit('reload');\n      });\n      delete query.reload;\n      this.$router.replace({\n        query: query\n      });\n    }\n  }\n};",{"version":3,"sources":["Listting.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-layout ref=\"laylout\" column fill-height>\n    <div ref=\"header\">\n      <v-toolbar height=\"45px\" class=\"pt-2\" color=\"white\" flat>\n        <v-layout row wrap>\n          <v-flex xs1 :class=\"isMini && 'full-flex-basic max-width-col-2'\">\n            <v-tooltip bottom>\n              <v-btn slot=\"activator\" v-if=\"canAccess('plan.create')\" class=\"mt-3\" icon color=\"primary\"\n              @click=\"$router.push({name: 'plan-hrm-create'})\">\n              <v-icon>add</v-icon>\n            </v-btn>\n            <span>Thêm mới</span>\n          </v-tooltip>\n        </v-flex>\n        <v-flex xs4 class=\"mt-1\" :class=\"isMini && 'full-flex-basic full-width-col-10'\">\n          <v-text-field\n          hide-details\n          single-line\n          @change=\"filter\"\n          v-model=\"filterQ\"\n          @keyup=\"changeSearch\"\n          clearable\n          @click:clear=\"clearSearch\"\n          placeholder=\"Nhập tên...\"\n          ></v-text-field>\n        </v-flex>\n\n        <v-flex xs4 class=\"pl-2 mt-1\" :class=\"isMini && 'd-none'\">\n          <v-tooltip bottom>\n            <v-text-field\n            clearable\n            slot=\"activator\"\n            hide-details\n            v-model=\"filterDate\"\n            single-line\n            placeholder=\"Tìm kiếm theo thời gian\"\n            @click:clear=\"clearDate\"\n            @click=\"openDialog\"\n            ></v-text-field>\n            <v-dialog style=\"margin-left:10px\" v-model=\"dialog\" max-width=\"900px\" max-height=\"1200px\">\n              <v-card>\n                <v-daterange id='dateRange'\n                :options=\"dateRangeOptions\"\n                :labels=\"dateRangeOptionsLabel\"\n                :first-day-of-week=\"1\"\n                next-icon=\"arrow_forward\"\n                prev-icon=\"arrow_back\"\n                @input=\"onDateRangeChange\"></v-daterange>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn flat\n                  @click.native=\"submitDate\"\n                  color=\"success darken-1\"\n                  >\n                  <span>Đồng ý</span>\n                </v-btn>\n                <v-btn color=\"error darken-1\" flat @click.native=\"close\" class=\"ml-2\">Hủy bỏ</v-btn>\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n          <span>Lọc theo thời gian</span></v-tooltip>\n        </v-flex>\n\n        <v-flex xs2 class=\"pl-2 mt-1\" :class=\"isMini && 'd-none'\">\n          <v-autocomplete\n          :items=\"status\"\n          item-value=\"id\"\n          @change=\"filter\"\n          v-model=\"filterStatus\"\n          placeholder=\"Trạng thái\"\n          item-text=\"name\"\n          clearable>\n        </v-autocomplete>\n      </v-flex>\n      <v-flex xs1 :class=\"isMini && 'd-none'\">\n        <v-tooltip bottom>\n          <v-btn class=\"mt-3 ml-4\" slot=\"activator\" icon color=\"primary\" @click=\"resetForm()\">\n            <v-icon>close</v-icon>\n          </v-btn>\n          <span>Reset bộ lọc</span>\n        </v-tooltip>\n      </v-flex>\n    </v-layout>\n  </v-toolbar>\n  <v-toolbar style=\"margin-top: -5px;\" color=\"white\" height=\"50px\" flat :class=\"isMini && 'd-none'\">\n    <v-layout row wrap v-if=\"!isMini\">\n      <v-flex xs4 class=\"pt-0\" :class=\"isMini && 'd-none'\">\n        <v-tooltip bottom>\n          <v-autocomplete\n          :loading=\"isLoadingBranchListting\"\n          slot=\"activator\"\n          class='ml-2'\n          @change=\"changeBranch\"\n          placeholder=\"Chọn chi nhánh\"\n          :items=\"branchAll\"\n          item-text=\"name\"\n          item-value=\"id\"\n          @keyup=\"searchBranch\"\n          v-model=\"filterBranchId\"\n          hide-details\n          single-line\n          clearable\n          @click:clear=\"clearBranch\"\n          >\n          <template slot=\"no-data\">\n            <v-list-tile>\n              <v-list-tile-title style=\"color:blue\">\n                Không tìm thấy chức danh\n              </v-list-tile-title>\n            </v-list-tile>\n          </template>\n        </v-autocomplete>\n        <span>Lọc theo chi nhánh</span>\n      </v-tooltip>\n    </v-flex>\n    <v-flex xs4 :class=\"isMini && 'd-none'\">\n      <v-tooltip bottom>\n        <v-select\n        slot=\"activator\"\n        :disabled=\"!filterBranchId\"\n        class='ml-2'\n        @change=\"changeDepartment\"\n        placeholder=\"Chọn phòng ban\"\n        :items=\"getDepartmentByBranch(filterBranchId)\"\n        item-text=\"name\"\n        item-value=\"id\"\n        v-model=\"filterDepartmentId\"\n        hide-details\n        single-line\n        clearable\n        @click:clear=\"clearDepartment\"\n        >\n        <template slot=\"no-data\">\n          <v-list-tile>\n            <v-list-tile-title style=\"color:blue\">\n              Không tìm thấy phòng ban\n            </v-list-tile-title>\n          </v-list-tile>\n        </template>\n      </v-select>\n      <span>Lọc theo phòng ban</span>\n    </v-tooltip>\n  </v-flex>\n  <v-flex xs4 :class=\"isMini && 'd-none'\">\n    <v-tooltip bottom>\n      <v-autocomplete\n      :loading=\"isLoadingPositonListting\"\n      slot=\"activator\"\n      class='ml-2'\n      @change=\"filter\"\n      placeholder=\"Chọn chức danh\"\n      :items=\"positionAll\"\n      item-text=\"name\"\n      item-value=\"id\"\n      @keyup=\"searchPosition\"\n      v-model=\"filterPositionId\"\n      hide-details\n      single-line\n      clearable\n      @click:clear=\"filter\"\n      >\n      <template slot=\"no-data\">\n        <v-list-tile>\n          <v-list-tile-title style=\"color:blue\">\n            Không tìm thấy chức danh\n          </v-list-tile-title>\n        </v-list-tile>\n      </template>\n    </v-autocomplete>\n    <span>Lọc theo chức danh</span>\n  </v-tooltip>\n</v-flex>\n</v-layout>\n</v-toolbar>\n<v-toolbar height=\"45px\" color=\"white\" flat v-if=\"!isMini\">\n  <v-layout>\n    <v-flex sm1 style=\"flex-basis: 55px\" class=\"text-bold\">\n      #\n    </v-flex>\n    <v-flex sm4 class=\"text-bold\">\n      Tên kế hoạch\n    </v-flex>\n    <v-flex sm2 class=\"text-bold\">\n      Thời gian bắt đầu\n    </v-flex>\n    <v-flex sm2 class=\"text-bold\">\n      Thời gian kết thúc\n    </v-flex>\n    <v-flex sm2 class=\"text-bold\">\n      Trạng thái\n    </v-flex>\n    <v-flex sm1 style=\"flex-basis: 100px\" class=\"text-bold mr-3\">\n      Hành động\n    </v-flex>\n  </v-layout>\n</v-toolbar>\n</div>\n<v-flex xs12 class=\"border-e0-top\">\n  <data-view\n  :name=\"dataViewName\"\n  api-url=\"plans\"\n  v-if=\"dataViewHeight\"\n  :viewHeight=\"dataViewHeight\"\n  :params=\"filterParams\"\n  :ref=\"dataViewName\">\n  <template slot-scope=\"{items}\">\n    <v-list three-line>\n      <template v-for=\"(item, index) in items.data\">\n        <v-list-tile\n        :key=\"'item' + item.id\"\n        avatar\n        @click=\"planDetail(item)\"\n        :inactive=\"item.id === $route.params.id\"\n        :class=\"item.id === $route.params.id && 'grey lighten-2'\"\n        >\n        <v-layout class=\"pa-2\">\n          <v-flex class=\"\" style=\"flex-basis: 55px\" sm1 :class=\"isMini && 'd-none'\">\n            {{ index + 1 }}\n          </v-flex>\n          <v-flex sm4 :class=\"isMini && 'full-flex-basic full-max-width'\">\n           {{ item.title }}\n          </v-flex>\n          <v-flex sm2 class=\"pl-3\" :class=\"isMini && 'd-none'\">\n            {{ item.date_start }}\n          </v-flex>\n          <v-flex sm2 class=\"pl-3\" :class=\"isMini && 'd-none'\">\n            {{ item.date_end }}\n          </v-flex>\n          <v-flex sm2 class=\"pl-3\" :class=\"isMini && 'd-none'\">\n            {{ item.status_txt }}\n          </v-flex>\n          <v-flex xs1 style=\"flex-basis: 100px\" class=\"pl-2\" :class=\"isMini && 'd-none'\">\n           <v-layout row wrap>\n            <v-flex xs6>\n              <v-tooltip bottom>\n                <v-btn slot=\"activator\" class=\"ma-0\" v-if=\"canAccess('plan.update')\" icon\n                @click.stop=\"editPlan(item.id)\">\n                <v-icon class='theme--light teal--text'>edit</v-icon>\n              </v-btn>\n              <span>Sửa</span>\n            </v-tooltip>\n            <v-tooltip bottom>\n              <v-btn slot=\"activator\" class=\"ma-0\" v-if=\"item.status == 0\" icon\n              @click.stop=\"sendRequest(item.id)\">\n              <v-icon size=\"19px\" class=\"theme--light blue--text\">fas fa-share-square</v-icon>\n            </v-btn>\n            <span>Gửi yêu cầu phê duyệt</span>\n          </v-tooltip>\n          </v-flex>\n          <v-flex xs6>\n            <v-tooltip bottom>\n              <v-btn slot=\"activator\" class=\"ma-0\" v-if=\"canAccess('plan.delete')\" icon\n           >\n              <v-icon class=\"theme--light pink--text\">delete</v-icon>\n            </v-btn>\n            <span>Xóa</span>\n          </v-tooltip>\n          <v-tooltip bottom>\n            <v-btn slot=\"activator\" class=\"ma-0\" v-if=\"canAccess('plan.delete')\" icon\n               @click.stop=\"createCandidate(item)\"\n            >\n            <v-icon color=\"orange\" size=\"15px\">fa-user-plus</v-icon>\n          </v-btn>\n          <span>Thêm ứng viên</span>\n        </v-tooltip>\n      </v-flex>\n        </v-layout>\n          </v-flex>\n        </v-layout>\n      </v-list-tile>\n      <v-divider\n      :key=\"'div' + item.id\"\n      v-if=\"index + 1 < items.data.length\"\n      ></v-divider>\n    </template>\n  </v-list>\n</template>\n</data-view>\n</v-flex>\n    <!-- dialog details -->\n    <v-dialog v-model=\"dialogSendRequest\" max-width=\"600px\">\n      <v-form class=\"pa-0\" @submit.prevent=\"submitSendRequest\">\n       <v-card class=\"pa-0\">\n        <v-card-title class=\"pt-3\">\n          <span class=\"headline\" width=\"100%\" style=\"margin:0 auto\">Gửi yêu cầu phê duyệt</span>\n        </v-card-title>\n        <v-divider></v-divider>\n        <v-card-text class=\"pt-3\">\n          <v-container grid-list-md style=\"padding-bottom: 0px\" class=\"white scroll-y\">\n            <v-layout row wrap style=\"margin-top:-15px\">\n                <v-flex xs12>\n                    <v-combobox\n                    v-model=\"employees.emails\"\n                    :loading=\"isLoadingEmployee\"\n                    v-validate=\"'required'\"\n                    :error-messages=\"errors.has('employees.emails') ? errors.collect('employees.emails') : []\"\n                    name=\"employees.emails\"\n                    :data-vv-as=\"$t('label.name_approver')\"\n                    v-if=\"Array.isArray(employeeAll)\"\n                    :items=\"employeeAll\"\n                    @keyup=\"searchEmployee\"\n                    label=\"Chọn người phê duyệt\"\n                    multiple\n                    @input=\"checkInput\"\n                    item-value=\"email\"\n                    item-text=\"email\"\n                    chips\n                    @click:clear=\"clearEmployee()\"\n                    clearable\n                    >\n                    <template\n                      slot=\"selection\"\n                      slot-scope=\"data\"\n                    >\n                     <v-chip\n                        :selected=\"data.selected\"\n                        close\n                        class=\"chip--select-multi\"\n                        @input=\"removeEmployee(data.item)\"\n                      >\n                        <v-list-tile-title v-html=\"data.item.email\"></v-list-tile-title>\n                      </v-chip>\n                    </template>\n                    </v-combobox>\n                </v-flex>\n            </v-layout>\n          </v-container>\n        </v-card-text>\n        <v-divider></v-divider>\n        <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn tabindex=\"5\" color=\"error\" flat @click.native=\"closeDialogSendRequest()\">Hủy bỏ</v-btn>\n            <v-btn tabindex=\"6\" class=\"green--text text-uppercase\" flat type=\"submit\"><span>Gửi yêu cầu</span></v-btn>\n          </v-card-actions>\n      </v-card>\n      </v-form>\n    </v-dialog>\n    <!--dialog candidate-->\n    <v-dialog v-model=\"dialogCreateCandidate\" max-width=\"800px\">\n      <form-candidate\n        @closeDialogCandidate=\"closeDialogCandidate($event)\"\n        :planId=\"idPlan\"\n        :positionsCandidate=\"positions\"\n      />\n    </v-dialog>\n\n<dialog-confirm v-model=\"dialogDelete\" @input=\"remove\"/>\n\n</v-layout>\n<!-- end detail setting -->\n</template>\n<script type=\"text/javascript\">\nimport { format, subMonths } from 'date-fns'\nimport DialogConfirm from '@/components/DialogConfirm'\nimport DataView from '@/components/DataView/DataView'\nimport FormCandidate from './FormCandidate'\nimport { mapFields } from 'vuex-map-fields'\nimport { map, filter, debounce } from 'lodash'\nimport { mapActions, mapGetters } from 'vuex'\nimport 'vuetify-daterange-picker/dist/vuetify-daterange-picker.css'\nexport default {\n  name: 'PlanListting',\n  components: {\n    DialogConfirm,\n    DataView,\n    FormCandidate\n  },\n  props: {\n    isMini: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'index'\n    },\n    closeDialog: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    dialogDetail: false,\n    valuePlan: null,\n    dataViewHeight: 0,\n    dataViewName: 'plan',\n    dialogDelete: false,\n    dialogCreateCandidate: false,\n    dialogSendRequest: false,\n    isLoadingBranchListting: false,\n    isLoadingPositonListting: false,\n    isLoadingEmployee: false,\n    idPlan: null,\n    idSendRequest: null,\n    positions: [],\n    employees: {\n      emails: []\n    },\n    params: {\n      q: '',\n      branchId: '',\n      departmentId: '',\n      positionId: '',\n      status: '',\n      date: '',\n      dateStart: '',\n      dateEnd: '',\n      include: 'details.department.branch'\n    },\n    // filter theo status\n    status: [\n      { 'id': 0, 'name': 'Mới' },\n      { 'id': 1, 'name': 'Chờ duyệt' },\n      { 'id': 2, 'name': 'Đã duyệt' },\n      { 'id': 3, 'name': 'Không duyệt' },\n      { 'id': 4, 'name': 'Hoàn thành' },\n      { 'id': 5, 'name': 'Hủy' }\n    ],\n    // filter theo date\n    dialog: false,\n    date: null,\n    range: [],\n    departments: [],\n    dateRangeOptions: {\n      maxDate: format('2030-12-30', 'YYYY-MM-DD'),\n      startDate: format(new Date(), 'YYYY-MM-DD'),\n      endDate: format(new Date(), 'YYYY-MM-DD'),\n      format: 'DD/MM/YYYY',\n      presets: [\n        {\n          label: 'Hôm nay',\n          range: [\n            format(new Date(), 'YYYY-MM-DD'),\n            format(new Date(), 'YYYY-MM-DD')\n          ]\n        },\n        {\n          label: '2 tháng sau',\n          range: [\n            format(subMonths(new Date(), 0), 'YYYY-MM-DD'),\n            format(subMonths(new Date(), -2), 'YYYY-MM-DD')\n          ]\n        },\n        {\n          label: '6 tháng sau',\n          range: [\n            format(subMonths(new Date(), 0), 'YYYY-MM-DD'),\n            format(subMonths(new Date(), -6), 'YYYY-MM-DD')\n          ]\n        },\n        {\n          label: '1 năm sau',\n          range: [\n            format(subMonths(new Date(), 0), 'YYYY-MM-DD'),\n            format(subMonths(new Date(), -12), 'YYYY-MM-DD')\n          ]\n        },\n        {\n          label: '2 năm sau',\n          range: [\n            format(subMonths(new Date(), 0), 'YYYY-MM-DD'),\n            format(subMonths(new Date(), -24), 'YYYY-MM-DD')\n          ]\n        },\n        {\n          label: '3 năm sau',\n          range: [\n            format(subMonths(new Date(), 0), 'YYYY-MM-DD'),\n            format(subMonths(new Date(), -36), 'YYYY-MM-DD')\n          ]\n        }\n      ]\n    },\n    dateRangeOptionsLabel: {\n      start: 'Ngày bắt đầu',\n      end: 'Ngày kết thúc',\n      preset: 'Thời gian'\n    }\n    // end filter theo date\n  }),\n  computed: {\n    // ...mapGetters('Plan', ['planDetail']),\n    ...mapGetters('Branch', ['branchAll']),\n    ...mapGetters('Position', ['positionAll']),\n    ...mapGetters('Department', ['departmentByBranch']),\n    ...mapGetters('Plan', ['filterParams']),\n    ...mapGetters('Employee', ['employeeAll']),\n    ...mapFields('Plan', {\n      filterQ: 'params.q',\n      filterBranchId: 'params.branchId',\n      filterDepartmentId: 'params.departmentId',\n      filterPositionId: 'params.positionId',\n      filterStatus: 'params.status',\n      filterDate: 'params.date',\n      filterDateStart: 'params.dateStart',\n      filterDateEnd: 'params.dateEnd'\n    }),\n    isIndex () {\n      return this.type === 'index'\n    }\n  },\n  // created () {\n  //   this.fetchPlan()\n  // },\n  methods: {\n    ...mapActions(['setMiniDrawer']),\n    ...mapActions(['fetchApi']),\n    ...mapActions('Plan', ['fetchPlan', 'deletePlan', 'getPlan', 'changeStatusPlan', 'clearFilter', 'clearFilterBranch', 'clearFilterDate', 'clearFilterPosition']),\n    ...mapActions(['showNotify', 'setMiniDrawer']),\n    ...mapActions('Dataview', ['removeDataviewEntry', 'updateDataviewEntry']),\n    ...mapActions('Department', ['getDepartmentForEmployee']),\n    ...mapActions('Position', ['fetchPosition']),\n    ...mapActions('Branch', ['getBranchs']),\n    ...mapActions('Employee', ['getEmployees']),\n    // get department by branch\n    getDepartmentByBranch (branchId) {\n      let array = []\n      if (this.departments.length) {\n        array = filter(this.departments, function (object) {\n          return parseInt(object.branch_id) === parseInt(branchId)\n        })\n      }\n      return array\n    },\n    planDetail (plan) {\n      if (!this.$route.params.id) {\n        this.clearFilter()\n        this.filter()\n      }\n      this.getPlan({ planId: plan.id, params: { include: 'details.department.branch,candidates.employees' } })\n      this.$router.push({ name: 'plan-detail', params: { id: plan.id } })\n    },\n    // filter name\n    clearSearch () {\n      if (this.$route.params.id) {\n        this.clearFilter()\n      }\n      this.changeSearch()\n      this.filter()\n    },\n    changeSearch: debounce(function () {\n      this.filter()\n    }, 500),\n    filter () {\n      this.$refs[this.dataViewName].$emit('reload')\n    },\n    // end filter name\n    // filter date\n    submitDate () {\n      if (this.range[0] === undefined || this.range[1] === undefined) {\n        this.filterParams.dateStart = this.dateRangeOptions.startDate\n        this.filterParams.dateEnd = this.dateRangeOptions.endDate\n      } else {\n        this.filterParams.dateStart = this.range[0]\n        this.filterParams.dateEnd = this.range[1]\n      }\n      this.filterParams.date = 'Từ ngày ' + this.filterParams.dateStart\n      this.filterParams.date += ' đến ngày ' + this.filterParams.dateEnd\n      this.dialog = false\n      this.changeSearch()\n    },\n    openDialog () {\n      this.dialog = true\n    },\n    close () {\n      this.dialog = false\n    },\n    clearDate () {\n      this.clearFilterDate()\n      this.changeSearch()\n    },\n    onDateRangeChange (range) {\n      this.range = range\n      this.dateRangeOptions.presets[1].range[0] = format(range[0], 'YYYY-MM-DD')\n      this.dateRangeOptions.presets[1].range[1] = format(subMonths(range[0], -2), 'YYYY-MM-DD')\n      this.dateRangeOptions.presets[2].range[0] = format(range[0], 'YYYY-MM-DD')\n      this.dateRangeOptions.presets[2].range[1] = format(subMonths(range[0], -6), 'YYYY-MM-DD')\n      this.dateRangeOptions.presets[3].range[0] = format(range[0], 'YYYY-MM-DD')\n      this.dateRangeOptions.presets[3].range[1] = format(subMonths(range[0], -12), 'YYYY-MM-DD')\n    },\n    // end filter date\n    // xóa plan\n    removeConfirm (item) {\n      this.idPlan = item.id\n      this.valuePlan = item\n      this.dialogDelete = true\n    },\n    remove (confirm) {\n      if (confirm) {\n        this.deletePlan({\n          id: this.idPlan,\n          cb: (response) => {\n            this.removeDataviewEntry({\n              name: 'plan',\n              data: this.valuePlan,\n              key: 'id'\n            })\n            this.$refs[this.dataViewName].$emit('reload')\n            this.$store.dispatch('showNotify', {\n              text: this.$t('alert.plan.success_delete'),\n              color: 'success'\n            })\n            this.dialogDelete = false\n          },\n          error: (error) => {\n            if (error.status === 404) {\n              this.$store.dispatch('showNotify', {\n                text: this.$t('alert.not-found'),\n                color: 'warning'\n              })\n            }\n          }\n        })\n      }\n    },\n    // close candidate\n    closeDialogCandidate (val) {\n      this.dialogCreateCandidate = val\n    },\n    // close send request\n    closeDialogSendRequest () {\n      this.dialogSendRequest = false\n    },\n    // edit plan\n    editPlan (planId) {\n      this.getPlan({ planId: planId, params: { include: 'details.department.branch' } })\n      this.$router.push({ name: 'plan-hrm-edit', params: { id: planId } })\n    },\n    // gui request\n    sendRequest (id) {\n      this.$validator.reset()\n      this.dialogSendRequest = true\n      this.idSendRequest = id\n    },\n    // filter\n    resetForm () {\n      this.clearFilter()\n      this.changeSearch()\n    },\n    // create candidate\n    createCandidate (item) {\n      this.dialogCreateCandidate = true\n      this.idPlan = item.id\n      this.positions = map(item.details.data, function (item) {\n        return {\n          id: item.position_id,\n          name: item.position_txt\n        }\n      })\n    },\n    // submit send form request\n    submitSendRequest () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n          let data = { ...this.employees }\n          if (data.emails.length) {\n            data.emails = map(data.emails, 'email')\n          }\n          this.changeStatusPlan({\n            id: this.idSendRequest,\n            mail: data,\n            cb: (response) => {\n              this.getPlan({\n                planId: this.idSendRequest,\n                params: { include: 'details.department.branch,candidates.employees' },\n                cb: (response) => {\n                  this.updateDataviewEntry({\n                    name: 'plan',\n                    data: response.data,\n                    key: 'id'\n                  })\n                }\n              })\n              this.$store.dispatch('showNotify', {\n                text: this.$t('alert.plan.success_change_status'),\n                color: 'success'\n              })\n              this.dialogSendRequest = false\n            }\n          })\n        }\n      })\n    },\n    searchBranch: debounce(function (value) {\n      this.isLoadingBranchListting = true\n      this.getBranchs({ params: { q: value.target.value, limit: 10 } })\n      setTimeout(() => {\n        this.isLoadingBranchListting = false\n      }, 500)\n    }, 500),\n    searchPosition: debounce(function (value) {\n      this.isLoadingPositonListting = true\n      this.fetchPosition({ params: { q: value.target.value, limit: 10 } })\n      setTimeout(() => {\n        this.isLoadingPositonListting = false\n      }, 500)\n    }, 500),\n    resetBranch () {\n      this.getBranchs({ params: { limit: 10 } })\n    },\n    changeBranch: debounce(function (value) {\n      this.filter()\n    }, 500),\n    clearBranch () {\n      this.clearFilterBranch()\n      this.changeSearch()\n    },\n    changeDepartment: debounce(function () {\n      this.filter()\n    }, 500),\n    clearDepartment () {\n      this.changeSearch()\n    },\n    searchEmployee: debounce(function (value) {\n      this.isLoadingEmployee = true\n      this.getEmployees({ params: { q: value.target.value, limit: 10 } })\n      setTimeout(() => {\n        this.isLoadingEmployee = false\n      }, 500)\n    }, 500),\n    removeEmployee (item) {\n      // const index = this.employees.emails.indexOf(item)\n      // if (index >= 0) this.employees.emails.splice(index, 1)\n      const index = this.employees.emails.indexOf(item)\n      if (index >= 0) this.employees.emails.splice(index, 1)\n    },\n\n    clearEmployee () {\n      this.getEmployees({ params: { limit: 10 } })\n    },\n    checkInput (val) {\n      if (val.length) {\n        for (let i = 0; i < val.length; i++) {\n          if (typeof val[i] !== 'object') {\n            console.log('xoas')\n            val.splice(i, 1)\n          }\n        }\n      }\n    }\n  },\n  mounted () {\n    // filter\n    if (!this.branchAll.length) {\n      this.getBranchs({ params: { limit: 10 } })\n    }\n    if (!this.positionAll.length) {\n      this.fetchPosition({ params: { limit: 10 } })\n    }\n    if (!this.employeeAll.length) {\n      this.getEmployees({ params: { limit: 10 } })\n    }\n    this.fetchApi({\n      url: 'departments',\n      method: 'GET',\n      params: {\n        limit: -1\n      },\n      success: (response) => {\n        this.departments = response.data\n      }\n    })\n    // tinh view height --\n    if (this.$route.params.id) {\n      this.dataViewHeight = this.$refs.laylout.clientHeight - 55\n    } else {\n      this.dataViewHeight = this.$refs.laylout.clientHeight - 154\n    }\n    let query = { ...this.$route.query }\n    if (query.hasOwnProperty('reload')) {\n      this.$nextTick(() => {\n        this.$refs[this.dataViewName].$emit('reload')\n      })\n      delete query.reload\n      this.$router.replace({\n        query: query\n      })\n    }\n  }\n}\n</script>\n<style scoped>\n  .scroll-y {\n    max-height: 200px;\n    overflow-y: scroll;\n  }\n  .v-input.v-text-field {\n    margin-top: 0px;\n  }\n  .v-list--three-line {\n    height: 108px !important;\n  }\n  .v-list__tile {\n    height: 108px !important;\n  }\n</style>\n"],"sourceRoot":"src/views/plansHrm"}]}