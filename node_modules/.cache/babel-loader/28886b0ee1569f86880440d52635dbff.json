{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js!/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js??ref--13-0!/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/dataraw.js","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/dataraw.js","mtime":1538377816429},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations;\n\nimport { SET_CITIES, SET_DISTRICTS, SET_INITIAL_STATE } from '../mutation-types';\n\nvar initState = function initState() {\n  return {\n    cities: [],\n    districts: []\n  };\n};\n/**\n * state\n */\n\n\nvar state = {\n  cities: initState().cities,\n  districts: initState().districts\n  /**\n   * actions\n   */\n\n};\nvar actions = {\n  getCities: function getCities(_ref, params) {\n    var commit = _ref.commit,\n        dispatch = _ref.dispatch;\n    dispatch('fetchApi', {\n      url: 'cities',\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_CITIES, response.data);\n      }\n    }, {\n      root: true\n    });\n  },\n  getDistricts: function getDistricts(_ref2, params) {\n    var commit = _ref2.commit,\n        dispatch = _ref2.dispatch;\n    dispatch('fetchApi', {\n      url: 'districts',\n      method: 'GET',\n      params: params || {},\n      success: function success(response) {\n        commit(SET_DISTRICTS, response.data);\n      }\n    }, {\n      root: true\n    });\n  }\n};\n/**\n * mutations\n */\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_CITIES, function (state, cities) {\n  state.cities = cities;\n}), _defineProperty(_mutations, SET_DISTRICTS, function (state, districts) {\n  state.districts = districts;\n}), _defineProperty(_mutations, SET_INITIAL_STATE, function (state) {\n  state.cities = initState().cities;\n  state.districts = initState().districts;\n}), _mutations);\n/**\n * getters\n */\n\nvar getters = {\n  cities: function cities(state) {\n    return state.cities;\n  },\n  districts: function districts(state) {\n    return state.districts;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};",{"version":3,"sources":["/home/nguyenxuancuong/Sites/hrm_fe/src/store/modules/dataraw.js"],"names":["SET_CITIES","SET_DISTRICTS","SET_INITIAL_STATE","initState","cities","districts","state","actions","getCities","params","commit","dispatch","url","method","success","response","data","root","getDistricts","mutations","getters","namespaced"],"mappings":";;;;AAAA,SACEA,UADF,EAEEC,aAFF,EAGEC,iBAHF,QAIO,mBAJP;;AAMA,IAAMC,YAAY,SAAZA,SAAY,GAAM;AACtB,SAAO;AACLC,YAAQ,EADH;AAELC,eAAW;AAFN,GAAP;AAID,CALD;AAOA;;;;;AAGA,IAAMC,QAAQ;AACZF,UAAQD,YAAYC,MADR;AAEZC,aAAWF,YAAYE;AAGzB;;;;AALc,CAAd;AAQA,IAAME,UAAU;AACdC,WADc,2BACmBC,MADnB,EAC2B;AAAA,QAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,QAApBC,QAAoB,QAApBA,QAAoB;AACvCA,aACE,UADF,EAEE;AACEC,WAAK,QADP;AAEEC,cAAQ,KAFV;AAGEJ,cAAQA,UAAU,EAHpB;AAIEK,eAAS,iBAACC,QAAD,EAAc;AACrBL,eAAOV,UAAP,EAAmBe,SAASC,IAA5B;AACD;AANH,KAFF,EAUE;AAAEC,YAAM;AAAR,KAVF;AAYD,GAda;AAedC,cAfc,+BAesBT,MAftB,EAe8B;AAAA,QAA5BC,MAA4B,SAA5BA,MAA4B;AAAA,QAApBC,QAAoB,SAApBA,QAAoB;AAC1CA,aACE,UADF,EAEE;AACEC,WAAK,WADP;AAEEC,cAAQ,KAFV;AAGEJ,cAAQA,UAAU,EAHpB;AAIEK,eAAS,iBAACC,QAAD,EAAc;AACrBL,eAAOT,aAAP,EAAsBc,SAASC,IAA/B;AACD;AANH,KAFF,EAUE;AAAEC,YAAM;AAAR,KAVF;AAYD;AA5Ba,CAAhB;AA+BA;;;;AAGA,IAAME,0DACHnB,UADG,EACU,UAACM,KAAD,EAAQF,MAAR,EAAmB;AAC/BE,QAAMF,MAAN,GAAeA,MAAf;AACD,CAHG,+BAIHH,aAJG,EAIa,UAACK,KAAD,EAAQD,SAAR,EAAsB;AACrCC,QAAMD,SAAN,GAAkBA,SAAlB;AACD,CANG,+BAOHH,iBAPG,EAOiB,UAACI,KAAD,EAAW;AAC9BA,QAAMF,MAAN,GAAeD,YAAYC,MAA3B;AACAE,QAAMD,SAAN,GAAkBF,YAAYE,SAA9B;AACD,CAVG,cAAN;AAaA;;;;AAGA,IAAMe,UAAU;AACdhB,UAAQ,gBAACE,KAAD;AAAA,WAAWA,MAAMF,MAAjB;AAAA,GADM;AAEdC,aAAW,mBAACC,KAAD;AAAA,WAAWA,MAAMD,SAAjB;AAAA;AAFG,CAAhB;AAKA,eAAe;AACbgB,cAAY,IADC;AAEbf,cAFa;AAGbC,kBAHa;AAIbY,sBAJa;AAKbC;AALa,CAAf","sourcesContent":["import {\n  SET_CITIES,\n  SET_DISTRICTS,\n  SET_INITIAL_STATE\n} from '../mutation-types'\n\nconst initState = () => {\n  return {\n    cities: [],\n    districts: []\n  }\n}\n\n/**\n * state\n */\nconst state = {\n  cities: initState().cities,\n  districts: initState().districts\n}\n\n/**\n * actions\n */\nconst actions = {\n  getCities ({ commit, dispatch }, params) {\n    dispatch(\n      'fetchApi',\n      {\n        url: 'cities',\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_CITIES, response.data)\n        }\n      },\n      { root: true }\n    )\n  },\n  getDistricts ({ commit, dispatch }, params) {\n    dispatch(\n      'fetchApi',\n      {\n        url: 'districts',\n        method: 'GET',\n        params: params || {},\n        success: (response) => {\n          commit(SET_DISTRICTS, response.data)\n        }\n      },\n      { root: true }\n    )\n  }\n}\n\n/**\n * mutations\n */\nconst mutations = {\n  [SET_CITIES]: (state, cities) => {\n    state.cities = cities\n  },\n  [SET_DISTRICTS]: (state, districts) => {\n    state.districts = districts\n  },\n  [SET_INITIAL_STATE]: (state) => {\n    state.cities = initState().cities\n    state.districts = initState().districts\n  }\n}\n\n/**\n * getters\n */\nconst getters = {\n  cities: (state) => state.cities,\n  districts: (state) => state.districts\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations,\n  getters\n}\n"]}]}