{"remainingRequest":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nguyenxuancuong/Sites/hrm_fe/src/views/branchHrm/Form.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/nguyenxuancuong/Sites/hrm_fe/src/views/branchHrm/Form.vue","mtime":1542957086441},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/cache-loader/dist/cjs.js","mtime":1538403001796},{"path":"/home/nguyenxuancuong/Sites/hrm_fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlabel{\n  color: #5b5a5a;\n  font-size:17px;\n}\n",{"version":3,"sources":["Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA;AACA;AACA;AACA","file":"Form.vue","sourceRoot":"src/views/branchHrm","sourcesContent":["<template>\n <v-stepper class=\"xs8\" style=\"text-shadow: none inline !important;\" flat v-model=\"stepBranch\">\n\n</v-stepper>\n</template>\n<script>\nimport axios from '../../plugins/axios'\nimport { mapGetters, mapActions } from 'vuex'\nexport default{\n  name: 'BranchForm',\n  components: {\n    DataView\n  },\n  computed: {\n    ...mapGetters(['isFetchingApi']),\n    ...mapGetters('City', ['cityAll', 'districtByCity']),\n    isCreate () {\n      return this.type === 'create'\n    }\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'create'\n    },\n    dataBranch: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  data () {\n    return {\n      stepBranch: 0,\n      districtActive: false,\n      type_branch: '',\n      status: '',\n      districtAll: {},\n      branch: {\n        type: false,\n        status: true\n      },\n      plugins: [\n        'advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker',\n        'searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking',\n        'save table contextmenu directionality emoticons template paste textcolor codesample'\n      ]\n    }\n  },\n  watch: {\n    dataBranch () {\n      this.setInitData()\n    }\n  },\n  methods: {\n    ...mapActions(['fetchApi']),\n    ...mapActions('City', ['getCity', 'getDistrictByCity']),\n    setInitData () {\n      let dataBranch = { ...this.dataBranch }\n      this.branch = { ...this.branch, ...dataBranch }\n    },\n    changedCity (value) {\n      this.districtActive = true\n      this.getDistrictByCity({\n        cityId: value,\n        cb: () => {\n          this.districtAll = this.districtByCity\n        }\n      })\n    },\n    handleImageAdded: async function (file, success, failure) {\n      let formData = new FormData()\n      formData.append('file', file.blob())\n      try {\n        let response = await axios.post('/branches/upload', formData)\n        if (response.data.code === 1) {\n          success(response.data.data.path)\n        } else {\n          return false\n        }\n      } catch (err) {\n        if (err.status === 422) {\n          this.$store.dispatch('showNotify', {\n            text: this.$t('alert.error'),\n            color: 'error'\n          })\n        }\n      }\n    },\n    setEditorContent (e, content) {\n      e.setContent(content || '')\n    },\n    backTabIndex () {\n      this.$refs.firstInput.focus()\n    },\n    backTabIndex2 () {\n      this.$refs.secondInput.focus()\n    },\n    // txt loại chi nhánh\n    typeBranch () {\n      if (this.branch.type) { this.type_branch = 'Chi nhánh chính' } else { this.type_branch = 'Chi nhánh phụ' }\n    },\n    // next step\n    nextStep () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n          this.stepBranch = 2\n          setTimeout(() => {\n            this.$refs.secondInput.focus()\n          }, 300)\n        }\n      })\n    },\n    // khi step 1 xayr ra error thì quay về step 1\n    stepError () {\n      this.stepBranch = 1\n    },\n    // bẳt lỗi trước khi submit\n    validateBeforeSubmit () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n          let branch = Object.assign({}, this.branch)\n          branch.status = branch.status ? 1 : 0\n          branch.type = branch.type ? 1 : 0\n          this.$emit('submit', branch)\n        } else {\n          this.stepBranch = 1\n          this.$store.dispatch('showNotify', {\n            text: this.$t('alert.invalid'),\n            color: 'warning'\n          })\n        }\n      })\n    }\n  },\n  mounted () {\n    this.$nextTick(this.$refs.firstInput.focus)\n  },\n  created () {\n    !!this.dataBranch && this.setInitData()\n    if (this.$route.params.id) {\n      this.districtActive = true\n      this.getDistrictByCity({\n        cityId: this.dataBranch.city_id,\n        cb: () => {\n          this.districtAll = this.districtByCity\n        }\n      })\n    } else {\n      this.getDistrictByCity({\n        cityId: 1,\n        cb: () => {\n          this.districtAll = this.districtByCity\n        }\n      })\n    }\n    this.getCity()\n    this.typeBranch()\n  }\n}\n</script>\n<style>\nlabel{\n  color: #5b5a5a;\n  font-size:17px;\n}\n</style>\n"]}]}